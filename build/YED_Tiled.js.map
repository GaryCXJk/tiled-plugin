{"version":3,"sources":["webpack:///webpack/bootstrap b42c6e7fbb8bd6a8c0c5","webpack:///./src/TiledTilemap.js","webpack:///./src/index.js","webpack:///./src/TilesetManager.js","webpack:///./src/DataManager.js","webpack:///./src/ImageManager.js","webpack:///./src/TiledManager.js","webpack:///./src/Sprite_TiledPriorityTile.js","webpack:///./src/AlphaFilter.js","webpack:///./src/TiledTileLayer.js","webpack:///./src/TiledTileShader.js","webpack:///./src/Game_Map.js","webpack:///./src/Game_Screen.js","webpack:///./src/Game_CharacterBase.js","webpack:///./src/Game_Actor.js","webpack:///./src/Game_Player.js","webpack:///./src/Game_Vehicle.js","webpack:///./src/Game_Interpreter.js","webpack:///./src/Sprite_Character.js","webpack:///./src/Spriteset_Map.js"],"names":["pluginParams","PluginManager","parameters","TiledTilemap","tiledData","indexedBitmaps","_tiledData","_layers","_imageLayers","_objectTiles","_priorityTiles","_priorityTilesCount","setupTiled","_setupSize","_setupAnim","width","_width","height","_height","margin","_margin","tileCols","Math","ceil","_tileWidth","tileRows","_tileHeight","tilewidth","tileheight","_layerWidth","_layerHeight","_mapWidth","_mapHeight","_animFrame","_animDuration","id","_needsRepaint","useSquareShader","Number","hasOwnProperty","layers","layerData","zIndex","type","_createImageLayer","properties","parseInt","collision","toLevel","regionId","tileFlags","layer","layerId","spriteId","Sprite","_counter","alpha","opacity","push","addChild","_createPriorityTiles","size","Array","keys","x","sprite","Sprite_TiledPriorityTile","z","hide","renderer","bitmaps","map","isArray","y","_baseTexture","PIXI","Texture","props","$gameMap","getLayerProperties","tilesetBitmaps","tilesets","forEach","tilesetId","setBitmaps","_updateAnim","needRefresh","key","refresh","startX","startY","ox","oy","roundPixels","floor","origin","offsetX","offsetx","offsetY","offsety","position","origX","origY","clear","_paintTiles","_paintObjectLayers","length","visible","_paintTilesLayer","objects","obj","gid","tileId","textureId","_getTextureId","offsets","dx","dy","positionHeight","_paintPriorityTile","_paintTile","mx","my","horizontalWrap","mod","verticalWrap","tilePosition","TiledManager","extractTileId","rectLayer","children","tileset","w","h","columns","rId","_getAnimTileId","firstgid","ux","uy","indexOf","_isPriorityTile","tileproperties","addRect","tile","tiles","imagewidth","imageheight","anchor","realTextureId","bitmap","setFrame","priority","_getPriority","_getZIndex","show","ignore","ignoreLoading","tilecount","tilesData","animation","frame","duration","tileid","playerZIndex","level","layerIds","hideOnLevel","transition","isShown","minAlpha","transitionStep","removeChild","hideLayer","checkLayerHidden","hasHideProperties","transitionPhase","a","b","repeatX","repeatY","deltaX","deltaY","autoX","autoY","hue","viewportX","viewportY","viewportWidth","viewportHeight","viewportDeltaX","viewportDeltaY","Sprite_Base","TilingSprite","move","Graphics","ImageManager","loadParserParallax","image","addLoadListener","imageWidth","imageHeight","baseX","baseY","stepAutoX","stepAutoY","layerMask","baseWidth","baseHeight","mask","hasViewport","visibility","baseAlpha","tileWidth","tileHeight","display","displayX","displayY","autoXFunction","autoYFunction","beginFill","drawRect","val","ShaderTilemap","addListener","Game_Player","options","d","direction","$gameParty","members","actor","checkFloorEffect","moveStraight","addHideFunction","currentMapLevel","showOnLevel","$gamePlayer","hideOnRegion","hideOnRegions","split","String","regionIds","regions","filter","region","$gameSwitches","value","hideOnSwitch","showOnSwitch","addFlag","createVehicle","setAutoFunction","sin","PI","cos","addPluginCommand","args","mapId","waypoint","fadeType","isNaN","toLowerCase","reserveTransfer","setWaitMode","getParameterFlags","getParameterVehicles","TilesetManager","Error","window","_getFilename","path","paths","_getRealPath","getTileset","realPath","loadTileset","callback","xhr","XMLHttpRequest","open","overrideMimeType","onreadystatechange","readyState","status","responseText","JSON","parse","send","DataManager","_tempTiledData","_tiledLoaded","_loadMapData","loadMapData","call","loadTiledMapData","unloadTiledMapData","idx","processTiledData","tiledLoaded","tilesRequired","source","realTileset","Object","assign","returnTileset","_isMapLoaded","isMapLoaded","defaultLoaded","loadParserTileset","loadEmptyBitmap","shift","filename","slice","join","loadNormalBitmap","_listeners","_hideFunctions","_hideIgnoreFunctions","collisions","levelChanges","_tileFlags","_tileFlagIndex","_vehicles","_vehiclesByIndex","_autoFunctions","_pluginCommands","_fullVehicleData","bgm","name","pan","pitch","volume","characterIndex","characterName","startMapId","_processEncoding","base64","data","decodedData","atob","newData","charCodeAt","objectName","event","recursive","triggerListener","object","constructor","top","proto","__proto__","parentLayer","$gameData","prototype","splice","apply","concat","encoding","encFunc","chunks","chunk","i","startx","starty","chunkIdx","flagIds","flagId","getFlag","getFlagNames","getFlagLocation","flag","bit","group","vehicleName","vehicleData","vehicle","Game_Vehicle","refreshVehicles","vehicles","getAllVehicles","returnVehicles","getVehicle","updateVehicles","update","identifier","functions","getAutoFunction","command","func","pluginCommand","initialize","arguments","create","updateVisibility","fragmentSrc","filters","AlphaFilter","glShaderKey","uniforms","uAlpha","Filter","TiledTileLayer","useSquare","texPerChild","gl","tiledTileShader","plugins","tilemap","maxTextures","shader","setObjectRenderer","bindShader","_globalMat","Matrix","_activeRenderTarget","projectionMatrix","copy","append","worldTransform","toArray","shadowColor","tempScale","_tempScale","ps","pointScale","projectionScale","abs","resolution","af","animationFrame","tileAnim","renderWebGL","CompositeRectTileLayer","GLBuffer","glCore","VertexArrayObject","squareShaderFrag","squareShaderVert","rectShaderFrag","rectShaderVert","TiledTileShader","vert","frag","shaderGenerator","generateFragmentSrc","vertSize","vertPerQuad","anim","stride","fillSamplers","vb","createVao","addIndex","indexBuffer","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","aFrame","aAnim","aTextureId","TilemapShader","defineProperty","Game_Map","get","configurable","varID","_currentMapLevel","$gameVariables","set","setValue","_setup","setup","_tiledInitialized","_levels","_collisionMap","_arrowCollisionMap","_regions","_mapLevelChange","_positionHeightChange","_collisionMapLayers","_arrowCollisionMapLayers","_regionsLayers","_mapLevelChangeLayers","_positionHeightChangeLayers","_tileFlagsLayers","_waypoints","_layerProperties","_autoSize","_autoSizeBorder","_offsets","_camera","focus","isTiledMap","$dataMap","_setupTiled","_refreshList","character","refreshBushDepth","isTiledInitialized","setRefreshDepth","_initializeMapProperties","_initializeInfiniteMap","_setLayerProperties","_initializeMapLevel","_setupCollision","_setupRegion","_setupMapLevelChange","_setupTileFlags","_setupTiledEvents","autoSize","border","infinite","_setMapSize","minX","minY","maxX","maxY","x1","y1","x2","y2","_cropInfiniteMap","min","max","autoBorder","autoSizeBorder","offset","limit","forward","vertical","o","s","realO","lineEmpty","empty","o2","coords","autoFunctions","layerProperties","minimumOpacity","autoSpeedX","funcX","autoFunctionX","autoFunction","tFuncX","both","Function","autoSpeedY","funcY","autoFunctionY","tFuncY","_getLayerTilesets","_getTilesetId","_initializeMapLevelData","dataTypes","defaultData","dataType","defaultValue","typeData","_setupCollisionFull","_setupCollisionArrow","halfWidth","halfHeight","isHalfTile","realX","ids","_getTileset","tileData","collisionUpLeft","collisionUpRight","collisionDownLeft","collisionDownRight","arrowImpassable","arrowCollisionMap","realBit","arrowImpassableDown","arrowImpassableLeft","arrowImpassableRight","arrowImpassableUp","regionMap","regionOffset","levelChangeMap","_setupPositionHeightChange","positionHeightChangeMap","floorHeight","tileFlagMap","_getTileFlags","_combineFlags","flags","flagNames","property","prop","toUpperCase","target","eventId","_events","loadSystemSettings","setLocation","locate","_tiledProperties","_regionId","allIds","index","regionLayer","regionValue","main","regionValues","hideData","getMapLevels","levels","sort","_checkPassage","checkPassage","render","arrows","arrowLayer","arrowValue","renderPassage","getPassageLayers","_isPassable","isPassable","collisionMap","collisionLayer","collisionValue","renderIsPassable","getIsPassableLayers","checkMapLevelChanging","mapLevelChange","mapLevelChangeLayer","mapLevelChangeValue","oldValue","oldLevel","newLevel","checkPositionHeight","positionHeightChange","positionHeightChangeLayer","positionHeightChangeValue","getTileFlags","tileFlagsLayer","tileFlagsValue","renderTileFlags","getTileFlagLayers","checkHasTileFlag","renderHasTileFlag","_isBoatPassable","isBoatPassable","renderIsBoatPassable","_isShipPassable","isShipPassable","renderIsShipPassable","_isAirshipLandOk","isAirshipLandOk","renderIsAirshipLandOk","_isLadder","isLadder","isValid","renderIsLadder","_isBush","isBush","renderIsBush","_isCounter","isCounter","renderIsCounter","_isDamageFloor","isDamageFloor","renderIsDamageFloor","isSlipperyFloor","renderIsSlipperyFloor","_isHealFloor","isHealFloor","getAllLayerProperties","ignoreHidden","getTileProperties","tileProperties","_createVehicles","createVehicles","_refreshVehicles","refereshVehicles","getNames","_vehicle","_boat","boat","_ship","ship","_airship","airship","_updateVehicles","_update","sceneActive","setLayerProperties","autoDuration","Game_Screen","startFlashForHeal","startFlash","Game_CharacterBase","screenZ","_priorityType","_distancePerFrame","distancePerFrame","distance","_refreshBushDepth","_bushDepth","_updateMove","updateMove","hori","_realX","_x","_realY","_y","isMoving","newLocationHeight","_locationHeight","locationHeight","_isCollideWithVehicles","isCollidedWithVehicles","hasCollision","posNt","updateScroll","lastScrolledX","lastScrolledY","scrolledX","scrolledY","centerY","scrollDown","centerX","scrollLeft","scrollRight","scrollUp","_checkFloorEffect","Game_Actor","isOnHealFloor","executeFloorHeal","heal","basicFloorHeal","fdr","maxFloorHeal","gainHp","performMapHeal","_getFloorHPCalculation","typeName","floorHP","actualHP","hp","round","pop","basicFloorDamage","actualDamage","actualHeal","mhp","inBattle","$gameScreen","_initMembers","initMembers","_newWaypoint","_checkEventTriggerHere","checkEventTriggerHere","triggers","_checkMapLevelChangingHere","isInAirship","_getOnVehicle","getOnVehicle","roundXWithDirection","roundYWithDirection","pos","_vehicleType","isInVehicle","_vehicleGettingOn","forceMoveForward","gatherFollowers","_gamePlayerTriggerTouchActionD2","triggerTouchActionD2","TouchInput","isTriggered","isInBoat","isInShip","getOffVehicle","checkEventTriggerThere","setupStartingEvent","_isInVehicle","_reserveTransfer","performTransfer","isTransferring","setDirection","_newDirection","_newMapId","_needsMapReload","newX","_newX","newY","_newY","clearTransferInfo","_clearTransferInfo","_initialize","_initMoveSpeed","initMoveSpeed","moveSpeed","setMoveSpeed","_isMapPassable","isMapPassable","isBoat","isShip","isAirship","tileFlag","$dataSystem","_mapId","setPosition","setImage","_resetDirection","resetDirection","getOff","_driving","setWalkAnime","setStepAnime","$gameSystem","replayWalkingBgm","_pluginCommand","Game_Interpreter","Sprite_Character","_character","Spriteset_Battle","_parallaxContainers","_createTilemap","Spriteset_Map","createTilemap","_tilemap","isLoopHorizontal","isLoopVertical","_baseSprite","_loadTileset","refreshTileset","_tileset","_updateHideOnSpecial","updateImageLayer","updateTileset","_updateHideOnLevel","hideOnSpecial"],"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","file":"YED_Tiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b42c6e7fbb8bd6a8c0c5","import TiledTileLayer from \"./TiledTileLayer\";\r\n\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n/**\r\n * This class handles the tilemap\r\n */\r\nexport class TiledTilemap extends ShaderTilemap {\r\n    initialize(tiledData) {\r\n        this.indexedBitmaps = [];\r\n        this._tiledData = {};\r\n        this._layers = [];\r\n        this._imageLayers = [];\r\n        this._objectTiles = [];\r\n        this._priorityTiles = [];\r\n        this._priorityTilesCount = 0;\r\n        this.tiledData = tiledData;\r\n        super.initialize();\r\n        this.setupTiled();\r\n    }\r\n\r\n    get tiledData() {\r\n        return this._tiledData;\r\n    }\r\n\r\n    set tiledData(val) {\r\n        this._tiledData = val;\r\n        this.setupTiled();\r\n    }\r\n\r\n    setupTiled() {\r\n        this._setupSize();\r\n        this._setupAnim();\r\n    }\r\n\r\n    _setupSize() {\r\n        let width = this._width;\r\n        let height = this._height;\r\n        let margin = this._margin;\r\n        let tileCols = Math.ceil(width / this._tileWidth) + 1;\r\n        let tileRows = Math.ceil(height / this._tileHeight) + 1;\r\n        this._tileWidth = this.tiledData.tilewidth;\r\n        this._tileHeight = this.tiledData.tileheight;\r\n        this._layerWidth = tileCols * this._tileWidth;\r\n        this._layerHeight = tileRows * this._tileHeight;\r\n        this._mapWidth = this.tiledData.width;\r\n        this._mapHeight = this.tiledData.height;\r\n    }\r\n\r\n    _setupAnim() {\r\n        this._animFrame = {};\r\n        this._animDuration = {};\r\n    }\r\n\r\n    _createLayers() {\r\n        let id = 0;\r\n        this._needsRepaint = true;\r\n\r\n        let parameters = PluginManager.parameters('ShaderTilemap');\r\n        let useSquareShader = Number(parameters.hasOwnProperty('squareShader') ? parameters['squareShader'] : 1);\r\n\r\n        for (let layerData of this.tiledData.layers) {\r\n            let zIndex = 0;\r\n            if (layerData.type === \"imagelayer\") {\r\n                this._createImageLayer(layerData, id);\r\n                id++;\r\n                continue;\r\n            }\r\n            if (layerData.type != \"tilelayer\") {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.zIndex) {\r\n                zIndex = parseInt(layerData.properties.zIndex);\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.collision) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.toLevel) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.regionId) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && layerData.properties.tileFlags === 'hide') {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            let layer = new TiledTileLayer(zIndex, [], useSquareShader, 32);\r\n            layer.layerId = id; // @dryami: hack layer index\r\n            layer.spriteId = Sprite._counter++;\r\n            layer.alpha = layerData.opacity;\r\n            this._layers.push(layer);\r\n            this.addChild(layer);\r\n            id++;\r\n        }\r\n\r\n        this._createPriorityTiles();\r\n    }\r\n\r\n    _createPriorityTiles() {\r\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\r\n        let zIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n        if(size > 0) {\r\n            for (let x of Array(size).keys()) {\r\n                let sprite = new Sprite_TiledPriorityTile();\r\n                sprite.z = sprite.zIndex = zIndex;\r\n                sprite.layerId = -1;\r\n                sprite.hide();\r\n                this.addChild(sprite);\r\n                this._priorityTiles.push(sprite);\r\n            }\r\n        }\r\n    }\r\n\r\n    _hackRenderer(renderer) {\r\n        return renderer;\r\n    }\r\n\r\n    refreshTileset() {\r\n        var bitmaps = this.indexedBitmaps.map(function (x) {\r\n            if(Array.isArray(x)) {\r\n                return x.map(function(y) {\r\n                    return y._baseTexture ? new PIXI.Texture(y._baseTexture) : y;\r\n                })\r\n            }\r\n            return x._baseTexture ? new PIXI.Texture(x._baseTexture) : x;\r\n        });\r\n        for (let layer of this._layers) {\r\n            let props = $gameMap.getLayerProperties(layer.layerId);\r\n            let tilesetBitmaps = [];\r\n            if(!props.tilesets) {\r\n                continue;\r\n            }\r\n            props.tilesets.forEach(tilesetId => {\r\n                tilesetBitmaps.push(bitmaps[tilesetId]);\r\n            })\r\n            layer.setBitmaps(tilesetBitmaps);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        this._updateAnim();\r\n    }\r\n\r\n    _updateAnim() {\r\n        let needRefresh = false;\r\n        for (let key in this._animDuration) {\r\n            this._animDuration[key] -= 1;\r\n            if (this._animDuration[key] <= 0) {\r\n                this._animFrame[key] += 1;\r\n                needRefresh = true;\r\n            }\r\n        }\r\n\r\n        if (needRefresh) {\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    _updateLayerPositions(startX, startY) {\r\n        let ox = 0;\r\n        let oy = 0;\r\n        if (this.roundPixels) {\r\n            ox = Math.floor(this.origin.x);\r\n            oy = Math.floor(this.origin.y);\r\n        } else {\r\n            ox = this.origin.x;\r\n            oy = this.origin.y;\r\n        }\r\n\r\n        for (let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            let offsetX = layerData.offsetx || 0;\r\n            let offsetY = layerData.offsety || 0;\r\n            layer.position.x = startX * this._tileWidth - ox + offsetX;\r\n            layer.position.y = startY * this._tileHeight - oy + offsetY;\r\n        }\r\n\r\n        for (let sprite of this._priorityTiles) {\r\n            let layerData = this.tiledData.layers[sprite.layerId];\r\n            let offsetX = layerData ? layerData.offsetx || 0 : 0;\r\n            let offsetY = layerData ? layerData.offsety || 0 : 0;\r\n            sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + sprite.width / 2;\r\n            sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + sprite.height;\r\n        }\r\n    }\r\n\r\n    _paintAllTiles(startX, startY) {\r\n        this._priorityTilesCount = 0;\r\n        for (let layer of this._layers) {\r\n            layer.clear();\r\n            this._paintTiles(layer, startX, startY);\r\n        }\r\n        let id = 0;\r\n        for (let layerData of this.tiledData.layers) {\r\n            if (layerData.type != \"objectgroup\") {\r\n                id++;\r\n                continue;\r\n            }\r\n            this._paintObjectLayers(id, startX, startY);\r\n            id++;\r\n        }\r\n        while (this._priorityTilesCount < this._priorityTiles.length) {\r\n            let sprite = this._priorityTiles[this._priorityTilesCount];\r\n            sprite.hide();\r\n            sprite.layerId = -1;\r\n            this._priorityTilesCount++;\r\n        }\r\n    }\r\n\r\n    _paintTiles(layer, startX, startY) {\r\n        let layerData = this.tiledData.layers[layer.layerId];\r\n\r\n        if (!layerData.visible) {\r\n            return;\r\n        }\r\n\r\n        if (layerData.type == \"tilelayer\") {\r\n            this._paintTilesLayer(layer, startX, startY);\r\n        }\r\n    }\r\n\r\n    _paintObjectLayers(layerId, startX, startY) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        let objects = layerData.objects || [];\r\n\r\n        for (let obj of objects) {\r\n            if (!obj.gid) {\r\n                continue;\r\n            }\r\n            if (!obj.visible) {\r\n                continue;\r\n            }\r\n            let tileId = obj.gid;\r\n            let textureId = this._getTextureId(tileId);\r\n            let offsets = $gameMap.offsets();\r\n            let dx = obj.x - (startX + offsets.x) * this._tileWidth;\r\n            let dy = obj.y - (startY + offsets.y) * this._tileHeight - obj.height;\r\n            let positionHeight = 0;\r\n            let zIndex = false;\r\n            if(obj.properties) {\r\n                if(obj.properties.positionHeight) {\r\n                    positionHeight = obj.properties.positionHeight;\r\n                }\r\n                if(obj.properties.hasOwnProperty('zIndex')) {\r\n                    zIndex = obj.properties.zIndex;\r\n                }\r\n            }\r\n            this._paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight, zIndex);\r\n        }\r\n    }\r\n\r\n    _paintTilesLayer(layer, startX, startY) {\r\n        let tileCols = Math.ceil(this._width / this._tileWidth) + 1;\r\n        let tileRows = Math.ceil(this._height / this._tileHeight) + 1;\r\n\r\n        for (let y of Array(tileRows).keys()) {\r\n            for (let x of Array(tileCols).keys()) {\r\n                this._paintTile(layer, startX, startY, x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    _paintTile(layer, startX, startY, x, y) {\r\n        let mx = x + startX;\r\n        let my = y + startY;\r\n        if (this.horizontalWrap) {\r\n            mx = mx.mod(this._mapWidth);\r\n        }\r\n        if (this.verticalWrap) {\r\n            my = my.mod(this._mapHeight);\r\n        }\r\n        let tilePosition = mx + my * this._mapWidth;\r\n        let tileId = TiledManager.extractTileId(this.tiledData.layers[layer.layerId], tilePosition);\r\n        let rectLayer = layer.children[0];\r\n        let textureId = 0;\r\n        let props = $gameMap.getLayerProperties(layer.layerId);\r\n\r\n        if (!tileId) {\r\n            return;\r\n        }\r\n\r\n        // TODO: Problem with offsets\r\n        if (mx < 0 || mx >= this._mapWidth || my < 0 || my >= this._mapHeight) {\r\n            return;\r\n        }\r\n\r\n        textureId = this._getTextureId(tileId);\r\n        let tileset = this.tiledData.tilesets[textureId];\r\n        let dx = x * this._tileWidth;\r\n        let dy = y * this._tileHeight;\r\n        let w = tileset.tilewidth;\r\n        let h = tileset.tileheight;\r\n        let tileCols = tileset.columns;\r\n        let rId = this._getAnimTileId(textureId, tileId - tileset.firstgid);\r\n        let ux = (rId % tileCols) * w;\r\n        let uy = Math.floor(rId / tileCols) * h;\r\n\r\n        if(props.tilesets && props.tilesets.indexOf(textureId) > -1) {\r\n            textureId = props.tilesets.indexOf(textureId);\r\n        }\r\n\r\n        if (this._isPriorityTile(layer.layerId)) {\r\n            let positionHeight = 0;\r\n            if(this.tiledData.layers[layer.layerId].properties.positionHeight) {\r\n                positionHeight+= this.tiledData.layers[layer.layerId].properties.positionHeight || 0\r\n            }\r\n            if(tileset.tileproperties &&\r\n                tileset.tileproperties[tileId - tileset.firstgid] &&\r\n                tileset.tileproperties[tileId - tileset.firstgid].positionHeight) {\r\n                positionHeight+= tileset.tileproperties[tileId - tileset.firstgid].positionHeight || 0\r\n            }\r\n            this._paintPriorityTile(layer.layerId, textureId, tileId, startX, startY, dx, dy, positionHeight);\r\n            return;\r\n        }\r\n\r\n        rectLayer.addRect(textureId, ux, uy, dx, dy, w, h);\r\n    }\r\n\r\n    _paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight = 0, zIndex = false) {\r\n        let tileset = this.tiledData.tilesets[textureId];\r\n        var tile = tileset.tiles ? tileset.tiles[tileId - tileset.firstgid] || {} : {};\r\n        let w = tile.imagewidth || tileset.tilewidth;\r\n        let h = tile.imageheight || tileset.tileheight;\r\n        let tileCols = tileset.columns;\r\n        let rId = this._getAnimTileId(textureId, tileId - tileset.firstgid);\r\n        let ux = (rId % tileCols) * w;\r\n        let uy = Math.floor(rId / tileCols) * h;\r\n        let sprite = this._priorityTiles[this._priorityTilesCount];\r\n        let layerData = this.tiledData.layers[layerId];\r\n        let offsetX = layerData ? layerData.offsetx || 0 : 0;\r\n        let offsetY = layerData ? layerData.offsety || 0 : 0;\r\n        let ox = 0;\r\n        let oy = 0;\r\n        if (this.roundPixels) {\r\n            ox = Math.floor(this.origin.x);\r\n            oy = Math.floor(this.origin.y);\r\n        } else {\r\n            ox = this.origin.x;\r\n            oy = this.origin.y;\r\n        }\r\n\r\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\r\n        if(this._priorityTilesCount >= this._priorityTiles.length) {\r\n            if (size > 0) {\r\n                return;\r\n            } else {\r\n                sprite = new Sprite_TiledPriorityTile();\r\n                sprite.z = sprite.zIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n                this.addChild(sprite);\r\n                this._priorityTiles.push(sprite);\r\n            }\r\n        }\r\n\r\n        sprite.layerId = layerId;\r\n        sprite.anchor.x = 0.5;\r\n        sprite.anchor.y = 1.0;\r\n        sprite.origX = dx;\r\n        sprite.origY = dy;\r\n        sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + w / 2;\r\n        sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + h;\r\n        \r\n        let realTextureId = this._getTextureId(tileId, true);\r\n        if(Array.isArray(this.indexedBitmaps[realTextureId])) {\r\n            var tile = tileset.tiles[tileId - tileset.firstgid];\r\n            sprite.bitmap = this.indexedBitmaps[realTextureId][tileId - tileset.firstgid];\r\n            sprite.setFrame(0, 0, tile.imagewidth, tile.imageheight);\r\n        } else {\r\n            sprite.bitmap = this.indexedBitmaps[realTextureId];\r\n            sprite.setFrame(ux, uy, w, h);\r\n        }\r\n        sprite.priority = this._getPriority(layerId);\r\n        sprite.z = sprite.zIndex = (zIndex !== false ? zIndex : this._getZIndex(layerId));\r\n        sprite.positionHeight = positionHeight;\r\n        sprite.show();\r\n\r\n        this._priorityTilesCount += 1;\r\n    }\r\n\r\n    _getTextureId(tileId, ignore = false) {\r\n        let textureId = 0;\r\n        for (let tileset of this.tiledData.tilesets) {\r\n            if (ignore && tileset.properties && tileset.properties.ignoreLoading) {\r\n                continue;\r\n            }\r\n            if (tileId < tileset.firstgid\r\n                || tileId >= tileset.firstgid + tileset.tilecount) {\r\n                textureId++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        return textureId;\r\n    }\r\n\r\n    _getAnimTileId(textureId, tileId) {\r\n        let tilesData = this.tiledData.tilesets[textureId].tiles;\r\n        if (!tilesData) {\r\n            return tileId;\r\n        }\r\n        if (!tilesData[tileId]) {\r\n            return tileId;\r\n        }\r\n        if (!tilesData[tileId].animation) {\r\n            return tileId;\r\n        }\r\n        let animation = tilesData[tileId].animation;\r\n        this._animFrame[tileId] = this._animFrame[tileId] || 0;\r\n        let frame = this._animFrame[tileId];\r\n        this._animFrame[tileId] = !!animation[frame] ? frame : 0;\r\n        frame = this._animFrame[tileId];\r\n        let duration = animation[frame].duration / 1000 * 60;\r\n        this._animDuration[tileId] = this._animDuration[tileId] || duration;\r\n        if (this._animDuration[tileId] <= 0) {\r\n            this._animDuration[tileId] = duration;\r\n        }\r\n        return animation[frame].tileid;\r\n    }\r\n\r\n    _getPriority(layerId) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        if (!layerData.properties) {\r\n            return 0;\r\n        }\r\n        if (!layerData.properties.priority) {\r\n            return 0;\r\n        }\r\n        return parseInt(layerData.properties.priority)\r\n    }\r\n\r\n    _isPriorityTile(layerId) {\r\n        let playerZIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n        let zIndex = this._getZIndex(layerId);\r\n        return this._getPriority(layerId) > 0\r\n            && zIndex === playerZIndex;\r\n    }\r\n\r\n    _getZIndex(layerId) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        if (!layerData) {\r\n            return 0;\r\n        }\r\n        if (!layerData.properties || !layerData.properties.zIndex) {\r\n            return 0;\r\n        }\r\n        return parseInt(layerData.properties.zIndex);\r\n    }\r\n\r\n    /**\r\n     * Hides a layer based on the level the player is on\r\n     * \r\n     * This method has been deprecated in favor of the more general method.\r\n     */\r\n    hideOnLevel(level) {\r\n        let layerIds = [];\r\n        for (let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            if (layerData.properties && layerData.properties.hasOwnProperty(\"hideOnLevel\")) {\r\n                if (parseInt(layerData.properties.hideOnLevel) !== level) {\r\n                    if(layer.transition) {\r\n                        /* If this layer has a transition, we'll need to tell the layer that\r\n                           it's supposed to be showing. */\r\n                           layer.isShown = true;\r\n                    }\r\n                    this.addChild(layer);\r\n                    continue;\r\n                }\r\n                /* Since the layer is supposed to be hidden, let's first let it transition if\r\n                   it has a transition fadeout. */\r\n                if(layer.transition) {\r\n                    layer.isShown = false;\r\n                    if(layer.minAlpha > 0 || layer.transitionStep > 0) {\r\n                        this.addChild(layer)\r\n                        continue;\r\n                    }\r\n                }\r\n                /* Otherwise remove the layer and hide it */\r\n                layerIds.push(layer.layerId);\r\n                this.removeChild(layer);\r\n            }\r\n        }\r\n        this._priorityTiles.forEach(sprite => {\r\n            if(layerIds.indexOf(sprite.layerId) > -1) {\r\n                sprite.visible = true;\r\n            }\r\n        })\r\n    }\r\n    \r\n    /**\r\n     * Hides layers on certain special conditions\r\n     * \r\n     * This method will analyze each layer, then checks them with certain conditions. If\r\n     * they meet one condition, they will be hidden.\r\n     * \r\n     * It also handles fading in and out layers.\r\n     */\r\n    hideOnSpecial() {\r\n        /* Iterates through each layer */\r\n        for(let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n\t\t\tif(layerData.properties) {\r\n                let hideLayer = TiledManager.checkLayerHidden(layerData);\r\n                \r\n\t\t\t\t/* If the layer has a hide property, run this code.\r\n\t\t\t\t * You don't need to run it for layers that don't have any properties that would\r\n\t\t\t\t   hide this layer. */\r\n\t\t\t\tif (TiledManager.hasHideProperties(layerData)) {\r\n\t\t\t\t\t/* If the layer isn't supposed to be hidden, add the layer to the container */\r\n                    let props = $gameMap.getLayerProperties(layer.layerId);\r\n\t\t\t\t\tif (!hideLayer) {\r\n                        if(props.transition) {\r\n                            /* If this layer has a transition, we'll need to tell the layer that\r\n                               it's supposed to be showing. */\r\n                               props.isShown = true;\r\n                        }\r\n\t\t\t\t\t\tthis.addChild(layer);\r\n\t\t\t\t\t\tcontinue;\r\n                    }\r\n                    /* Since the layer is supposed to be hidden, let's first let it transition if\r\n                       it has a transition fadeout. */\r\n                    if(props.transition) {\r\n                        props.isShown = false;\r\n                        if(props.minAlpha > 0 || props.transitionPhase > 0) {\r\n                            this.addChild(layer)\r\n                            continue;\r\n                        }\r\n                    }\r\n                    /* Otherwise remove the layer and hide it */\r\n\t\t\t\t\tthis.removeChild(layer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n    }\r\n\t\r\n    _compareChildOrder(a, b) {\r\n        if((this._layers.indexOf(a) > -1 || this._imageLayers.indexOf(a) > -1) &&\r\n            (this._layers.indexOf(b) > -1 || this._imageLayers.indexOf(b) > -1)) {\r\n            if ((a.z || 0) !== (b.z || 0)) {\r\n                return (a.z || 0) - (b.z || 0);\r\n            } else if ((a.priority || 0) !== (b.priority || 0)) {\r\n                return (a.priority || 0) - (b.priority || 0);\r\n            } else if((a.layerId || 0) !== (b.layerId || 0)) {\r\n                return (a.layerId || 0) - (b.layerId || 0);\r\n            } else {\r\n                return a.spriteId - b.spriteId;\r\n            }\r\n        } else if ((a.z || 0) !== (b.z || 0)) {\r\n            return (a.z || 0) - (b.z || 0);\r\n        } else if (((a.y || 0) + (a.positionHeight || 0)) !== ((b.y || 0) + (b.positionHeight || 0))) {\r\n            return ((a.y || 0) + (a.positionHeight || 0)) - ((b.y || 0) + (b.positionHeight || 0));\r\n        } else if ((a.priority || 0) !== (b.priority || 0)) {\r\n            return (a.priority || 0) - (b.priority || 0);\r\n        } else {\r\n            return a.spriteId - b.spriteId;\r\n        }\r\n    }\r\n\r\n    /* Parallax map stuff */\r\n\r\n    _createImageLayer(layerData, id) {\r\n        let zIndex = 0;\r\n        let repeatX = false;\r\n        let repeatY = false;\r\n        let deltaX = 1;\r\n        let deltaY = 1;\r\n        let autoX = 0;\r\n        let autoY = 0;\r\n        let hue = 0;\r\n\t\tlet viewportX = 0;\r\n\t\tlet viewportY = 0;\r\n\t\tlet viewportWidth = 0;\r\n\t\tlet viewportHeight = 0;\r\n\t\tlet viewportDeltaX = 0;\r\n\t\tlet viewportDeltaY = 0;\r\n\r\n        let props = $gameMap.getLayerProperties(id);\r\n\r\n        if(!!layerData.properties) {\r\n            if(!!layerData.properties.ignoreLoading) {\r\n                return;\r\n            }\r\n            if (!!layerData.properties.zIndex) {\r\n                zIndex = parseInt(layerData.properties.zIndex);\r\n            }\r\n            if(layerData.properties.hasOwnProperty('repeatX')) {\r\n                repeatX = !!layerData.properties.repeatX;\r\n            }\r\n            if(layerData.properties.hasOwnProperty('repeatY')) {\r\n                repeatY = !!layerData.properties.repeatY;\r\n            }\r\n            if(layerData.properties.hasOwnProperty('deltaX')) {\r\n                deltaX = layerData.properties.deltaX;\r\n            }\r\n            if(layerData.properties.hasOwnProperty('deltaY')) {\r\n                deltaY = layerData.properties.deltaY;\r\n            }\r\n            if(!!layerData.properties.autoX) {\r\n                autoX = layerData.properties.autoX;\r\n            }\r\n            if(!!layerData.properties.autoY) {\r\n                autoY = layerData.properties.autoY;\r\n            }\r\n            if(!!layerData.properties.hue) {\r\n                hue = parseInt(layerData.properties.hue)\r\n            }\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportX')) {\r\n\t\t\t\tviewportX = layerData.properties.viewportX;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportY')) {\r\n\t\t\t\tviewportX = layerData.properties.viewportY;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportWidth')) {\r\n\t\t\t\tviewportWidth = layerData.properties.viewportWidth;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportHeight')) {\r\n\t\t\t\tviewportHeight = layerData.properties.viewportHeight;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaX')) {\r\n\t\t\t\tviewportDeltaX = layerData.properties.viewportDeltaX;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaY')) {\r\n\t\t\t\tviewportDeltaY = layerData.properties.viewportDeltaY;\r\n\t\t\t}\r\n        }\r\n\r\n        let layer;\r\n\r\n        if(!repeatX && !repeatY && !autoX && !autoY) {\r\n            layer = new Sprite_Base();\r\n        } else {\r\n            layer = new TilingSprite();\r\n            layer.move(0, 0, Graphics.width, Graphics.height);\r\n        }\r\n        layer.layerId = id;\r\n        layer.spriteId = Sprite._counter++;\r\n        layer.alpha = layerData.opacity;\r\n        layer.bitmap = ImageManager.loadParserParallax(layerData.image, hue);\r\n        layer.bitmap.addLoadListener(() => {\r\n            props.imageWidth = layer.bitmap.width;\r\n            props.imageHeight = layer.bitmap.height;\r\n        })\r\n        layer.baseX = layerData.x + (layerData.offsetx || 0);\r\n        layer.baseY = layerData.y + (layerData.offsety || 0);\r\n        layer.z = layer.zIndex = zIndex;\r\n        layer.repeatX = repeatX;\r\n        layer.repeatY = repeatY;\r\n        layer.deltaX = deltaX;\r\n        layer.deltaY = deltaY;\r\n        layer.stepAutoX = autoX;\r\n        layer.stepAutoY = autoY;\r\n        layer.autoX = 0;\r\n        layer.autoY = 0;\r\n\t\tif(viewportWidth || viewportHeight) {\r\n\t\t\tviewportWidth = viewportWidth || Graphics.width;\r\n\t\t\tviewportHeight = viewportHeight || Graphics.height;\r\n\t\t\tlet layerMask = new PIXI.Graphics();\r\n\t\t\tlayerMask.baseX = viewportX;\r\n\t\t\tlayerMask.baseY = viewportY;\r\n\t\t\tlayerMask.baseWidth = viewportWidth;\r\n\t\t\tlayerMask.baseHeight = viewportHeight;\r\n\t\t\tlayerMask.deltaX = viewportDeltaX;\r\n\t\t\tlayerMask.deltaY = viewportDeltaY;\r\n\t\t\tlayer.mask = layerMask;\r\n\t\t\tlayer.hasViewport = true;\r\n\t\t}\r\n        this._imageLayers.push(layer);\r\n        this.addChild(layer);\r\n    }\r\n\r\n    updateImageLayer() {\r\n        this._imageLayers.forEach(layer => {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            let props = $gameMap.getLayerProperties(layer.layerId);\r\n            if(TiledManager.hasHideProperties(layerData)) {\r\n                let visibility = TiledManager.checkLayerHidden(layerData);\r\n                if(props.transition) {\r\n                    layer.alpha = (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\r\n                    visibility = props.minAlpha > 0 || props.transitionPhase > 0;\r\n                }\r\n                layer.visible = visibility;\r\n            }\r\n\t\t\tlet offsets = $gameMap.offsets();\r\n\t\t\toffsets.x*= $gameMap.tileWidth();\r\n            offsets.y*= $gameMap.tileHeight();\r\n            let display = {\r\n                x: $gameMap.displayX() * $gameMap.tileWidth() - offsets.x,\r\n                y: $gameMap.displayY() * $gameMap.tileHeight() - offsets.y\r\n            }\r\n            if(!!layer.origin) {\r\n                let autoX = props.autoXFunction ? props.autoXFunction(props.autoX, props.autoY || 0) : 0;\r\n                let autoY = props.autoYFunction ? props.autoYFunction(props.autoX || 0, props.autoY) : 0;\r\n                if(!layer.repeatX) {\r\n                    layer.origin.x = layer.baseX - offsets.x + autoX;\r\n                    layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\r\n                    layer.width = layer.bitmap.width;\r\n                } else {\r\n                    layer.origin.x = layer.baseX - offsets.x + autoX + display.x * layer.deltaX;\r\n                    layer.x = 0;\r\n                    layer.width = Graphics.width;\r\n                }\r\n                if(!layer.repeatY) {\r\n                    layer.origin.y = layer.baseY - offsets.y + autoY;\r\n                    layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\r\n                    layer.height = layer.bitmap.height;\r\n                } else {\r\n                    layer.origin.y = layer.baseY - offsets.y + autoY + display.y * layer.deltaY;\r\n                    layer.y = 0;\r\n                    layer.height = Graphics.height;\r\n                }\r\n            } else {\r\n                layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\r\n                layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\r\n            }\r\n\t\t\tif(layer.hasViewport) {\r\n\t\t\t\tlet viewportX = layer.mask.baseX - offsets.x - display.x * layer.mask.deltaX;\r\n\t\t\t\tlet viewportY = layer.mask.baseY - offsets.y - display.y * layer.mask.deltaY;\r\n\t\t\t\tlayer.mask.clear();\r\n\t\t\t\tlayer.mask.beginFill(0xffffff, 1);\r\n\t\t\t\tlayer.mask.drawRect(viewportX, viewportY, layer.mask.baseWidth, layer.mask.baseHeight);\r\n\t\t\t}\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTilemap.js","import \"./TilesetManager\";\r\nimport \"./DataManager\";\r\nimport \"./ImageManager\";\r\nimport \"./TiledManager\";\r\nimport \"./Sprite_TiledPriorityTile\";\r\nimport \"./AlphaFilter\";\r\nimport { TiledTilemap } from \"./TiledTilemap\";\r\nimport \"./Game_Map\";\r\nimport \"./Game_Screen\";\r\nimport \"./Game_CharacterBase\";\r\nimport \"./Game_Actor\";\r\nimport \"./Game_Player\";\r\nimport \"./Game_Vehicle\";\r\nimport \"./Game_Interpreter\";\r\nimport \"./Sprite_Character\";\r\nimport \"./Spriteset_Map\";\r\n\r\n/* INITIALIZES LISTENERS */\r\n\r\n// Add floor damage while on a slippery floor\r\nTiledManager.addListener(Game_Player, 'slipperyfloor', function(options) {\r\n    const d = options.direction\r\n    $gameParty.members().forEach(actor => {\r\n        actor.checkFloorEffect();\r\n    })\r\n    this.moveStraight(d);\r\n})\r\n\r\n/* INITIALIZES HIDE FUNCTIONS */\r\n\r\nTiledManager.addHideFunction('hideOnLevel', function(layerData) {\r\n    /* Hide if player is on certain level */\r\n    let level = $gameMap.currentMapLevel;\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.hideOnLevel) === level) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n});\r\n\r\nTiledManager.addHideFunction('showOnLevel', function(layerData) {\r\n    /* Show if player is on certain level */\r\n    let level = $gameMap.currentMapLevel;\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.showOnLevel) !== level) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n});\r\n\r\nTiledManager.addHideFunction('hideOnRegion', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionId = $gamePlayer.regionId();\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.hideOnRegion) === regionId) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnRegions', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionId = $gamePlayer.regionId();\r\n    let hideLayer = false;\r\n    if(layerData.properties.hideOnRegions.split(',').indexOf(String(regionId)) !== -1) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnAnyRegions', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionIds = $gamePlayer.regionIds();\r\n    let hideLayer = false;\r\n    let regions = layerData.properties.hideOnRegions.split(',');\r\n    if(regions.filter(region => regionIds.indexOf(region) > -1).length > 0) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnSwitch', function(layerData) {\r\n    /* Hide if switch is on */\r\n    let hideLayer = false;\r\n    if($gameSwitches.value(layerData.properties.hideOnSwitch)) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n})\r\n\r\nTiledManager.addHideFunction('showOnSwitch', function(layerData) {\r\n    /* Show if switch is on */\r\n    let hideLayer = false;\r\n    if(!$gameSwitches.value(layerData.properties.showOnSwitch)) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n})\r\n\r\n/* INITIALIZES FLAGS */\r\n\r\nTiledManager.addFlag('boat', 'ship', 'airship')\r\nTiledManager.addFlag('ladder', 'bush', 'counter', 'damage')\r\nTiledManager.addFlag('ice', 'autoDown', 'autoLeft', 'autoRight', 'autoUp')\r\nTiledManager.addFlag('heal')\r\n\r\n/* INITIALIZES VEHICLES */\r\n\r\nTiledManager.createVehicle('boat', true)\r\nTiledManager.createVehicle('ship', true)\r\nTiledManager.createVehicle('airship', true)\r\n\r\n/* INITIALIZES AUTO FUNCTIONS */\r\n\r\nTiledManager.setAutoFunction('linear', {\r\n    x: (x, y) => { return x; },\r\n    y: (x, y) => { return y; }\r\n})\r\n\r\nTiledManager.setAutoFunction('sine', {\r\n    x: (x, y) => { return Math.sin(x * Math.PI / 180); },\r\n    y: (x, y) => { return Math.sin(y * Math.PI / 180); }\r\n})\r\n\r\nTiledManager.setAutoFunction('cosine', {\r\n    x: (x, y) => { return Math.cos(x * Math.PI / 180); },\r\n    y: (x, y) => { return Math.cos(y * Math.PI / 180); }\r\n})\r\n\r\n/* INITIALIZES PLUGIN COMMANDS */\r\n\r\nTiledManager.addPluginCommand('TiledTransferPlayer', function(args) {\r\n    let mapId = parseInt(args[0]);\r\n    let waypoint = args[1];\r\n    let direction = args.length > 2 ? args[2] : 0;\r\n    let fadeType = args.length > 3 ? args[3] : 2;\r\n    if(isNaN(direction)) {\r\n        switch(direction.toLowerCase()) {\r\n            case 'down':\r\n                direction = 2;\r\n                break;\r\n            case 'left':\r\n                direction = 4;\r\n                break;\r\n            case 'right':\r\n                direction = 6;\r\n                break;\r\n            case 'up':\r\n                direction = 8;\r\n                break;\r\n            default:\r\n                direction = 0;\r\n                break;\r\n        }\r\n    } else {\r\n        direction = parseInt(direction);\r\n    }\r\n    if(isNaN(fadeType)) {\r\n        switch(direction.toLowerCase()) {\r\n            case 'black':\r\n                fadeType = 0;\r\n                break;\r\n            case 'white':\r\n                fadeType = 1;\r\n                break;\r\n            default:\r\n                fadeType = 2;\r\n                break;\r\n        }\r\n    } else {\r\n        fadeType = parseInt(fadeType);\r\n    }\r\n    $gamePlayer.reserveTransfer(mapId, 0, 0, direction, fadeType, waypoint);\r\n    this.setWaitMode('transfer');\r\n})\r\n\r\n/* LOAD CUSTOM DATA FROM THE PARAMTERS */\r\n\r\nTiledManager.getParameterFlags()\r\nTiledManager.getParameterVehicles()\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//-----------------------------------------------------------------------------\r\n// TilesetManager\r\n//\r\n// The static class that manages the TileD tilesets.\r\n\r\nfunction TilesetManager() {\r\n    throw new Error('This is a static class');\r\n}\r\n\r\nwindow.TilesetManager = TilesetManager;\r\nTilesetManager.tilesets = {};\r\n\r\nlet _getFilename = function(path) {\r\n    let paths = path.split(\"/\");\r\n    return paths[paths.length - 1];\r\n};\r\n\r\nlet _getRealPath = function(path) {\r\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n    return pluginParams[\"Tilesets Location\"] + _getFilename(path);\r\n};\r\n\r\nTilesetManager.getTileset = function(path) {\r\n    let realPath = _getRealPath(path);\r\n    return TilesetManager.tilesets[_getFilename(path)];\r\n};\r\n\r\nTilesetManager.loadTileset = function(path, callback = false) {\r\n    let realPath = _getRealPath(path);\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', './' + realPath);\r\n    xhr.overrideMimeType('application/json');\r\n\r\n    // on success callback\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n            let tileset = false;\r\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\r\n                tileset = JSON.parse(xhr.responseText);\r\n                TilesetManager.tilesets[_getFilename(path)] = tileset;\r\n            }\r\n            if(callback) {\r\n                callback(tileset);\r\n            }\r\n        }\r\n    };\r\n\r\n    // send request\r\n    xhr.send();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/TilesetManager.js","DataManager._tempTiledData = null;\r\nDataManager._tiledLoaded = false;\r\n\r\nlet _loadMapData = DataManager.loadMapData;\r\nDataManager.loadMapData = function (mapId) {\r\n    _loadMapData.call(this, mapId);\r\n    if (mapId > 0) {\r\n        this.loadTiledMapData(mapId);\r\n    } else {\r\n        this.unloadTiledMapData();\r\n    }\r\n};\r\n\r\nDataManager.loadTiledMapData = function (mapId) {\r\n    var xhr = new XMLHttpRequest();\r\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n    xhr.open('GET', \"./\" + pluginParams[\"Maps Location\"] + \"Map\" + mapId + \".json\");\r\n    xhr.overrideMimeType('application/json');\r\n\r\n    // on success callback\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\r\n                DataManager._tempTiledData = JSON.parse(xhr.responseText);\r\n                TiledManager.processTiledData(DataManager._tempTiledData);\r\n            }\r\n            let tiledLoaded = true;\r\n            let tilesRequired = 0;\r\n            if(DataManager._tempTiledData && DataManager._tempTiledData.tilesets && DataManager._tempTiledData.tilesets.length > 0) {\r\n                for(var idx = 0; idx < DataManager._tempTiledData.tilesets.length; idx++) {\r\n                    let tileset = DataManager._tempTiledData.tilesets[idx];\r\n                    if(tileset.source) {\r\n                        let realTileset = TilesetManager.getTileset(tileset.source);\r\n                        if(realTileset) {\r\n                            DataManager._tempTiledData.tilesets[idx] = Object.assign({}, realTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\r\n                        } else {\r\n                            tiledLoaded = false;\r\n                            tilesRequired++;\r\n                            +function(idx) {\r\n                                TilesetManager.loadTileset(tileset.source, function(returnTileset) {\r\n                                    DataManager._tempTiledData.tilesets[idx] = Object.assign({}, returnTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\r\n                                    tilesRequired--;\r\n                                    if(tilesRequired === 0) {\r\n                                        DataManager._tiledLoaded = true;\r\n                                    }\r\n                                });\r\n                            }(idx);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            DataManager._tiledLoaded = tiledLoaded;\r\n        }\r\n    };\r\n\r\n    // set data to null and send request\r\n    this.unloadTiledMapData();\r\n    xhr.send();\r\n};\r\n\r\nDataManager.unloadTiledMapData = function () {\r\n    DataManager._tempTiledData = null;\r\n    DataManager._tiledLoaded = false;\r\n};\r\n\r\nlet _isMapLoaded = DataManager.isMapLoaded;\r\nDataManager.isMapLoaded = function() {\r\n    let defaultLoaded = _isMapLoaded.call(this);\r\n    let tiledLoaded = DataManager._tiledLoaded;\r\n\r\n    return defaultLoaded && tiledLoaded;\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/DataManager.js","ImageManager.loadParserTileset = function (path, hue) {\r\n    if (!path) {\r\n        return this.loadEmptyBitmap();\r\n    }\r\n    let paths = path.split(\"/\");\r\n    while(paths[0] === '..') {\r\n        paths.shift();\r\n    }\r\n    let filename = paths[paths.length - 1];\r\n    let realPath = \"img/tilesets/\" + filename;\r\n    if(paths[0] === 'img') {\r\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\r\n    }\r\n\r\n    return this.loadNormalBitmap(realPath, hue);\r\n};\r\n\r\nImageManager.loadParserParallax = function (path, hue) {\r\n    if (!path) {\r\n        return this.loadEmptyBitmap();\r\n    }\r\n    let paths = path.split(\"/\");\r\n    while(paths[0] === '..') {\r\n        paths.shift();\r\n    }\r\n    let filename = paths[paths.length - 1];\r\n    let realPath = \"img/parallaxes/\" + filename;\r\n    if(paths[0] === 'img') {\r\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\r\n    }\r\n\r\n    return this.loadNormalBitmap(realPath, hue);\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/ImageManager.js","//-----------------------------------------------------------------------------\r\n// TiledManager\r\n//\r\n// The static class that manages TileD data, including extensions.\r\n\r\nfunction TiledManager() {\r\n    throw new Error('This is a static class');\r\n}\r\n\r\nwindow.TiledManager = TiledManager;\r\n\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nlet _listeners = {}\r\nlet _hideFunctions = {}\r\nlet _hideIgnoreFunctions = {\r\n    regions: [],\r\n    collisions: [],\r\n    levelChanges: [],\r\n    tileFlags: []\r\n}\r\nlet _tileFlags = {}\r\nlet _tileFlagIndex = 1;\r\nlet _vehicles = {};\r\nlet _vehiclesByIndex = [];\r\n\r\nlet _autoFunctions = {};\r\n\r\nlet _pluginCommands = {};\r\n\r\nlet _fullVehicleData = {\r\n    bgm: {\r\n        name: '',\r\n        pan: 0,\r\n        pitch: 100,\r\n        volume: 90\r\n    },\r\n    characterIndex: 0,\r\n    characterName:\"\",\r\n    startMapId: 0,\r\n    startX: 0,\r\n    startY: 0\r\n};\r\n\r\nlet _processEncoding = {\r\n\tbase64: function(data) {\r\n\t\tlet decodedData = atob(data);\r\n\t\tlet newData = [];\r\n\t\tfor (let idx = 0; idx < decodedData.length; idx+= 4) {\r\n\t\t\tnewData.push(decodedData.charCodeAt(idx) | ((decodedData.charCodeAt(idx + 1) || 0) << 8) | ((decodedData.charCodeAt(idx + 2) || 0) << 16) | ((decodedData.charCodeAt(idx + 3) || 0) << 24));\r\n\t\t}\r\n\t\treturn newData;\r\n\t}\r\n};\r\n\r\nTiledManager.addListener = function(objectName, event, callback, recursive = true) {\r\n    if(typeof objectName === 'function') {\r\n        objectName = objectName.name\r\n    }\r\n    if(!_listeners[objectName]) {\r\n        _listeners[objectName] = {}\r\n    }\r\n    if(!_listeners[objectName][event]) {\r\n        _listeners[objectName][event] = []\r\n    }\r\n    callback.recursive = !!recursive\r\n    _listeners[objectName][event].push(callback)\r\n}\r\n\r\nTiledManager.triggerListener = function(object, event, options = {}) {\r\n    let objectName = object.constructor.name\r\n    if(!_listeners[objectName] || !_listeners[objectName][event]) {\r\n        return false\r\n    }\r\n    let top = true\r\n    let proto = object.__proto__\r\n    while(proto) {\r\n        objectName = proto.constructor.name\r\n        if(_listeners[objectName] && _listeners[objectName][event]) {\r\n            _listeners[objectName][event].forEach(callback => {\r\n                if(top || callback.recursive) {\r\n                    callback.call(object, options)\r\n                }\r\n            })\r\n        }\r\n        top = false\r\n        proto = proto.__proto__\r\n    }\r\n}\r\n\r\nTiledManager.addHideFunction = function(id, callback, ignore = []) {\r\n    _hideFunctions[id] = callback\r\n\r\n    ignore.forEach((type) => {\r\n        _hideIgnoreFunctions[type].push(id)\r\n    })\r\n}\r\n\r\nTiledManager.checkLayerHidden = function(layerData, ignore = []) {\r\n    if(typeof ignore === 'string') {\r\n        ignore = _hideIgnoreFunctions[ignore] || []\r\n    }\r\n    let keys = Object.keys(_hideFunctions);\r\n    let data = false;\r\n    for(let idx = 0; idx < keys.length; idx++) {\r\n        if(ignore.indexOf(keys) !== -1) {\r\n            continue;\r\n        }\r\n        if(layerData.properties && layerData.properties.hasOwnProperty(keys[idx])) {\r\n            data = data || _hideFunctions[keys[idx]](layerData);\r\n        }\r\n        if(data) {\r\n            return data;\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\nTiledManager.hasHideProperties = function(layerData) {\r\n    return (layerData.properties && (\r\n        Object.keys(_hideFunctions).filter(key => {\r\n            return layerData.properties.hasOwnProperty(key)\r\n        }).length > 0)\r\n    );\r\n}\r\n\r\nTiledManager.processTiledData = function(parentLayer = false) {\r\n    if(!parentLayer) {\r\n        parentLayer = $gameData.tiledData\r\n    }\r\n    if(!parentLayer) {\r\n        return;\r\n    }\r\n    for(var idx = 0; idx < parentLayer.layers.length; idx++) {\r\n        let layer = parentLayer.layers[idx];\r\n        if(layer.type === 'group') {\r\n\t\t\tTiledManager.processTiledData(layer);\r\n\t\t\tArray.prototype.splice.apply(parentLayer.layers, [idx, 1].concat(layer.layers))\r\n\t\t\tidx+= layer.layers.length - 1;\r\n\t\t\tcontinue;\r\n        }\r\n\t\tif(layer.type === 'tilelayer') {\r\n\t\t\tlet encoding = layer.encoding || '';\r\n\t\t\tif(encoding && _processEncoding.hasOwnProperty(encoding)) {\r\n\t\t\t\tlet encFunc = _processEncoding[encoding];\r\n\t\t\t\tif(layer.data) {\r\n\t\t\t\t\tlayer.data = encFunc(layer.data);\r\n\t\t\t\t} else if(layer.chunks) {\r\n\t\t\t\t\tlayer.chunks.forEach(chunk => {\r\n\t\t\t\t\t\tchunk.data = encFunc(chunk.data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n}\r\n\r\nTiledManager.extractTileId = function(layerData, i) {\r\n\tif(layerData.data) {\r\n\t\treturn layerData.data[i];\r\n\t} else {\r\n\t\tlet x = i % $gameMap.width();\r\n\t\tlet y = Math.floor(i / $gameMap.width());\r\n\t\tlet offsets = $gameMap.offsets();\r\n\t\tx+= offsets.x;\r\n\t\ty+= offsets.y;\r\n\t\tif(x < layerData.startx || y < layerData.starty || x >= layerData.startx + layerData.width || y >= layerData.starty + layerData.height) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tfor(let chunkIdx = 0; chunkIdx < layerData.chunks.length; chunkIdx++) {\r\n\t\t\tlet chunk = layerData.chunks[chunkIdx];\r\n\t\t\tif(x < chunk.x || y < chunk.y || x >= chunk.x + chunk.width || y >= chunk.y + chunk.height) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\treturn chunk.data[x - chunk.x + (y - chunk.y) * chunk.width];\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/* TILE FLAGS */\r\n\r\nTiledManager.addFlag = function(...flagIds) {\r\n    flagIds.forEach(flagId => {\r\n        _tileFlags[flagId] = _tileFlagIndex++;\r\n    })\r\n}\r\n\r\nTiledManager.getFlag = function(flagId) {\r\n    return _tileFlags[flagId];\r\n}\r\n\r\nTiledManager.getFlagNames = function() {\r\n    return Object.keys(_tileFlags);\r\n}\r\n\r\nTiledManager.getFlagLocation = function(flagId) {\r\n    let flag = _tileFlags[flagId]\r\n    let bit = (1 << (flag % 16)) & 0xffff;\r\n    let group = Math.floor(flag / 16);\r\n    return [group, bit];\r\n}\r\n\r\nTiledManager.getParameterFlags = function() {\r\n    if(!!pluginParams['Custom Tile Flags']) {\r\n        let tileFlags = JSON.parse(pluginParams['Custom Tile Flags']);\r\n        TiledManager.addFlag.apply(this, tileFlags);\r\n    }\r\n}\r\n\r\n/* VEHICLES */\r\nTiledManager.createVehicle = function(vehicleName, vehicleData = false) {\r\n    if(!vehicleData) {\r\n        vehicleData = Object.assign({}, _fullVehicleData, {\r\n            bgm: Object.assign({}, _fullVehicleData.bgm)\r\n        });\r\n    } else if(vehicleData !== true) {\r\n        vehicleData = Object.assign({}, _fullVehicleData, vehicleData, {\r\n            bgm: Object.assign({}, _fullVehicleData.bgm, vehicleData.bgm)\r\n        });\r\n    }\r\n    let vehicle = new Game_Vehicle(vehicleName, vehicleData);\r\n    _vehicles[vehicleName] = vehicle;\r\n    _vehiclesByIndex.push(vehicleName);\r\n};\r\n\r\nTiledManager.refreshVehicles = function(vehicles = []) {\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            _vehicles[vehicleName].refresh();\r\n        }\r\n    });\r\n};\r\n\r\nTiledManager.getAllVehicles = function(vehicles = []) {\r\n    let returnVehicles = [];\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            returnVehicles.push(_vehicles[vehicleName]);\r\n        }\r\n    });\r\n    return returnVehicles;\r\n};\r\n\r\nTiledManager.getVehicle = function(id) {\r\n    if(isNaN(id)) {\r\n        if(_vehicles[id]) {\r\n            return _vehicles[id];\r\n        }\r\n    } else {\r\n        if(id < _vehiclesByIndex.length) {\r\n            return _vehicles[_vehiclesByIndex[id]];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nTiledManager.updateVehicles = function(vehicles = []) {\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            _vehicles[vehicleName].update();\r\n        }\r\n    });\r\n}\r\n\r\nTiledManager.getParameterVehicles = function() {\r\n    if(!!pluginParams['Custom Vehicles']) {\r\n        let vehicles = JSON.parse(pluginParams['Custom Vehicles']);\r\n        vehicles.forEach(vehicle => {\r\n            let vehicleData = JSON.parse(vehicle);\r\n            TiledManager.createVehicle(vehicleData.vehicleName, vehicleData);\r\n        })\r\n    }\r\n}\r\n\r\nTiledManager.setAutoFunction = function(identifier, functions = {}) {\r\n    _autoFunctions[identifier] = functions;\r\n}\r\n\r\nTiledManager.getAutoFunction = function(identifier) {\r\n    return _autoFunctions[identifier] || false;\r\n}\r\n\r\n/* PLUGIN COMMANDS */\r\n\r\nTiledManager.addPluginCommand = function(command, func) {\r\n    _pluginCommands[command] = func;\r\n}\r\n\r\nTiledManager.pluginCommand = function(command, args) {\r\n    if(_pluginCommands.hasOwnProperty(command)) {\r\n        _pluginCommands[command].call(this, args);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledManager.js","//-----------------------------------------------------------------------------\r\n// Sprite_TiledPriorityTile\r\n//\r\n// The sprite for displaying a priority tile.\r\n\r\nfunction Sprite_TiledPriorityTile() {\r\n    this.initialize.apply(this, arguments);\r\n}\r\n\r\nSprite_TiledPriorityTile.prototype = Object.create(Sprite_Base.prototype);\r\nSprite_TiledPriorityTile.prototype.constructor = Sprite_TiledPriorityTile;\r\n\r\nwindow.Sprite_TiledPriorityTile = Sprite_TiledPriorityTile;\r\n\r\nSprite_TiledPriorityTile.prototype.updateVisibility = function() {\r\n    let visibility = false;\r\n    if(this.layerId > -1) {\r\n        visibility = true;\r\n        let props = $gameMap.getLayerProperties(this.layerId);\r\n        if(props.transition) {\r\n            visibility = props.minAlpha > 0 || props.transitionPhase > 0;\r\n            this.opacity = 255 * (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\r\n        } else {\r\n            let layer = $gameMap.tiledData.layers[this.layerId];\r\n            visibility = !TiledManager.checkLayerHidden(layer);\r\n        }\r\n    }\r\n    this.visible = visibility;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sprite_TiledPriorityTile.js","/* A fallback implementation of AlphaFilter */\r\n\r\nconst fragmentSrc = 'varying vec2 vTextureCoord;' +\r\n'uniform sampler2D uSampler;' +\r\n'uniform float uAlpha;' +\r\n'void main(void)' +\r\n'{' +\r\n'   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;' +\r\n'}';\r\n\r\nif(!PIXI.filters.AlphaFilter) {\r\n    class AlphaFilter extends PIXI.Filter\r\n    {\r\n        /**\r\n         * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\r\n         */\r\n        constructor(alpha = 1.0)\r\n        {\r\n            super(\r\n                // vertex shader\r\n                null,\r\n                // fragment shader\r\n               fragmentSrc\r\n            );\r\n            this.alpha = alpha;\r\n            this.glShaderKey = 'alpha';\r\n        }\r\n        /**\r\n         * Coefficient for alpha multiplication\r\n         *\r\n         * @member {number}\r\n         * @default 1\r\n         */\r\n        get alpha()\r\n        {\r\n            return this.uniforms.uAlpha;\r\n        }\r\n        set alpha(value) // eslint-disable-line require-jsdoc\r\n        {\r\n            this.uniforms.uAlpha = value;\r\n        }\r\n    }\r\n    PIXI.filters.AlphaFilter = AlphaFilter;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/AlphaFilter.js","import TiledTileShader from \"./TiledTileShader\";\r\n\r\nexport default class TiledTileLayer extends PIXI.tilemap.CompositeRectTileLayer {\r\n    constructor(zIndex, bitmaps, useSquare, texPerChild) {\r\n        super(zIndex, bitmaps, useSquare, texPerChild)\r\n    }\r\n\r\n    renderWebGL(renderer) {\r\n        var gl = renderer.gl;\r\n        if(!this.tiledTileShader) {\r\n            this.tiledTileShader = new TiledTileShader(gl, renderer.plugins.tilemap.maxTextures, this.useSquare)\r\n        }\r\n        var alpha = this.alpha;\r\n        var props = $gameMap.getLayerProperties(this.layerId);\r\n        if(props.transition) {\r\n            alpha-= props.minAlpha\r\n            alpha*= (props.transitionPhase / props.transition)\r\n            alpha+= props.minAlpha\r\n        }\r\n        //var shader = renderer.plugins.tilemap.getShader(this.useSquare);\r\n        var shader = this.tiledTileShader;\r\n        renderer.setObjectRenderer(renderer.plugins.tilemap);\r\n        renderer.bindShader(shader);\r\n        this._globalMat = this._globalMat || new PIXI.Matrix();\r\n        renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\r\n        shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\r\n        shader.uniforms.shadowColor = this.shadowColor;\r\n        shader.uniforms.alpha = alpha;\r\n        if (this.useSquare) {\r\n            var tempScale = this._tempScale = (this._tempScale || [0, 0]);\r\n            tempScale[0] = this._globalMat.a >= 0 ? 1 : -1;\r\n            tempScale[1] = this._globalMat.d < 0 ? 1 : -1;\r\n            var ps = shader.uniforms.pointScale = tempScale;\r\n            shader.uniforms.projectionScale = Math.abs(this.worldTransform.a) * renderer.resolution;\r\n        }\r\n        var af = shader.uniforms.animationFrame = renderer.plugins.tilemap.tileAnim;\r\n        var layers = this.children;\r\n        for (var i = 0; i < layers.length; i++) {\r\n            layers[i].renderWebGL(renderer, this.useSquare);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTileLayer.js","const GLBuffer = PIXI.glCore.GLBuffer;\r\nconst VertexArrayObject = PIXI.glCore.VertexArrayObject;\r\n\r\nvar squareShaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying float vSize;\r\nvarying float vTextureId;\r\n\r\nuniform vec4 shadowColor;\r\nuniform sampler2D uSamplers[%count%];\r\nuniform vec2 uSamplerSize[%count%];\r\nuniform vec2 pointScale;\r\nuniform float alpha;\r\n\r\nvoid main(void){\r\n   float margin = 0.5 / vSize;\r\n   vec2 pointCoord = (gl_PointCoord - 0.5) * pointScale + 0.5;\r\n   vec2 clamped = vec2(clamp(pointCoord.x, margin, 1.0 - margin), clamp(pointCoord.y, margin, 1.0 - margin));\r\n   vec2 textureCoord = pointCoord * vSize + vTextureCoord;\r\n   float textureId = vTextureId;\r\n   vec4 color;\r\n   %forloop%\r\n   gl_FragColor = color * alpha;\r\n}\r\n`\r\n\r\nvar squareShaderVert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec2 aAnim;\r\nattribute float aTextureId;\r\nattribute float aSize;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform vec2 samplerSize;\r\nuniform vec2 animationFrame;\r\nuniform float projectionScale;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vSize;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition + aSize * 0.5, 1.0)).xy, 0.0, 1.0);\r\n   gl_PointSize = aSize * projectionScale;\r\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\r\n   vTextureId = aTextureId;\r\n   vSize = aSize;\r\n}\r\n`\r\nvar rectShaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vFrame;\r\nvarying float vTextureId;\r\nuniform vec4 shadowColor;\r\nuniform sampler2D uSamplers[%count%];\r\nuniform vec2 uSamplerSize[%count%];\r\nuniform float alpha;\r\nvoid main(void){\r\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\r\n   float textureId = floor(vTextureId + 0.5);\r\n   vec4 color;\r\n   %forloop%\r\n   gl_FragColor = color * alpha;\r\n}\r\n`;\r\n\r\nvar rectShaderVert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aFrame;\r\nattribute vec2 aAnim;\r\nattribute float aTextureId;\r\nuniform mat3 projectionMatrix;\r\nuniform vec2 animationFrame;\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vFrame;\r\nvoid main(void){\r\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n   vec2 anim = aAnim * animationFrame;\r\n   vTextureCoord = aTextureCoord + anim;\r\n   vFrame = aFrame + vec4(anim, anim);\r\n   vTextureId = aTextureId;\r\n}\r\n`;\r\nexport default class TiledTileShader extends PIXI.tilemap.TilemapShader {\r\n\r\n    constructor(gl, maxTextures, useSquare) {\r\n        let vert = useSquare ? squareShaderVert : rectShaderVert;\r\n        let frag = useSquare ? squareShaderFrag : rectShaderFrag;\r\n        super(gl,\r\n            maxTextures,\r\n            vert,\r\n            PIXI.tilemap.shaderGenerator.generateFragmentSrc(maxTextures, frag)\r\n        );\r\n        if(useSquare) {\r\n            this.vertSize = 8;\r\n            this.vertPerQuad = 1;\r\n            this.anim = 5;\r\n            this.textureId = 7;\r\n        } else {\r\n            this.vertSize = 11;\r\n            this.vertPerQuad = 4;\r\n            this.anim = 8;\r\n            this.textureId = 10;\r\n        }\r\n        this.maxTextures = maxTextures;\r\n        this.stride = this.vertSize * 4;\r\n        PIXI.tilemap.shaderGenerator.fillSamplers(this, this.maxTextures);\r\n    }\r\n\r\n    createVao(renderer, vb) {\r\n        var gl = renderer.gl;\r\n        return renderer.createVao()\r\n            .addIndex(this.indexBuffer)\r\n            .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\r\n            .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\r\n            .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\r\n            .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, this.anim * 4)\r\n            .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, this.textureId * 4);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTileShader.js","// Constants\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nObject.defineProperty(Game_Map.prototype, 'tiledData', {\r\n    get: function () {\r\n        return DataManager._tempTiledData;\r\n    },\r\n    configurable: true\r\n});\r\n\r\nObject.defineProperty(Game_Map.prototype, 'currentMapLevel', {\r\n    get: function () {\r\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\r\n        if (!varID) {\r\n            return this._currentMapLevel;\r\n        } else {\r\n            return $gameVariables.value(varID);\r\n        }\r\n    },\r\n    set: function (value) {\r\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\r\n        if (!varID) {\r\n            this._currentMapLevel = value;\r\n        } else {\r\n            $gameVariables.setValue(varID, value);\r\n        }\r\n    },\r\n    configurable: true\r\n});\r\n\r\nlet _setup = Game_Map.prototype.setup;\r\nGame_Map.prototype.setup = function (mapId) {\r\n    this._tiledInitialized = false;\r\n    this._levels = [];\r\n    this._collisionMap = {};\r\n    this._arrowCollisionMap = {};\r\n    this._regions = {};\r\n    this._mapLevelChange = {};\r\n    this._positionHeightChange = {};\r\n    this._tileFlags = {};\r\n    this._collisionMapLayers = [];\r\n    this._arrowCollisionMapLayers = [];\r\n    this._regionsLayers = [];\r\n    this._mapLevelChangeLayers = [];\r\n    this._positionHeightChangeLayers = [];\r\n    this._tileFlagsLayers = [];\r\n    this._currentMapLevel = 0;\r\n    this.currentMapLevel = 0;\r\n    this._waypoints = {};\r\n    this._layerProperties = [];\r\n    this._autoSize = false;\r\n    this._autoSizeBorder = 0;\r\n    this._offsets = { x: 0, y: 0 };\r\n    this._camera = {\r\n        focus: \"player\",\r\n        data: null\r\n    }\r\n    _setup.call(this, mapId);\r\n    if (this.isTiledMap()) {\r\n        $dataMap.width = this.tiledData.width;\r\n        $dataMap.height = this.tiledData.height;\r\n        this._setupTiled();\r\n        this._tiledInitialized = true;\r\n        if(this._refreshList) {\r\n            this._refreshList.forEach(character => {\r\n                character.refreshBushDepth();\r\n            })\r\n        }\r\n    } else {\r\n\t\tthis._tiledInitialized = true;\r\n\t}\r\n};\r\n\r\nGame_Map.prototype.isTiledInitialized = function() {\r\n    return !!this._tiledInitialized;\r\n}\r\n\r\nGame_Map.prototype.setRefreshDepth = function(character) {\r\n    if(!this._refreshList) {\r\n        this._refreshList = [];\r\n    }\r\n    this._refreshList.push(character);\r\n}\r\n\r\nGame_Map.prototype.isTiledMap = function () {\r\n    return !!this.tiledData;\r\n};\r\n\r\nGame_Map.prototype._setupTiled = function () {\r\n    this._initializeMapProperties();\r\n    this._initializeInfiniteMap();\r\n    this._setLayerProperties();\r\n    this._initializeMapLevel(0);\r\n\r\n    this._setupCollision();\r\n    this._setupRegion();\r\n    this._setupMapLevelChange();\r\n    this._setupTileFlags();\r\n    this._setupTiledEvents();\r\n};\r\n\r\nGame_Map.prototype._initializeMapProperties = function() {\r\n    let autoSize = false;\r\n    let border = 0;\r\n    if(this.tiledData.properties) {\r\n        if(this.tiledData.properties.hasOwnProperty('autoSize')) {\r\n            autoSize = this.tiledData.properties.autoSize;\r\n        }\r\n        if(this.tiledData.properties.hasOwnProperty('border')) {\r\n            border = this.tiledData.properties.border;\r\n        }\r\n    }\r\n    this._autoSize = autoSize;\r\n    this._autoSizeBorder = border;\r\n}\r\n\r\nGame_Map.prototype.offsets = function(x = false, y = false) {\r\n\tif(typeof x === 'object') {\r\n\t\tlet offsets = {\r\n\t\t\tx: (x.x || 0) - this._offsets.x,\r\n\t\t\ty: (x.y || 0) - this._offsets.y\r\n\t\t}\r\n\t\tif(typeof y === 'string' && offsets.hasOwnProperty(y)) {\r\n\t\t\treturn offsets[y];\r\n\t\t}\r\n\t\treturn offsets;\r\n\t}\r\n\tif(x !== false || y !== false) {\r\n\t\treturn {\r\n\t\t\tx: (x || 0) - this._offsets.x,\r\n\t\t\ty: (y || 0) - this._offsets.y\r\n\t\t}\r\n\t}\r\n    return {\r\n        x: this._offsets.x,\r\n        y: this._offsets.y\r\n    }\r\n}\r\n\r\nGame_Map.prototype._initializeInfiniteMap = function() {\r\n    if(!this.tiledData.infinite) {\r\n        return;\r\n    }\r\n    if(this._autoSize && this._autoSize !== 'false') {\r\n        this._setMapSize();\r\n    }\r\n\t/*\r\n\tThis used to convert chunk data into regular map data. I removed it because I realized that really big maps\r\n\twill pose a huge memory problem, especially if you have a lot of layers. It also won't affect the load time,\r\n\tas all other data will already be pre-processed.\r\n\t*/\r\n\t/*\r\n\tfor (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n\t\tlet layerData = this.tiledData.layers[idx];\r\n\t\tif(!layerData.data && !!layerData.chunks) {\r\n\t\t\tlayerData.data = new Array(this.width() * this.height());\r\n\t\t\tlayerData.data.fill(0);\r\n\t\t\tlayerData.chunks.forEach(chunk => {\r\n\t\t\t\tfor(let i = 0; i < chunk.data.length; i++) {\r\n\t\t\t\t\tlet x = chunk.x - this._offsets.x + (i % chunk.width);\r\n\t\t\t\t\tlet y = chunk.y - this._offsets.y + Math.floor(i / chunk.width);\r\n\t\t\t\t\tif(x < 0 || y < 0 || x >= layerData.x + this.width() || y >= layerData.x + this.width()) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet realX = x + y * this.width();\r\n\t\t\t\t\tlayerData.data[realX] = chunk.data[i];\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n/**\r\n * Resizes an infinite map so that the entire map is visible.\r\n * The only thing this does is set the offset and the size of the map,\r\n * without changing the map data itself.\r\n */\r\nGame_Map.prototype._setMapSize = function() {\r\n\t// Initialize variables\r\n    var minX = false;\r\n    var minY = false;\r\n    var maxX = false;\r\n    var maxY = false;\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        var layer = this.tiledData.layers[idx];\r\n        if(layer.type !== 'tilelayer') {\r\n            continue;\r\n        }\r\n        var x1 = layer.startx;\r\n        var y1 = layer.starty;\r\n        var x2 = x1 + layer.width;\r\n        var y2 = y1 + layer.height;\r\n\t\tif(this._autoSize === 'deep' || this._autoSize === 'crop') {\r\n\t\t\tif(minX === false || x1 < minX) {\r\n\t\t\t\tx1 = this._cropInfiniteMap(layer, x1, (minX === false ? x2 : minX));\r\n\t\t\t}\r\n\t\t\tif(minY === false || y1 < minY) {\r\n\t\t\t\ty1 = this._cropInfiniteMap(layer, y1, (minY === false ? y2 : minY), true, true);\r\n\t\t\t}\r\n\t\t\tif(maxX === false || x2 > maxX) {\r\n\t\t\t\tx2 = this._cropInfiniteMap(layer, x2, (maxX === false ? x1 : maxX), false);\r\n\t\t\t}\r\n\t\t\tif(maxY === false || y2 > maxY) {\r\n\t\t\t\ty2 = this._cropInfiniteMap(layer, y2, (maxY === false ? y1 : maxY), false, true);\r\n\t\t\t}\r\n\t\t}\r\n        minX = minX !== false ? Math.min(minX, x1) : x1;\r\n        minY = minY !== false ? Math.min(minY, y1) : y1;\r\n        maxX = maxX !== false ? Math.max(maxX, x2) : x2;\r\n        maxY = maxY !== false ? Math.max(maxY, y2) : y2;\r\n    }\r\n\tif(this._autoSizeBorder) {\r\n\t\tlet border = [0, 0, 0, 0];\r\n\t\tif(isNaN(this._autoSizeBorder)) {\r\n\t\t\tlet autoBorder = this.autoSizeBorder.split(' ');\r\n\t\t\tborder[0] = parseInt(autoBorder[0]);\r\n\t\t\tborder[1] = autoBorder.length < 2 ? border[0] : parseInt(autoBorder[1]);\r\n\t\t\tborder[2] = autoBorder.length < 3 ? border[0] : parseInt(autoBorder[2]);\r\n\t\t\tborder[3] = autoBorder.length < 4 ? border[1] : parseInt(autoBorder[3]);\r\n\t\t} else {\r\n\t\t\tborder[0] = this._autoSizeBorder;\r\n\t\t\tborder[1] = this._autoSizeBorder;\r\n\t\t\tborder[2] = this._autoSizeBorder;\r\n\t\t\tborder[3] = this._autoSizeBorder;\r\n\t\t}\r\n\t\tminX-= +border[3];\r\n\t\tminY-= +border[0];\r\n\t\tmaxX+= +border[1];\r\n\t\tmaxY+= +border[2];\r\n\t}\r\n    this._offsets.x = minX;\r\n    this._offsets.y = minY;\r\n    this.tiledData.width = maxX - minX;\r\n    this.tiledData.height = maxY - minY;\r\n}\r\n\r\nGame_Map.prototype._cropInfiniteMap = function(layer, offset, limit, forward = true, vertical = false) {\r\n\tlet o = offset;\r\n\tlet d = vertical ? 'y' : 'x';\r\n\tlet s = vertical ? 'height' : 'width';\r\n\twhile((forward && o < limit) || (!forward && o > limit)) {\r\n\t\tlet realO = o - (!forward ? 1 : 0);\r\n\t\tlet lineEmpty = true;\r\n\t\tfor(let chunkIdx = 0; chunkIdx < layer.chunks.length; chunkIdx++) {\r\n\t\t\tlet chunk = layer.chunks[chunkIdx];\r\n\t\t\tif(realO < chunk[d] || realO >= chunk[d] + chunk[s]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet empty = true;\r\n\t\t\tfor(let o2 = 0; o2 < chunk[s]; o2++) {\r\n\t\t\t\tlet coords = {\r\n\t\t\t\t\t[d]: realO - chunk[d],\r\n\t\t\t\t\t[vertical ? 'x' : 'y']: o2\r\n\t\t\t\t};\r\n\t\t\t\tlet i = coords.x + coords.y * chunk.width;\r\n\t\t\t\tif(chunk.data[i]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!empty) {\r\n\t\t\t\tlineEmpty = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!lineEmpty) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\to+= forward ? 1 : -1;\r\n\t}\r\n\treturn o;\r\n}\r\n\r\nGame_Map.prototype._setLayerProperties = function() {\r\n    let autoFunctions = {};\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layer = this.tiledData.layers[idx];\r\n        let layerProperties = Object.assign({}, layer.properties, {layerId: idx});\r\n        if(layerProperties.transition) {\r\n            layerProperties.baseAlpha = layer.opacity;\r\n            layerProperties.minAlpha = Math.min(layerProperties.baseAlpha, (layer.properties.minimumOpacity || 0));\r\n            layerProperties.isShown = !TiledManager.checkLayerHidden(layer);\r\n            layerProperties.transitionPhase = layerProperties.isShown ? layerProperties.transition : 0;\r\n        }\r\n        if(layerProperties.autoX) {\r\n            layerProperties.autoSpeedX = layerProperties.autoX;\r\n            layerProperties.autoX = 0;\r\n            layerProperties.imageWidth = layerProperties.imageWidth || 0;\r\n            let funcX = 'linear';\r\n            if(layerProperties.autoFunctionX) {\r\n                funcX = layerProperties.autoFunctionX;\r\n            } else if (layerProperties.autoFunction) {\r\n                funcX = layerProperties.autoFunction;\r\n            }\r\n            let tFuncX = TiledManager.getAutoFunction(funcX);\r\n            if(tFuncX) {\r\n                layerProperties.autoXFunction = tFuncX.x || tFuncX.both;\r\n            } else {\r\n                if(!autoFunctions[funcX]) {\r\n                    autoFunctions[funcX] = new Function('x', 'y', funcX);\r\n                }\r\n                layerProperties.autoXFunction = autoFunctions[funcX];\r\n            }\r\n        }\r\n        if(layerProperties.autoY) {\r\n            layerProperties.autoSpeedY = layerProperties.autoY;\r\n            layerProperties.autoY = 0;\r\n            layerProperties.imageHeight = layerProperties.imageHeight || 0;\r\n            let funcY = 'linear';\r\n            if(layerProperties.autoFunctionY) {\r\n                funcY = layerProperties.autoFunctionY;\r\n            } else if (layerProperties.autoFunction) {\r\n                funcY = layerProperties.autoFunction;\r\n            }\r\n            let tFuncY = TiledManager.getAutoFunction(funcY);\r\n            if(tFuncY) {\r\n                layerProperties.autoYFunction = tFuncY.y || tFuncY.both;\r\n            } else {\r\n                if(!autoFunctions[funcY]) {\r\n                    autoFunctions[funcY] = new Function('x', 'y', funcY);\r\n                }\r\n                layerProperties.autoYFunction = autoFunctions[funcY];\r\n            }\r\n        }\r\n        this._getLayerTilesets(layer, layerProperties);\r\n        this._layerProperties.push(layerProperties);\r\n    }\r\n}\r\n\r\nGame_Map.prototype._getLayerTilesets = function(layer, props) {\r\n    if(layer.type !== 'tilelayer') {\r\n        return;\r\n    }\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    props.tilesets = [];\r\n    for (let i of Array(size).keys()) {\r\n        let tileId = TiledManager.extractTileId(layer, i);\r\n        if (!!tileId) {\r\n            let tilesetId = this._getTilesetId(tileId);\r\n            if(tilesetId === -1 || props.tilesets.indexOf(tilesetId) > -1) {\r\n                continue;\r\n            }\r\n            props.tilesets.push(tilesetId);\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._initializeMapLevel = function (id) {\r\n    if (!!this._collisionMap[id]) {\r\n        return;\r\n    }\r\n\r\n    this._levels.push(id);\r\n\r\n    this._collisionMap[id] = {};\r\n    this._arrowCollisionMap[id] = {};\r\n    this._regions[id] = {};\r\n    this._mapLevelChange[id] = {};\r\n    this._tileFlags[id] = {};\r\n    this._collisionMapLayers[id] = [];\r\n    this._arrowCollisionMapLayers[id] = [];\r\n    this._regionsLayers[id] = [];\r\n    this._mapLevelChangeLayers[id] = [];\r\n    this._tileFlagsLayers[id] = [];\r\n    this._initializeMapLevelData(id);\r\n};\r\n\r\nGame_Map.prototype._initializeMapLevelData = function(id = 0, layerId = 'main', dataTypes = false) {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    \r\n    const defaultData = {\r\n        'collisionMap': 0,\r\n        'arrowCollisionMap': 1 | 2 | 4 | 8,\r\n        'regions': 0,\r\n        'mapLevelChange': -1,\r\n        'positionHeightChange': -1,\r\n        'tileFlags': 0\r\n    }\r\n\r\n    if(!dataTypes) {\r\n        dataTypes = Object.keys(defaultData);\r\n    }\r\n\r\n    for(let idx = 0; idx < dataTypes.length; idx++) {\r\n        let dataType = dataTypes[idx];\r\n        let defaultValue = defaultData[dataType];\r\n        if(!this['_' + dataType][id]) {\r\n            this['_' + dataType][id] = {};\r\n            this['_' + dataType + 'Layers'][id] = [];\r\n        }\r\n        if(!!this['_' + dataType][id][layerId]) {\r\n            continue;\r\n        }\r\n        this['_' + dataType][id][layerId] = []\r\n        let typeData = this['_' + dataType][id][layerId]\r\n        for (let x of Array(size).keys()) {\r\n            typeData.push(defaultValue);\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._setupCollision = function () {\r\n    this._setupCollisionFull();\r\n    this._setupCollisionArrow();\r\n};\r\n\r\nGame_Map.prototype._setupCollisionFull = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.collision) {\r\n            continue;\r\n        }\r\n\r\n        if (layerData.properties.collision !== \"full\"\r\n            && layerData.properties.collision !== \"up-left\"\r\n            && layerData.properties.collision !== \"up-right\"\r\n            && layerData.properties.collision !== \"down-left\"\r\n            && layerData.properties.collision !== \"down-right\"\r\n            && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._collisionMapLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['collisionMap']);\r\n        }\r\n        \r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let ids = [];\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                switch(layerData.properties.collision) {\r\n                    case \"full\":\r\n                        ids.push(realX);\r\n                        if (this.isHalfTile()) {\r\n                            ids.push(realX + 1, realX + width, realX + width + 1);\r\n                        }\r\n                        break;\r\n                    case \"up-left\":\r\n                        ids.push(realX);\r\n                        break;\r\n                    case \"up-right\":\r\n                        ids.push(realX + 1);\r\n                        break;\r\n                    case \"down-left\":\r\n                        ids.push(realX + width);\r\n                        break;\r\n                    case \"down-right\":\r\n                        ids.push(realX + width + 1);\r\n                        break;\r\n                    case \"tiles\":\r\n                        let tileId = TiledManager.extractTileId(layerData, x);\r\n                        let tileset = this._getTileset(tileId);\r\n                        if(tileset && tileset.tileproperties) {\r\n                            let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                            if(tileData) {\r\n                                if(tileData.collision) {\r\n                                    ids.push(realX);\r\n                                    if (this.isHalfTile()) {\r\n                                        ids.push(realX + 1, realX + width, realX + width + 1);\r\n                                    }\r\n                                }\r\n                                if(tileData.collisionUpLeft) {\r\n                                    ids.push(realX);\r\n                                }\r\n                                if(tileData.collisionUpRight) {\r\n                                    ids.push(realX + 1);\r\n                                }\r\n                                if(tileData.collisionDownLeft) {\r\n                                    ids.push(realX + width);\r\n                                }\r\n                                if(tileData.collisionDownRight) {\r\n                                    ids.push(realX + width + 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                for (let id of ids) {\r\n                    this._collisionMap[level][layerId][id] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupCollisionArrow = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let bit = 0;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.collision) {\r\n            continue;\r\n        }\r\n\r\n        if (layerData.properties.collision !== \"arrow\" && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n\r\n        if (!layerData.properties.arrowImpassable && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n        \r\n        if(layerData.properties.arrowImpassable) {\r\n\r\n            if (layerData.properties.arrowImpassable === \"down\") {\r\n                bit = 1;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"left\") {\r\n                bit = 2;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"right\") {\r\n                bit = 4;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"up\") {\r\n                bit = 8;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._arrowCollisionMapLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['arrowCollisionMap']);\r\n        }\r\n        \r\n        let arrowCollisionMap = this._arrowCollisionMap[level][layerId];\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let realBit = bit;\r\n                if(layerData.properties.collision === \"tiles\") {\r\n                    realBit = 0;\r\n                    let tileId = TiledManager.extractTileId(layerData, x);\r\n                    let tileset = this._getTileset(tileId);\r\n                    if(tileset && tileset.tileproperties) {\r\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                        if(tileData) {\r\n                            if(tileData.arrowImpassableDown) {\r\n                                realBit+= 1;\r\n                            }\r\n                            if(tileData.arrowImpassableLeft) {\r\n                                realBit+= 2;\r\n                            }\r\n                            if(tileData.arrowImpassableRight) {\r\n                                realBit+= 4;\r\n                            }\r\n                            if(tileData.arrowImpassableUp) {\r\n                                realBit+= 8;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                arrowCollisionMap[realX] = arrowCollisionMap[realX] ^ realBit;\r\n                if (this.isHalfTile()) {\r\n                    arrowCollisionMap[realX + 1]\r\n                        = arrowCollisionMap[realX + 1] ^ realBit;\r\n                    arrowCollisionMap[realX + width]\r\n                        = arrowCollisionMap[realX + width] ^ realBit;\r\n                    arrowCollisionMap[realX + width + 1]\r\n                        = arrowCollisionMap[realX + width + 1] ^ realBit;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupRegion = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.regionId) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._regionsLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['regions']);\r\n        }\r\n        \r\n        let regionMap = this._regions[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let regionId = 0;\r\n                if(layerData.properties.regionId > -1) {\r\n                    regionId = parseInt(layerData.properties.regionId);\r\n                } else {\r\n                    let tileId = TiledManager.extractTileId(layerData, x);\r\n                    let tileset = this._getTileset(tileId);\r\n                    if(tileset && tileset.tileproperties) {\r\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                        if(tileData && tileData.regionId) {\r\n                            regionId = parseInt(tileData.regionId);\r\n                        }\r\n                    }\r\n                    if(layerData.properties.regionOffset) {\r\n                        regionId+= layerData.properties.regionOffset;\r\n                    }\r\n                }\r\n                regionMap[realX] = regionId;\r\n                if (this.isHalfTile()) {\r\n                    regionMap[realX + 1] = regionId;\r\n                    regionMap[realX + width] = regionId;\r\n                    regionMap[realX + width + 1] = regionId;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupMapLevelChange = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('toLevel')) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._mapLevelChangeLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['mapLevelChange']);\r\n        }\r\n        \r\n        let levelChangeMap = this._mapLevelChange[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let toLevel = parseInt(layerData.properties.toLevel);\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                levelChangeMap[realX] = toLevel;\r\n                if (this.isHalfTile()) {\r\n                    levelChangeMap[realX + 1] = toLevel;\r\n                    levelChangeMap[realX + width] = toLevel;\r\n                    levelChangeMap[realX + width + 1] = toLevel;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupPositionHeightChange = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('floorHeight')) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._positionHeightChangeLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['positionHeightChange']);\r\n        }\r\n        \r\n        let positionHeightChangeMap = this._positionHeightChange[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let toLevel = parseInt(layerData.properties.floorHeight);\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                positionHeightChangeMap[realX] = toLevel;\r\n                if (this.isHalfTile()) {\r\n                    positionHeightChangeMap[realX + 1] = toLevel;\r\n                    positionHeightChangeMap[realX + width] = toLevel;\r\n                    positionHeightChangeMap[realX + width + 1] = toLevel;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupTileFlags = function() {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n    \r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.tileFlags) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._tileFlagsLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['tileFlags']);\r\n        }\r\n        \r\n        let tileFlagMap = this._tileFlags[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let tileFlags = 0;\r\n                let tileId = TiledManager.extractTileId(layerData, x);\r\n                let tileset = this._getTileset(tileId);\r\n                if(tileset && tileset.tileproperties) {\r\n                    let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                    if(tileData) {\r\n                        tileFlags = this._getTileFlags(tileData);\r\n                    }\r\n                }\r\n                tileFlagMap[realX] = this._combineFlags(tileFlagMap[realX], tileFlags);\r\n                if (this.isHalfTile()) {\r\n                    tileFlagMap[realX + 1] = this._combineFlags(tileFlagMap[realX + 1], tileFlags);\r\n                    tileFlagMap[realX + width] = this._combineFlags(tileFlagMap[realX + width], tileFlags);\r\n                    tileFlagMap[realX + width + 1] = this._combineFlags(tileFlagMap[realX + width + 1], tileFlags);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._getTileFlags = function(tileData) {\r\n    let flags = []\r\n    let flagNames = TiledManager.getFlagNames()\r\n    flagNames.forEach(prop => {\r\n        let property = 'flagIs' + prop.slice(0, 1).toUpperCase() + prop.slice(1)\r\n        if(tileData[property]) {\r\n            let [group, bit] = TiledManager.getFlagLocation(prop)\r\n            for(let i = flags.length; i <= group; i++) {\r\n                flags.push(0)\r\n            }\r\n            flags[group]|= bit\r\n        }\r\n    })\r\n    return flags.length > 0 ? flags : 0\r\n}\r\n\r\nGame_Map.prototype._combineFlags = function (source, target) {\r\n    source = source ? source.slice(0) : []\r\n    for(let i = 0; i < target.length; i++) {\r\n        if(!source.length <= i) {\r\n            source.push(i)\r\n        }\r\n        source[i]|= target[i];\r\n    }\r\n    return source;\r\n}\r\n\r\nGame_Map.prototype._setupTiledEvents = function () {\r\n    for (let layerData of this.tiledData.layers) {\r\n        if (layerData.type !== \"objectgroup\") {\r\n            continue;\r\n        }\r\n\r\n        for (let object of layerData.objects) {\r\n            if (!object.properties) {\r\n                continue;\r\n            }\r\n\r\n            if(object.properties.waypoint) {\r\n                let x = object.x / this.tileWidth();\r\n                let y = object.y / this.tileHeight();\r\n                if(pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\r\n                    x = Math.floor(x);\r\n                    y = Math.floor(y);\r\n                }\r\n                this._waypoints[object.properties.waypoint] = {x, y}\r\n                continue;\r\n            }\r\n\r\n            if (!object.properties.eventId && !object.properties.vehicle) {\r\n                continue;\r\n            }\r\n\r\n            let event;\r\n\r\n            if(!!object.properties.vehicle) {\r\n                event = this.vehicle(object.properties.vehicle);\r\n                this._vehicles.push(object.properties.vehicle);\r\n            } else {\r\n                let eventId = parseInt(object.properties.eventId);\r\n                event = this._events[eventId];\r\n            }\r\n            if (!event) {\r\n                continue;\r\n            }\r\n            let x = object.x / this.tileWidth() - this._offsets.x;\r\n            let y = object.y / this.tileHeight() - this._offsets.y;\r\n            if(pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\r\n                x = Math.floor(x);\r\n                y = Math.floor(y);\r\n            }\r\n            if (this.isHalfTile()) {\r\n                x += 1;\r\n                y += 1;\r\n            }\r\n            if(!!object.properties.vehicle) {\r\n                event.loadSystemSettings();\r\n                event.setLocation(this.mapId(), x, y);\r\n            } else {\r\n                event.locate(x, y);\r\n            }\r\n\t\t\tevent._tiledProperties = object.properties;\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype.isHalfTile = function () {\r\n    return pluginParams[\"Half-tile movement\"].toLowerCase() === \"true\";\r\n};\r\n\r\nGame_Map.prototype._getTileset = function(tileId) {\r\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\r\n        let tileset = this.tiledData.tilesets[idx];\r\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\r\n            return tileset;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nGame_Map.prototype._getTilesetId = function(tileId) {\r\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\r\n        let tileset = this.tiledData.tilesets[idx];\r\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\r\n                if(tileset.properties && tileset.properties.ignoreLoading) {\r\n                    return -1;\r\n                }\r\n                return idx;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n\r\nGame_Map.prototype.tileWidth = function () {\r\n    let tileWidth = this.tiledData.tilewidth;\r\n    if (this.isHalfTile()) {\r\n        tileWidth /= 2;\r\n    }\r\n    return tileWidth;\r\n};\r\n\r\nGame_Map.prototype.tileHeight = function () {\r\n    let tileHeight = this.tiledData.tileheight;\r\n    if (this.isHalfTile()) {\r\n        tileHeight /= 2;\r\n    }\r\n    return tileHeight;\r\n};\r\n\r\nGame_Map.prototype.width = function () {\r\n    let width = this.tiledData.width;\r\n    if (this.isHalfTile()) {\r\n        width *= 2;\r\n    }\r\n    return width;\r\n};\r\n\r\nGame_Map.prototype.height = function () {\r\n    let height = this.tiledData.height;\r\n    if (this.isHalfTile()) {\r\n        height *= 2;\r\n    }\r\n    return height;\r\n};\r\n\r\nlet _regionId = Game_Map.prototype.regionId;\r\nGame_Map.prototype.regionId = function (x, y, allIds = false) {\r\n    if (!this.isTiledMap() || !this.isTiledInitialized()) {\r\n        return _regionId.call(this, x, y);\r\n    }\r\n\r\n    let index = Math.floor(x) + this.width() * Math.floor(y);\r\n    let regionMap = this._regions[this.currentMapLevel];\r\n    let regionLayer = this._regionsLayers[this.currentMapLevel];\r\n    \r\n    let regionValue = regionMap.main[index];\r\n    let regionValues = [regionValue];\r\n\r\n    if(regionLayer && regionLayer.length > 0) {\r\n        for(let idx = 0; idx < regionLayer.length; idx++) {\r\n            let layerId = regionLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'regions');\r\n            if(!hideData) {\r\n                if(allIds) {\r\n                    regionValues.push(regionMap[layerId][index]);\r\n                } else {\r\n                    regionValue = regionMap[layerId][index];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return allIds ? regionValues : regionValue;\r\n};\r\n\r\nGame_Map.prototype.regionIds = function (x, y) {\r\n    return this.regionId(x, y, true);\r\n}\r\n\r\nGame_Map.prototype.getMapLevels = function() {\r\n    let levels = this._levels.slice(0);\r\n    levels.sort((a, b) => {\r\n        return a - b;\r\n    });\r\n    return levels;\r\n}\r\n\r\nlet _checkPassage = Game_Map.prototype.checkPassage;\r\nGame_Map.prototype.checkPassage = function (x, y, bit, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _checkPassage.call(this, x, y, d);\r\n    }\r\n    if(level === false) {\r\n        level = this._currentMapLevel;\r\n    }\r\n    let index = x + this.width() * y;\r\n    let arrows = this._arrowCollisionMap[level];\r\n    let arrowLayer = this._arrowCollisionMapLayers[level];\r\n    let arrowValue = arrows.main[index];\r\n    \r\n    if(render && arrows[render]) {\r\n        arrowValue = arrows[render][index];\r\n    } else if(arrowLayer && arrowLayer.length > 0) {\r\n        for(let idx = 0; idx < arrowLayer.length; idx++) {\r\n            let layerId = arrowLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\r\n            if(!hideData) {\r\n                arrowValue&= arrows[layerId][index];\r\n            }\r\n        }\r\n    }\r\n\r\n    return (arrowValue & bit) > 0\r\n}\r\n\r\nGame_Map.prototype.renderPassage = function (x, y, bit, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._arrowCollisionMap[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.checkPassage(x, y, bit, render, level);\r\n}\r\n\r\nGame_Map.prototype.getPassageLayers = function(level) {\r\n    return this._arrowCollisionMapLayers[level].slice(0);\r\n}\r\n\r\nlet _isPassable = Game_Map.prototype.isPassable;\r\nGame_Map.prototype.isPassable = function (x, y, d, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isPassable.call(this, x, y, d);\r\n    }\r\n    if(level === false) {\r\n        level = this._currentMapLevel;\r\n    }\r\n\r\n    if(!this.checkPassage(x, y, (1 << (d / 2 - 1)) & 0x0f, render)) {\r\n        return false;\r\n    }\r\n    \r\n    let index = x + this.width() * y;\r\n    let collisionMap = this._collisionMap[level];\r\n    let collisionLayer = this._collisionMapLayers[level];\r\n    let collisionValue = collisionMap.main[index]\r\n    \r\n    if(render && collisionMap[render]) {\r\n        collisionValue = collisionMap[render][index];\r\n    } else if(collisionLayer && collisionLayer.length > 0) {\r\n        for(let idx = 0; idx < collisionLayer.length; idx++) {\r\n            let layerId = collisionLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\r\n            if(!hideData) {\r\n                collisionValue|= collisionMap[layerId][index];\r\n            }\r\n        }\r\n    }\r\n\r\n    return collisionValue === 0;\r\n};\r\n\r\nGame_Map.prototype.renderIsPassable = function (x, y, d, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._collisionMap[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.isPassable(x, y, d, render, level);\r\n}\r\n\r\nGame_Map.prototype.getIsPassableLayers = function(level) {\r\n    return this._collisionMapLayers[level].slice(0);\r\n}\r\n\r\nGame_Map.prototype.checkMapLevelChanging = function (x, y) {\r\n    let mapLevelChange = this._mapLevelChange[this.currentMapLevel];\r\n    let mapLevelChangeLayer = this._mapLevelChangeLayers[this.currentMapLevel];\r\n    let index = y * this.width() + x;\r\n    let mapLevelChangeValue = mapLevelChange.main[index]\r\n    if(mapLevelChangeLayer.length > 0) {\r\n        for(let idx = 0; idx < mapLevelChangeLayer.length; idx++) {\r\n            let layerId = mapLevelChangeLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'levelChanges');\r\n            if(!hideData) {\r\n                mapLevelChangeValue = mapLevelChange[layerId][index];\r\n            }\r\n        }\r\n    }\r\n    if (mapLevelChangeValue < 0) {\r\n        return false;\r\n    }\r\n    let oldValue = this.currentMapLevel;\r\n    this.currentMapLevel = mapLevelChangeValue;\r\n    TiledManager.triggerListener(this, 'levelchanged', {\r\n        oldLevel: oldValue,\r\n        newLevel: mapLevelChangeValue\r\n    })\r\n    return true;\r\n};\r\n\r\nGame_Map.prototype.checkPositionHeight = function (x, y) {\r\n    let positionHeightChange = this._positionHeightChange[this.currentMapLevel];\r\n    let positionHeightChangeLayer = this._positionHeightChangeLayers[this.currentMapLevel];\r\n    let index = y * this.width() + x;\r\n    let positionHeightChangeValue = positionHeightChange.main[index]\r\n    if(positionHeightChangeLayer.length > 0) {\r\n        for(let idx = 0; idx < positionHeightChangeLayer.length; idx++) {\r\n            let layerId = positionHeightChangeLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'positionHeightChanges');\r\n            if(!hideData) {\r\n                positionHeightChangeValue = positionHeightChange[layerId][index];\r\n            }\r\n        }\r\n    }\r\n    return positionHeightChangeValue;\r\n};\r\n\r\nGame_Map.prototype.getTileFlags = function (x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    let index = x + this.width() * y;\r\n    let tileFlags = this._tileFlags[level];\r\n    let tileFlagsLayer = this._tileFlagsLayers[level];\r\n    let tileFlagsValue = (tileFlags.main[index] ? tileFlags.main[index].slice(0) : []);\r\n\r\n    if(render && tileFlags[render]) {\r\n        tileFlagsValue = (tileFlags[render][index] ? tileFlags[render][index].slice(0) : []);\r\n    } else if(tileFlagsLayer && tileFlagsLayer.length > 0) {\r\n        for(let idx = 0; idx < tileFlagsLayer.length; idx++) {\r\n            let layerId = tileFlagsLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'tileFlags');\r\n            if(!hideData && tileFlags[layerId][index]) {\r\n                tileFlagsValue = this._combineFlags(tileFlagsValue, tileFlags[layerId][index])\r\n            }\r\n        }\r\n    }\r\n    return tileFlagsValue\r\n}\r\n\r\nGame_Map.prototype.renderTileFlags = function (x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._tileFlags[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.getTileFlags(x, y, render, level);\r\n}\r\n\r\nGame_Map.prototype.getTileFlagLayers = function(level) {\r\n    return this._tileFlagsLayers[level].slice(0);\r\n}\r\n\r\nGame_Map.prototype.checkHasTileFlag = function (x, y, flag, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(typeof flag === 'string') {\r\n        flag = TiledManager.getFlag(flag)\r\n    }\r\n    let bit = (1 << (flag % 16)) & 0xffff;\r\n    let group = Math.floor(flag / 16);\r\n    let tileFlagsValue = this.getTileFlags(x, y, render, level);\r\n    \r\n    return (tileFlagsValue[group] & bit) > 0\r\n}\r\n\r\nGame_Map.prototype.renderHasTileFlag = function (x, y, flag, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._tileFlags[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.checkHasTileFlag(x, y, flag, render, level);\r\n}\r\n\r\nlet _isBoatPassable = Game_Map.prototype.isBoatPassable\r\nGame_Map.prototype.isBoatPassable = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isBoatPassable.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'boat', render, level);\r\n};\r\n\r\nGame_Map.prototype.renderIsBoatPassable = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isBoatPassable(x, y, render, level);\r\n}\r\n\r\nlet _isShipPassable = Game_Map.prototype.isShipPassable\r\nGame_Map.prototype.isShipPassable = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isShipPassable.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'ship', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsShipPassable = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isShipPassable(x, y, render, level);\r\n}\r\n\r\nlet _isAirshipLandOk = Game_Map.prototype.isAirshipLandOk\r\nGame_Map.prototype.isAirshipLandOk = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isAirshipLandOk.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'airship', render) && this.checkPassage(x, y, 0x0f, render);\r\n};\r\n\r\nGame_Map.prototype.renderIsAirshipLandOk = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isAirshipLandOk(x, y, render, level);\r\n}\r\n\r\nlet _isLadder = Game_Map.prototype.isLadder\r\nGame_Map.prototype.isLadder = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isLadder.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ladder', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsLadder = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isLadder(x, y, render, level);\r\n}\r\n\r\nlet _isBush = Game_Map.prototype.isBush\r\nGame_Map.prototype.isBush = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isBush.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'bush', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsBush = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isBush(x, y, render, level);\r\n}\r\n\r\nlet _isCounter = Game_Map.prototype.isCounter\r\nGame_Map.prototype.isCounter = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isCounter.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'counter', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsCounter = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isCounter(x, y, render, level);\r\n}\r\n\r\nlet _isDamageFloor = Game_Map.prototype.isDamageFloor\r\nGame_Map.prototype.isDamageFloor = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isDamageFloor.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'damage', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsDamageFloor = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isDamageFloor(x, y, render, level);\r\n}\r\n\r\nGame_Map.prototype.isSlipperyFloor = function(x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ice', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsSlipperyFloor = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isSlipperyFloor(x, y, render, level);\r\n}\r\n\r\nlet _isHealFloor = Game_Map.prototype.isHealFloor\r\nGame_Map.prototype.isHealFloor = function(x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'heal', render);\r\n};\r\n\r\nGame_Map.prototype.getAllLayerProperties = function(layer = -1, ignoreHidden = true) {\r\n\tif(layer > -1) {\r\n\t\tif(this.tiledData.layers[layer] && this.tiledData.layers[layer].properties) {\r\n\t\t\treturn Object.assign({}, this.tiledData.layers[layer].properties);\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\tlet layerProperties = {};\r\n\tthis.tiledData.layers.forEach((layerData, i) => {\r\n\t\tif(layerData && layerData.properties) {\r\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData, 'collisions')) {\r\n                layerProperties[i] = Object.assign({}, layerData.properties);\r\n            }\r\n\t\t}\r\n\t});\r\n\treturn layerProperties;\r\n}\r\n\r\nGame_Map.prototype.getTileProperties = function(x, y, layer = -1, ignoreHidden = true) {\r\n    let index = x + this.width() * y;\r\n    \r\n\tif(layer > -1) {\r\n\t\tif(this.tiledData.layers[layer] && (this.tiledData.layers[layer].data || this.tiledData.layers[layer].chunks)) {\r\n\t\t\tlet tileId = TiledManager.extractTileId(this.tiledData.layers[layer], index);\r\n\t\t\tlet tileset = this._getTileset(tileId);\r\n\t\t\tif(tileset && tileset.tileproperties) {\r\n\t\t\t\treturn Object.assign({}, tileset.tileproperties[tileId - tileset.firstgid]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\tlet tileProperties = {};\r\n\tthis.tiledData.layers.forEach((layerData, i) => {\r\n\t\tif(layerData && (layerData.data || layerData.chunks) && layerData.properties) {\r\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData)) {\r\n                let props = this.getTileProperties(x, y, i);\r\n                if(Object.keys(props).length > 0) {\r\n                    tileProperties[i] = props;\r\n                }\r\n            }\r\n\t\t}\r\n\t});\r\n\treturn tileProperties;\r\n}\r\n\r\n/* Custom vehicles */\r\nlet _createVehicles = Game_Map.prototype.createVehicles\r\nGame_Map.prototype.createVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        _createVehicles.call(this);\r\n    }\r\n    this._vehicles = [];\r\n\r\n};\r\n\r\nlet _refreshVehicles = Game_Map.prototype.refereshVehicles\r\nGame_Map.prototype.refereshVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _refreshVehicles.call(this);\r\n    }\r\n    return TiledManager.refreshVehicles(this._vehicles);\r\n};\r\n\r\nlet _vehicles = Game_Map.prototype.vehicles\r\nGame_Map.prototype.vehicles = function(getNames = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _vehicles.call(this);\r\n    }\r\n    if(getNames) {\r\n        return this._vehicles;\r\n    }\r\n    return TiledManager.getAllVehicles(this._vehicles);\r\n};\r\n\r\nlet _vehicle = Game_Map.prototype.vehicle\r\nGame_Map.prototype.vehicle = function(type) {\r\n    if (!this.isTiledMap()) {\r\n        return _vehicles.call(this, type);\r\n    }\r\n    return TiledManager.getVehicle(type);\r\n}\r\n\r\nlet _boat = Game_Map.prototype.boat\r\nGame_Map.prototype.boat = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _boat.call(this);\r\n    }\r\n    return TiledManager.getVehicle('boat');\r\n};\r\n\r\nlet _ship = Game_Map.prototype.ship\r\nGame_Map.prototype.ship = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _ship.call(this);\r\n    }\r\n    return TiledManager.getVehicle('ship');\r\n};\r\n\r\nlet _airship = Game_Map.prototype.airship\r\nGame_Map.prototype.airship = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _airship.call(this);\r\n    }\r\n    return TiledManager.getVehicle('airship');\r\n};\r\n\r\nlet _updateVehicles = Game_Map.prototype.updateVehicles\r\nGame_Map.prototype.updateVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        _updateVehicles.call(this);\r\n    }\r\n    TiledManager.updateVehicles(this._vehicles);\r\n};\r\n\r\nGame_Map.prototype.waypoint = function(waypoint) {\r\n    if(this._waypoints[waypoint]) {\r\n        return this._waypoints[waypoint];\r\n    }\r\n    return null;\r\n}\r\n\r\nlet _update = Game_Map.prototype.update\r\nGame_Map.prototype.update = function(sceneActive) {\r\n    this.setLayerProperties();\r\n    _update.call(this, sceneActive);\r\n}\r\n\r\nGame_Map.prototype.getLayerProperties = function(layerId) {\r\n    return Object.assign({}, this._layerProperties[layerId]);\r\n}\r\n\r\nGame_Map.prototype.setLayerProperties = function() {\r\n    this._layerProperties.forEach((props, i) => {\r\n        let layer = this.tiledData.layers[i];\r\n        if(props.transition) {\r\n            props.isShown = !TiledManager.checkLayerHidden(layer);\r\n            props.transitionPhase = Math.max(0, Math.min(props.transition, props.transitionPhase + (props.isShown ? 1 : -1)));\r\n        }\r\n        if(props.autoSpeedX) {\r\n            props.autoX+= props.autoSpeedX\r\n            if(props.autoDuration || props.imageWidth) {\r\n                while(props.autoX < 0) {\r\n                    props.autoX+= props.autoDuration || props.imageWidth;\r\n                }\r\n                while(props.autoX > props.imageWidth) {\r\n                    props.autoX-= props.autoDuration || props.imageWidth;\r\n                }\r\n            }\r\n        }\r\n        if(props.autoSpeedY) {\r\n            props.autoY+= props.autoSpeedY\r\n            if(props.imageHeight) {\r\n                while(props.autoY < 0) {\r\n                    props.autoY+= props.autoDuration || props.imageHeight;\r\n                }\r\n                while(props.autoY > props.imageHeight) {\r\n                    props.autoY-= props.autoDuration || props.imageHeight;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Map.js","\r\nGame_Screen.prototype.startFlashForHeal = function() {\r\n    this.startFlash([128, 192, 255, 128], 8);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Screen.js","let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nGame_CharacterBase.prototype.screenZ = function () {\r\n    if (this._priorityType == 0) {\r\n        return parseInt(pluginParams[\"Z - Below Player\"]);\r\n    }\r\n    if (this._priorityType == 2) {\r\n        return parseInt(pluginParams[\"Z - Above Player\"]);\r\n    }\r\n    return parseInt(pluginParams[\"Z - Player\"]);\r\n};\r\n\r\nlet _distancePerFrame = Game_CharacterBase.prototype.distancePerFrame;\r\nGame_CharacterBase.prototype.distancePerFrame = function () {\r\n    let distance = _distancePerFrame.call(this);\r\n    return distance * (48 / Math.min($gameMap.tileWidth(), $gameMap.tileHeight()));\r\n};\r\n\r\nlet _refreshBushDepth = Game_CharacterBase.prototype.refreshBushDepth;\r\nGame_CharacterBase.prototype.refreshBushDepth = function() {\r\n    if(!this.hasOwnProperty('_bushDepth')) {\r\n        this._bushDepth = 0;\r\n    }\r\n    if(!$gameMap.isTiledMap() || $gameMap.isTiledInitialized()) {\r\n        _refreshBushDepth.call(this);\r\n    } else {\r\n        $gameMap.setRefreshDepth(this);\r\n    }\r\n};\r\n\r\nlet _updateMove = Game_CharacterBase.prototype.updateMove;\r\nGame_CharacterBase.prototype.updateMove = function() {\r\n    var hori = (this._realX > this._x ? 4 : (this._realX < this._x ? 6 : 0))\r\n    var vert = (this._realY > this._y ? 8 : (this._realY < this._y ? 2 : 0))\r\n    var d = hori + vert\r\n    _updateMove.call(this);\r\n    if(!this.isMoving() || pluginParams[\"Position Height - Always Check On Move Update\"].toLowerCase() === \"true\") {\r\n        let newLocationHeight = $gameMap.checkPositionHeight(this._x, this._y);\r\n        if(newLocationHeight > -1) {\r\n            this._locationHeight = newLocationHeight;\r\n        }\r\n    }\r\n    if(!this.isMoving()) {\r\n        TiledManager.triggerListener(this, 'stopmovement', {\r\n            direction: d\r\n        })\r\n        if($gameMap.isSlipperyFloor(this._x, this._y)) {\r\n            TiledManager.triggerListener(this, 'slipperyfloor', {\r\n                direction: d\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nGame_CharacterBase.prototype.locationHeight = function() {\r\n\treturn this._locationHeight || 0\r\n}\r\n\r\nlet _isCollideWithVehicles = Game_CharacterBase.prototype.isCollidedWithVehicles\r\nGame_CharacterBase.prototype.isCollidedWithVehicles = function(x, y) {\r\n    if(!_isCollideWithVehicles.call(this, x, y)) {\r\n        let vehicles = $gameMap.vehicles();\r\n        for(let i = 0; i < vehicles.length; i++) {\r\n            if(!(vehicles[i].vehicleData && (!vehicles[i].vehicleData.hasOwnProperty('hasCollision') || vehicles[i].vehicleData.hasCollision === 'true' || vehicles[i].vehicleData.hasCollision === true)) || vehicles[i].posNt(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGame_CharacterBase.prototype.updateScroll = function(lastScrolledX, lastScrolledY) {\r\n    var x1 = lastScrolledX;\r\n    var y1 = lastScrolledY;\r\n    var x2 = this.scrolledX();\r\n    var y2 = this.scrolledY();\r\n    if (y2 > y1 && y2 > this.centerY()) {\r\n        $gameMap.scrollDown(y2 - y1);\r\n    }\r\n    if (x2 < x1 && x2 < this.centerX()) {\r\n        $gameMap.scrollLeft(x1 - x2);\r\n    }\r\n    if (x2 > x1 && x2 > this.centerX()) {\r\n        $gameMap.scrollRight(x2 - x1);\r\n    }\r\n    if (y2 < y1 && y2 < this.centerY()) {\r\n        $gameMap.scrollUp(y1 - y2);\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_CharacterBase.js","// Constants\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nlet _checkFloorEffect = Game_Actor.prototype.checkFloorEffect;\r\nGame_Actor.prototype.checkFloorEffect = function() {\r\n    _checkFloorEffect.call(this);\r\n    if ($gamePlayer.isOnHealFloor()) {\r\n        this.executeFloorHeal();\r\n    }\r\n}\r\n\r\nGame_Actor.prototype.executeFloorHeal = function() {\r\n    var heal = Math.floor(this.basicFloorHeal() * this.fdr);\r\n    heal = Math.min(heal, this.maxFloorHeal());\r\n    this.gainHp(heal);\r\n    if (heal > 0) {\r\n        this.performMapHeal();\r\n    }\r\n};\r\n\r\nGame_Actor.prototype._getFloorHPCalculation = function(type = 'damage') {\r\n    let typeName = type.slice(0, 1).toUpperCase() + type.slice(1).toLowerCase();\r\n    let floorHP = [];\r\n    for(var layerId = 0; layerId < $gameMap.tiledData.layers; layerId++) {\r\n        let layerData = $gameMap.tiledData.layers[layerId];\r\n        if(!layerData.properties) {\r\n            return;\r\n        }\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        if(level !== $gameMap.currentMapLevel) {\r\n            return;\r\n        }\r\n        if(TiledManager.checkLayerHidden(layerData)) {\r\n            return;\r\n        }\r\n        let tile = Game_Map.prototype.getTileProperties(x, y, layerId);\r\n        if(!!tile.properties && !!tile.properties['floor' + typeName]) {\r\n            floorHP.push(layerData.properties['floor' + typeName]);\r\n        }\r\n    }\r\n    let actualHP = 0;\r\n    switch((pluginParams[\"Floor HP Calculation\"] || '').toLowerCase()) {\r\n        case 'sum':\r\n            floorHP.forEach(hp => {\r\n                actualHP+= hp;\r\n            })\r\n            break;\r\n        case 'average':\r\n            floorHP.forEach(hp => {\r\n                actualHP+= hp;\r\n            })\r\n            actualHP = Math.round(actualHP / floorHP.length);\r\n            break;\r\n        case 'top':\r\n        default:\r\n            actualHP = floorHP.pop();\r\n            break;\r\n    }\r\n    return actualHP;\r\n}\r\n\r\nGame_Actor.prototype.basicFloorDamage = function() {\r\n    let actualDamage = this._getFloorHPCalculation('damage');\r\n    return actualDamage || parseInt(pluginParams[\"Basic Floor Damage\"]) || 10;\r\n};\r\n\r\nGame_Actor.prototype.basicFloorHeal = function() {\r\n    let actualHeal = this._getFloorHPCalculation('heal');\r\n    return actualHeal || parseInt(pluginParams[\"Basic Floor Heal\"]) || 10;\r\n};\r\n\r\nGame_Actor.prototype.maxFloorHeal = function() {\r\n    return Math.max(this.mhp - this.hp, 0);\r\n};\r\n\r\nGame_Actor.prototype.performMapHeal = function() {\r\n    if (!$gameParty.inBattle()) {\r\n        $gameScreen.startFlashForHeal();\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Actor.js","let _initMembers = Game_Player.prototype.initMembers;\r\nGame_Player.prototype.initMembers = function() {\r\n    _initMembers.call(this);\r\n    this._newWaypoint = '';\r\n}\r\n\r\nlet _checkEventTriggerHere = Game_Player.prototype.checkEventTriggerHere;\r\nGame_Player.prototype.checkEventTriggerHere = function (triggers) {\r\n    _checkEventTriggerHere.call(this, triggers);\r\n    this._checkMapLevelChangingHere();\r\n};\r\n\r\nGame_Player.prototype._checkMapLevelChangingHere = function () {\r\n    let oldLevel = $gameMap.currentMapLevel;\r\n    $gameMap.checkMapLevelChanging(this.x, this.y);\r\n    TiledManager.triggerListener(this, 'levelchanged', {\r\n        oldLevel,\r\n        newLevel: $gameMap.currentMapLevel\r\n    })\r\n};\r\n\r\nGame_Player.prototype.isOnHealFloor = function() {\r\n    return $gameMap.isHealFloor(this.x, this.y) && !this.isInAirship();\r\n};\r\n\r\nlet _getOnVehicle = Game_Player.prototype.getOnVehicle\r\nGame_Player.prototype.getOnVehicle = function() {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _getOnVehicle.call(this);\r\n    }\r\n    var direction = this.direction();\r\n    var x1 = this.x;\r\n    var y1 = this.y;\r\n    var x2 = $gameMap.roundXWithDirection(x1, direction);\r\n    var y2 = $gameMap.roundYWithDirection(y1, direction);\r\n    if ($gameMap.airship().pos(x1, y1)) {\r\n        this._vehicleType = 'airship';\r\n    } else if ($gameMap.ship().pos(x2, y2)) {\r\n        this._vehicleType = 'ship';\r\n    } else if ($gameMap.boat().pos(x2, y2)) {\r\n        this._vehicleType = 'boat';\r\n    } else {\r\n        let vehicles = $gameMap.vehicles(true);\r\n        vehicles.forEach(vehicleName => {\r\n            let vehicle = $gameMap.vehicle(vehicleName);\r\n            if(vehicle.vehicleData) {\r\n                if(!vehicle.vehicleData.hasOwnProperty('hasCollision') || vehicle.vehicleData.hasCollision === 'true' || vehicle.vehicleData.hasCollision === true) {\r\n                    if(vehicle.pos(x2, y2)) {\r\n                        this._vehicleType = vehicleName;\r\n                    }\r\n                } else {\r\n                    if(vehicle.pos(x1, y1)) {\r\n                        this._vehicleType = vehicleName;\r\n                    }\r\n                }\r\n            } else if(vehicle.pos(x2, y2)) {\r\n                this._vehicleType = vehicleName;\r\n            }\r\n        })\r\n    }\r\n    if (this.isInVehicle()) {\r\n        this._vehicleGettingOn = true;\r\n        if (!this.isInAirship()) {\r\n            this.forceMoveForward();\r\n        }\r\n        this.gatherFollowers();\r\n    }\r\n    return this._vehicleGettingOn;\r\n};\r\n\r\nlet _gamePlayerTriggerTouchActionD2 = Game_Player.prototype.triggerTouchActionD2\r\nGame_Player.prototype.triggerTouchActionD2 = function(x2, y2) {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _gamePlayerTriggerTouchActionD2.call(this, x2, y2);\r\n    }\r\n    if ($gameMap.boat().pos(x2, y2) || $gameMap.ship().pos(x2, y2)) {\r\n        if (TouchInput.isTriggered() && this.getOnVehicle()) {\r\n            return true;\r\n        }\r\n    }\r\n    if (this.isInBoat() || this.isInShip()) {\r\n        if (TouchInput.isTriggered() && this.getOffVehicle()) {\r\n            return true;\r\n        }\r\n    }\r\n    let vehicles = $gameMap.vehicles(true);\r\n    for(var idx = 0; idx < vehicles.length; idx++) {\r\n        let vehicle = $gameMap.vehicle(vehicles[idx]);\r\n        if(!vehicle.vehicleData ||\r\n            !vehicle.vehicleData.hasOwnProperty('hasCollision') ||\r\n            vehicle.vehicleData.hasCollision === 'true' ||\r\n            vehicle.vehicleData.hasCollision === true\r\n        ) {\r\n            if(vehicle.pos(x2, y2) && TouchInput.isTriggered() && this.getOnVehicle()) {\r\n                return true;\r\n            }\r\n            if(this._vehicleType === vehicles[idx] && TouchInput.isTriggered() && this.getOffVehicle()) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    this.checkEventTriggerThere([0,1,2]);\r\n    return $gameMap.setupStartingEvent();\r\n};\r\n\r\n\r\nlet _isInVehicle = Game_Player.prototype.isInVehicle\r\nGame_Player.prototype.isInVehicle = function() {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _isInVehicle.call(this);\r\n    }\r\n    return $gameMap.vehicles(true).indexOf(this._vehicleType) > -1;\r\n};\r\n\r\nlet _reserveTransfer = Game_Player.prototype.reserveTransfer\r\nGame_Player.prototype.reserveTransfer = function(mapId, x, y, d, fadeType, waypoint = '') {\r\n    _reserveTransfer.call(this, mapId, x, y, d, fadeType);\r\n    this._newWaypoint = waypoint;\r\n}\r\n\r\nGame_Player.prototype.performTransfer = function() {\r\n    if (this.isTransferring()) {\r\n        this.setDirection(this._newDirection);\r\n        if (this._newMapId !== $gameMap.mapId() || this._needsMapReload) {\r\n            $gameMap.setup(this._newMapId);\r\n            this._needsMapReload = false;\r\n        }\r\n        let newX = this._newX;\r\n        let newY = this._newY;\r\n        if($gameMap.isTiledMap()) {\r\n            if(this._newWaypoint) {\r\n                let waypoint = $gameMap.waypoint(this._newWaypoint);\r\n                if(waypoint) {\r\n                    newX = waypoint.x;\r\n                    newY = waypoint.y;\r\n                }\r\n            }\r\n            let offsets = $gameMap.offsets();\r\n            if(offsets && offsets.x && offsets.y) {\r\n                newX-= offsets.x;\r\n                newY-= offsets.y;\r\n            }\r\n        }\r\n        this.locate(newX, newY);\r\n        this.refresh();\r\n        this.clearTransferInfo();\r\n    }\r\n};\r\n\r\nlet _clearTransferInfo = Game_Player.prototype.clearTransferInfo;\r\nGame_Player.prototype.clearTransferInfo = function() {\r\n    _clearTransferInfo.call(this);\r\n    this._newWaypoint = '';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Player.js","let _initialize = Game_Vehicle.prototype.initialize\r\nGame_Vehicle.prototype.initialize = function(type, vehicleData = false) {\r\n    if(vehicleData) {\r\n        this.vehicleData = vehicleData;\r\n    }\r\n    _initialize.call(this, type);\r\n};\r\n\r\nlet _initMoveSpeed = Game_Vehicle.prototype.initMoveSpeed\r\nGame_Vehicle.prototype.initMoveSpeed = function() {\r\n    _initMoveSpeed.call(this);\r\n    if(!!this.vehicleData && this.vehicleData.moveSpeed) {\r\n        this.setMoveSpeed(parseInt(this.vehicleData.moveSpeed));\r\n    }\r\n};\r\n\r\nlet _vehicle = Game_Vehicle.prototype.vehicle\r\nGame_Vehicle.prototype.vehicle = function() {\r\n    var vehicleData = _vehicle.call(this);\r\n    if(!vehicleData && !!this.vehicleData) {\r\n        return this.vehicleData;\r\n    }\r\n    return vehicleData;\r\n};\r\n\r\nlet _isMapPassable = Game_Vehicle.prototype.isMapPassable\r\nGame_Vehicle.prototype.isMapPassable = function(x, y, d, render = false) {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _isMapPassable.call(this, x, y, d);\r\n    }\r\n    var x2 = $gameMap.roundXWithDirection(x, d);\r\n    var y2 = $gameMap.roundYWithDirection(y, d);\r\n    if (this.isBoat()) {\r\n        return $gameMap.isBoatPassable(x2, y2, render);\r\n    } else if (this.isShip()) {\r\n        return $gameMap.isShipPassable(x2, y2, render);\r\n    } else if (this.isAirship()) {\r\n        return true;\r\n    } else {\r\n        var vehicleData = this.vehicle();\r\n        if(!!vehicleData) {\r\n            if(!!vehicleData.tileFlag) {\r\n                return $gameMap.checkHasTileFlag(x2, y2, vehicleData.tileFlag, render);\r\n            }\r\n            if(vehicleData.tileFlag === '') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\r\nGame_Vehicle.prototype.loadSystemSettings = function() {\r\n    var vehicle = (window.$dataSystem ? this.vehicle() : null);\r\n    if(vehicle) {\r\n        this._mapId = vehicle.startMapId;\r\n        this.setPosition(vehicle.startX, vehicle.startY);\r\n        this.setImage(vehicle.characterName, vehicle.characterIndex);\r\n    }\r\n};\r\n\r\nlet _resetDirection = Game_Vehicle.prototype.resetDirection\r\nGame_Vehicle.prototype.resetDirection = function() {\r\n    if(!!this.vehicleData && !!this.vehicleData.direction) {\r\n        this.setDirection(parseInt(this.vehicleData.direction));\r\n    } else {\r\n        _resetDirection.call(this)\r\n    }\r\n};\r\n\r\nGame_Vehicle.prototype.getOff = function() {\r\n    this._driving = false;\r\n    this.setWalkAnime(false);\r\n    this.setStepAnime(false);\r\n    if(!this.vehicleData || !this.vehicleData.hasOwnProperty('resetDirection') || this.vehicleData.resetDirection === 'true') {\r\n        this.resetDirection();\r\n    }\r\n    $gameSystem.replayWalkingBgm();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Vehicle.js","let _pluginCommand = Game_Interpreter.prototype.pluginCommand\r\nGame_Interpreter.prototype.pluginCommand = function(command, args) {\r\n    _pluginCommand.call(this, command, args);\r\n    TiledManager.pluginCommand.call(this, command, args);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Interpreter.js","let _update = Sprite_Character.prototype.update\r\nSprite_Character.prototype.update = function() {\r\n\t_update.call(this);\r\n\tthis.locationHeight = this._character.locationHeight();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Sprite_Character.js","import { TiledTilemap } from \"./TiledTilemap\";\r\n\r\nlet _initialize = Spriteset_Battle.prototype.initialize\r\nSpriteset_Battle.prototype.initialize = function() {\r\n    this._parallaxContainers = {};\r\n    _initialize.call(this);\r\n}\r\n\r\nlet _createTilemap = Spriteset_Map.prototype.createTilemap;\r\nSpriteset_Map.prototype.createTilemap = function () {\r\n    if (!$gameMap.isTiledMap()) {\r\n        _createTilemap.call(this);\r\n        return;\r\n    }\r\n    this._tilemap = new TiledTilemap($gameMap.tiledData);\r\n    this._tilemap.horizontalWrap = $gameMap.isLoopHorizontal();\r\n    this._tilemap.verticalWrap = $gameMap.isLoopVertical();\r\n    this.loadTileset();\r\n    this._baseSprite.addChild(this._tilemap);\r\n};\r\n\r\nlet _loadTileset = Spriteset_Map.prototype.loadTileset;\r\nSpriteset_Map.prototype.loadTileset = function () {\r\n    if (!$gameMap.isTiledMap()) {\r\n        _loadTileset.call(this);\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    for (let tileset of $gameMap.tiledData.tilesets) {\r\n        if(tileset.properties && tileset.properties.ignoreLoading) {\r\n            continue;\r\n        }\r\n        if(tileset.image) {\r\n            let bitmap = ImageManager.loadParserTileset(tileset.image, 0);\r\n            this._tilemap.bitmaps.push(bitmap);\r\n            this._tilemap.indexedBitmaps[i] = bitmap;\r\n        } else {\r\n            this._tilemap.indexedBitmaps[i] = [];\r\n            for(let tile = 0; tile < tileset.tilecount; tile++) {\r\n                if(tileset.tiles[tile]) {\r\n                    let bitmap = ImageManager.loadParserTileset(tileset.tiles[tile].image, 0);\r\n                    this._tilemap.bitmaps.push(bitmap);\r\n                    this._tilemap.indexedBitmaps[i][tile] = bitmap;\r\n                }\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    this._tilemap.refreshTileset();\r\n    this._tileset = $gameMap.tiledData.tilesets;\r\n};\r\n\r\nlet _update = Spriteset_Map.prototype.update;\r\nSpriteset_Map.prototype.update = function () {\r\n    _update.call(this);\r\n    //Disabed updateHideOnLevel, since it got moved to the general layer hide functions\r\n    //this._updateHideOnLevel();\r\n    this._updateHideOnSpecial();\r\n    this._tilemap.updateImageLayer();\r\n};\r\n\r\nSpriteset_Map.prototype.updateTileset = function () {\r\n    if (this._tileset !== $gameMap.tiledData.tilesets) {\r\n        this.loadTileset();\r\n    }\r\n};\r\n\r\nSpriteset_Map.prototype._updateHideOnLevel = function () {\r\n    this._tilemap.hideOnLevel($gameMap.currentMapLevel);\r\n};\r\n\r\nSpriteset_Map.prototype._updateHideOnSpecial = function () {\r\n    if($gamePlayer && $gameMap) {\r\n        this._tilemap.hideOnSpecial();\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Spriteset_Map.js"],"sourceRoot":""}