{"version":3,"sources":["webpack:///webpack/bootstrap 1a5d8772e268b187757b","webpack:///./src/TiledTilemap.js","webpack:///./src/index.js","webpack:///./src/TilesetManager.js","webpack:///./src/DataManager.js","webpack:///./src/ImageManager.js","webpack:///./src/TiledManager.js","webpack:///./src/Sprite_TiledPriorityTile.js","webpack:///./src/AlphaFilter.js","webpack:///./src/TiledTileLayer.js","webpack:///./src/TiledTileShader.js","webpack:///./src/Game_Map.js","webpack:///./src/Game_Screen.js","webpack:///./src/Game_CharacterBase.js","webpack:///./src/Game_Actor.js","webpack:///./src/Game_Player.js","webpack:///./src/Game_Vehicle.js","webpack:///./src/Game_Interpreter.js","webpack:///./src/Sprite_Character.js","webpack:///./src/Spriteset_Map.js"],"names":["pluginParams","PluginManager","parameters","TiledTilemap","tiledData","indexedBitmaps","_tiledData","_layers","_imageLayers","_objectTiles","_priorityTiles","_priorityTilesCount","setupTiled","_setupSize","_setupAnim","width","_width","height","_height","margin","_margin","tileCols","Math","ceil","_tileWidth","tileRows","_tileHeight","tilewidth","tileheight","_layerWidth","_layerHeight","_mapWidth","_mapHeight","_animFrame","_animDuration","id","_needsRepaint","useSquareShader","Number","hasOwnProperty","layers","layerData","zIndex","type","_createImageLayer","properties","parseInt","collision","toLevel","regionId","tileFlags","layer","layerId","spriteId","Sprite","_counter","alpha","opacity","push","addChild","_createPriorityTiles","size","Array","keys","x","sprite","Sprite_TiledPriorityTile","z","hide","renderer","bitmaps","map","isArray","y","_baseTexture","PIXI","Texture","props","$gameMap","getLayerProperties","tilesetBitmaps","tilesets","forEach","tilesetId","setBitmaps","_updateAnim","needRefresh","key","refresh","startX","startY","ox","oy","roundPixels","floor","origin","offsetX","offsetx","offsetY","offsety","position","origX","origY","clear","_paintTiles","_paintObjectLayers","length","visible","_paintTilesLayer","objects","obj","gid","tileId","realTileId","textureId","_getTextureId","offsets","dx","dy","positionHeight","_paintPriorityTile","_paintTile","mx","my","horizontalWrap","mod","verticalWrap","tilePosition","TiledManager","extractTileId","rectLayer","children","tileset","w","h","columns","rId","_getAnimTileId","firstgid","ux","uy","_isPriorityTile","tileproperties","indexOf","addRect","tileOrientation","tile","tiles","imagewidth","imageheight","flipH","flipV","anchor","scale","realTextureId","bitmap","setFrame","priority","_getPriority","_getZIndex","show","ignore","ignoreLoading","tilecount","tilesData","animation","frame","duration","tileid","playerZIndex","level","layerIds","hideOnLevel","transition","isShown","minAlpha","transitionStep","removeChild","hideLayer","checkLayerHidden","hasHideProperties","transitionPhase","a","b","repeatX","repeatY","deltaX","deltaY","autoX","autoY","hue","viewportX","viewportY","viewportWidth","viewportHeight","viewportDeltaX","viewportDeltaY","Sprite_Base","TilingSprite","move","Graphics","ImageManager","loadParserParallax","image","addLoadListener","imageWidth","imageHeight","baseX","baseY","stepAutoX","stepAutoY","layerMask","baseWidth","baseHeight","mask","hasViewport","visibility","baseAlpha","tileWidth","tileHeight","display","displayX","displayY","autoXFunction","autoYFunction","beginFill","drawRect","val","ShaderTilemap","addListener","Game_Player","options","d","direction","$gameParty","members","actor","checkFloorEffect","moveStraight","addHideFunction","currentMapLevel","showOnLevel","$gamePlayer","hideOnRegion","hideOnRegions","split","String","regionIds","regions","filter","region","$gameSwitches","value","hideOnSwitch","showOnSwitch","addFlag","createVehicle","setAutoFunction","sin","PI","cos","registerStandardResolvers","addPluginCommand","args","mapId","waypoint","fadeType","isNaN","toLowerCase","reserveTransfer","setWaitMode","getParameterFlags","getParameterVehicles","TilesetManager","Error","window","_getFilename","path","paths","_getRealPath","getTileset","realPath","loadTileset","callback","xhr","XMLHttpRequest","open","overrideMimeType","onreadystatechange","readyState","status","responseText","JSON","parse","send","DataManager","_tempTiledData","_tiledLoaded","_loadMapData","loadMapData","call","loadTiledMapData","unloadTiledMapData","idx","processTiledData","triggerListener","tiledLoaded","tilesRequired","source","realTileset","Object","assign","returnTileset","_isMapLoaded","isMapLoaded","defaultLoaded","loadParserTileset","loadEmptyBitmap","shift","filename","slice","join","loadNormalBitmap","_listeners","_hideFunctions","_hideIgnoreFunctions","collisions","levelChanges","_tileFlags","_tileFlagIndex","_vehicles","_vehiclesByIndex","_autoFunctions","_pluginCommands","_fullVehicleData","bgm","name","pan","pitch","volume","characterIndex","characterName","startMapId","_processEncoding","base64","data","decodedData","atob","newData","charCodeAt","_registeredObjectResolvers","objectName","event","recursive","object","isStatic","constructor","top","proto","__proto__","parentLayer","$gameData","prototype","splice","apply","concat","encoding","encFunc","chunks","chunk","i","startx","starty","chunkIdx","flagIds","flagId","getFlag","getFlagNames","getFlagLocation","flag","bit","group","vehicleName","vehicleData","vehicle","Game_Vehicle","refreshVehicles","vehicles","getAllVehicles","returnVehicles","getVehicle","updateVehicles","update","identifier","functions","getAutoFunction","objectResolvers","registerTiledObjectResolver","resolver","_waypoints","eventId","_events","_offsets","isHalfTile","locate","_tiledProperties","loadSystemSettings","setLocation","processTiledObject","some","r","command","func","pluginCommand","initialize","arguments","create","updateVisibility","fragmentSrc","filters","AlphaFilter","glShaderKey","uniforms","uAlpha","Filter","TiledTileLayer","useSquare","texPerChild","gl","tiledTileShader","plugins","tilemap","maxTextures","shader","setObjectRenderer","bindShader","_globalMat","Matrix","_activeRenderTarget","projectionMatrix","copy","append","worldTransform","toArray","shadowColor","tempScale","_tempScale","ps","pointScale","projectionScale","abs","resolution","af","animationFrame","tileAnim","renderWebGL","CompositeRectTileLayer","GLBuffer","glCore","VertexArrayObject","squareShaderFrag","squareShaderVert","rectShaderFrag","rectShaderVert","TiledTileShader","vert","frag","shaderGenerator","generateFragmentSrc","vertSize","vertPerQuad","anim","stride","fillSamplers","vb","createVao","addIndex","indexBuffer","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","aFrame","aAnim","aTextureId","TilemapShader","defineProperty","Game_Map","get","configurable","varID","_currentMapLevel","$gameVariables","set","setValue","_setup","setup","_tiledInitialized","_levels","_collisionMap","_arrowCollisionMap","_regions","_mapLevelChange","_positionHeightChange","_collisionMapLayers","_arrowCollisionMapLayers","_regionsLayers","_mapLevelChangeLayers","_positionHeightChangeLayers","_tileFlagsLayers","_layerProperties","_autoSize","_autoSizeBorder","_camera","focus","isTiledMap","$dataMap","_setupTiled","_refreshList","character","refreshBushDepth","isTiledInitialized","setRefreshDepth","_initializeMapProperties","_initializeInfiniteMap","_setLayerProperties","_initializeMapLevel","_setupCollision","_setupRegion","_setupMapLevelChange","_setupTileFlags","_setupTiledEvents","autoSize","border","infinite","_setMapSize","minX","minY","maxX","maxY","x1","y1","x2","y2","_cropInfiniteMap","min","max","autoBorder","autoSizeBorder","offset","limit","forward","vertical","o","s","realO","lineEmpty","empty","o2","coords","autoFunctions","layerProperties","minimumOpacity","autoSpeedX","funcX","autoFunctionX","autoFunction","tFuncX","both","Function","autoSpeedY","funcY","autoFunctionY","tFuncY","_getLayerTilesets","_getTilesetId","_initializeMapLevelData","dataTypes","defaultData","dataType","defaultValue","typeData","_setupCollisionFull","_setupCollisionArrow","halfWidth","halfHeight","realX","ids","_getTileset","tileData","collisionUpLeft","collisionUpRight","collisionDownLeft","collisionDownRight","arrowImpassable","arrowCollisionMap","realBit","arrowImpassableDown","arrowImpassableLeft","arrowImpassableRight","arrowImpassableUp","regionMap","regionOffset","levelChangeMap","_setupPositionHeightChange","positionHeightChangeMap","floorHeight","tileFlagMap","_getTileFlags","_combineFlags","flags","flagNames","property","prop","toUpperCase","target","_regionId","allIds","index","regionLayer","regionValue","main","regionValues","hideData","getMapLevels","levels","sort","_checkPassage","checkPassage","render","arrows","arrowLayer","arrowValue","renderPassage","getPassageLayers","_isPassable","isPassable","collisionMap","collisionLayer","collisionValue","renderIsPassable","getIsPassableLayers","checkMapLevelChanging","mapLevelChange","mapLevelChangeLayer","mapLevelChangeValue","oldValue","oldLevel","newLevel","checkPositionHeight","positionHeightChange","positionHeightChangeLayer","positionHeightChangeValue","getTileFlags","tileFlagsLayer","tileFlagsValue","renderTileFlags","getTileFlagLayers","checkHasTileFlag","renderHasTileFlag","_isBoatPassable","isBoatPassable","renderIsBoatPassable","_isShipPassable","isShipPassable","renderIsShipPassable","_isAirshipLandOk","isAirshipLandOk","renderIsAirshipLandOk","_isLadder","isLadder","isValid","renderIsLadder","_isBush","isBush","renderIsBush","_isCounter","isCounter","renderIsCounter","_isDamageFloor","isDamageFloor","renderIsDamageFloor","isSlipperyFloor","renderIsSlipperyFloor","_isHealFloor","isHealFloor","getAllLayerProperties","ignoreHidden","getTileProperties","tileProperties","_createVehicles","createVehicles","_refreshVehicles","refereshVehicles","getNames","_vehicle","_boat","boat","_ship","ship","_airship","airship","_updateVehicles","_update","sceneActive","setLayerProperties","autoDuration","_battleback1Name","battleback1Name","tileProps","battleback","_battleback2Name","battleback2Name","Game_Screen","startFlashForHeal","startFlash","Game_CharacterBase","screenZ","_priorityType","_distancePerFrame","distancePerFrame","distance","_refreshBushDepth","_bushDepth","_updateMove","updateMove","hori","_realX","_x","_realY","_y","isMoving","newLocationHeight","_locationHeight","locationHeight","_isCollideWithVehicles","isCollidedWithVehicles","hasCollision","posNt","updateScroll","lastScrolledX","lastScrolledY","scrolledX","scrolledY","centerY","scrollDown","centerX","scrollLeft","scrollRight","scrollUp","_checkFloorEffect","Game_Actor","isOnHealFloor","executeFloorHeal","heal","basicFloorHeal","fdr","maxFloorHeal","gainHp","performMapHeal","_getFloorHPCalculation","typeName","floorHP","actualHP","hp","round","pop","basicFloorDamage","actualDamage","actualHeal","mhp","inBattle","$gameScreen","_initMembers","initMembers","_newWaypoint","_checkEventTriggerHere","checkEventTriggerHere","triggers","_checkMapLevelChangingHere","isInAirship","_getOnVehicle","getOnVehicle","roundXWithDirection","roundYWithDirection","pos","_vehicleType","isInVehicle","_vehicleGettingOn","forceMoveForward","gatherFollowers","_gamePlayerTriggerTouchActionD2","triggerTouchActionD2","TouchInput","isTriggered","isInBoat","isInShip","getOffVehicle","checkEventTriggerThere","setupStartingEvent","_isInVehicle","_reserveTransfer","performTransfer","isTransferring","setDirection","_newDirection","_newMapId","_needsMapReload","newX","_newX","newY","_newY","clearTransferInfo","_clearTransferInfo","_initialize","_initMoveSpeed","initMoveSpeed","moveSpeed","setMoveSpeed","_isMapPassable","isMapPassable","isBoat","isShip","isAirship","tileFlag","$dataSystem","_mapId","setPosition","setImage","_resetDirection","resetDirection","getOff","_driving","setWalkAnime","setStepAnime","$gameSystem","replayWalkingBgm","_pluginCommand","Game_Interpreter","Sprite_Character","_character","Spriteset_Battle","_parallaxContainers","_createTilemap","Spriteset_Map","createTilemap","_tilemap","isLoopHorizontal","isLoopVertical","_baseSprite","_loadTileset","refreshTileset","_tileset","_updateHideOnSpecial","updateImageLayer","updateTileset","_updateHideOnLevel","hideOnSpecial"],"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","file":"YED_Tiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1a5d8772e268b187757b","import TiledTileLayer from \"./TiledTileLayer\";\n\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\n/**\n * This class handles the tilemap\n */\nexport class TiledTilemap extends ShaderTilemap {\n    initialize(tiledData) {\n        this.indexedBitmaps = [];\n        this._tiledData = {};\n        this._layers = [];\n        this._imageLayers = [];\n        this._objectTiles = [];\n        this._priorityTiles = [];\n        this._priorityTilesCount = 0;\n        this.tiledData = tiledData;\n        super.initialize();\n        this.setupTiled();\n    }\n\n    get tiledData() {\n        return this._tiledData;\n    }\n\n    set tiledData(val) {\n        this._tiledData = val;\n        this.setupTiled();\n    }\n\n    setupTiled() {\n        this._setupSize();\n        this._setupAnim();\n    }\n\n    _setupSize() {\n        let width = this._width;\n        let height = this._height;\n        let margin = this._margin;\n        let tileCols = Math.ceil(width / this._tileWidth) + 1;\n        let tileRows = Math.ceil(height / this._tileHeight) + 1;\n        this._tileWidth = this.tiledData.tilewidth;\n        this._tileHeight = this.tiledData.tileheight;\n        this._layerWidth = tileCols * this._tileWidth;\n        this._layerHeight = tileRows * this._tileHeight;\n        this._mapWidth = this.tiledData.width;\n        this._mapHeight = this.tiledData.height;\n    }\n\n    _setupAnim() {\n        this._animFrame = {};\n        this._animDuration = {};\n    }\n\n    _createLayers() {\n        let id = 0;\n        this._needsRepaint = true;\n\n        let parameters = PluginManager.parameters('ShaderTilemap');\n        let useSquareShader = Number(parameters.hasOwnProperty('squareShader') ? parameters['squareShader'] : 1);\n\n        for (let layerData of this.tiledData.layers) {\n            let zIndex = 0;\n            if (layerData.type === \"imagelayer\") {\n                this._createImageLayer(layerData, id);\n                id++;\n                continue;\n            }\n            if (layerData.type != \"tilelayer\") {\n                id++;\n                continue;\n            }\n\n            if (!!layerData.properties && !!layerData.properties.zIndex) {\n                zIndex = parseInt(layerData.properties.zIndex);\n            }\n\n            if (!!layerData.properties && !!layerData.properties.collision) {\n                id++;\n                continue;\n            }\n\n            if (!!layerData.properties && !!layerData.properties.toLevel) {\n                id++;\n                continue;\n            }\n\n            if (!!layerData.properties && !!layerData.properties.regionId) {\n                id++;\n                continue;\n            }\n\n            if (!!layerData.properties && layerData.properties.tileFlags === 'hide') {\n                id++;\n                continue;\n            }\n\n            let layer = new TiledTileLayer(zIndex, [], useSquareShader, 32);\n            layer.layerId = id; // @dryami: hack layer index\n            layer.spriteId = Sprite._counter++;\n            layer.alpha = layerData.opacity;\n            this._layers.push(layer);\n            this.addChild(layer);\n            id++;\n        }\n\n        this._createPriorityTiles();\n    }\n\n    _createPriorityTiles() {\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\n        let zIndex = parseInt(pluginParams[\"Z - Player\"]);\n        if(size > 0) {\n            for (let x of Array(size).keys()) {\n                let sprite = new Sprite_TiledPriorityTile();\n                sprite.z = sprite.zIndex = zIndex;\n                sprite.layerId = -1;\n                sprite.hide();\n                this.addChild(sprite);\n                this._priorityTiles.push(sprite);\n            }\n        }\n    }\n\n    _hackRenderer(renderer) {\n        return renderer;\n    }\n\n    refreshTileset() {\n        var bitmaps = this.indexedBitmaps.map(function (x) {\n            if(Array.isArray(x)) {\n                return x.map(function(y) {\n                    return y._baseTexture ? new PIXI.Texture(y._baseTexture) : y;\n                })\n            }\n            return x._baseTexture ? new PIXI.Texture(x._baseTexture) : x;\n        });\n        for (let layer of this._layers) {\n            let props = $gameMap.getLayerProperties(layer.layerId);\n            let tilesetBitmaps = [];\n            if(!props.tilesets) {\n                continue;\n            }\n            props.tilesets.forEach(tilesetId => {\n                tilesetBitmaps.push(bitmaps[tilesetId]);\n            })\n            layer.setBitmaps(tilesetBitmaps);\n        }\n    }\n\n    update() {\n        super.update();\n        this._updateAnim();\n    }\n\n    _updateAnim() {\n        let needRefresh = false;\n        for (let key in this._animDuration) {\n            this._animDuration[key] -= 1;\n            if (this._animDuration[key] <= 0) {\n                this._animFrame[key] += 1;\n                needRefresh = true;\n            }\n        }\n\n        if (needRefresh) {\n            this.refresh();\n        }\n    }\n\n    _updateLayerPositions(startX, startY) {\n        let ox = 0;\n        let oy = 0;\n        if (this.roundPixels) {\n            ox = Math.floor(this.origin.x);\n            oy = Math.floor(this.origin.y);\n        } else {\n            ox = this.origin.x;\n            oy = this.origin.y;\n        }\n\n        for (let layer of this._layers) {\n            let layerData = this.tiledData.layers[layer.layerId];\n            let offsetX = layerData.offsetx || 0;\n            let offsetY = layerData.offsety || 0;\n            layer.position.x = startX * this._tileWidth - ox + offsetX;\n            layer.position.y = startY * this._tileHeight - oy + offsetY;\n        }\n\n        for (let sprite of this._priorityTiles) {\n            let layerData = this.tiledData.layers[sprite.layerId];\n            let offsetX = layerData ? layerData.offsetx || 0 : 0;\n            let offsetY = layerData ? layerData.offsety || 0 : 0;\n            sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + sprite.width / 2;\n            sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + sprite.height;\n        }\n    }\n\n    _paintAllTiles(startX, startY) {\n        this._priorityTilesCount = 0;\n        for (let layer of this._layers) {\n            layer.clear();\n            this._paintTiles(layer, startX, startY);\n        }\n        let id = 0;\n        for (let layerData of this.tiledData.layers) {\n            if (layerData.type != \"objectgroup\") {\n                id++;\n                continue;\n            }\n            this._paintObjectLayers(id, startX, startY);\n            id++;\n        }\n        while (this._priorityTilesCount < this._priorityTiles.length) {\n            let sprite = this._priorityTiles[this._priorityTilesCount];\n            sprite.hide();\n            sprite.layerId = -1;\n            this._priorityTilesCount++;\n        }\n    }\n\n    _paintTiles(layer, startX, startY) {\n        let layerData = this.tiledData.layers[layer.layerId];\n\n        if (!layerData.visible) {\n            return;\n        }\n\n        if (layerData.type == \"tilelayer\") {\n            this._paintTilesLayer(layer, startX, startY);\n        }\n    }\n\n    _paintObjectLayers(layerId, startX, startY) {\n        let layerData = this.tiledData.layers[layerId];\n        let objects = layerData.objects || [];\n\n        for (let obj of objects) {\n            if (!obj.gid) {\n                continue;\n            }\n            if (!obj.visible) {\n                continue;\n            }\n            let tileId = obj.gid;\n            let realTileId = tileId & 0x1FFFFFFF;\n            let textureId = this._getTextureId(realTileId);\n            let offsets = $gameMap.offsets();\n            let dx = obj.x - (startX + offsets.x) * this._tileWidth;\n            let dy = obj.y - (startY + offsets.y) * this._tileHeight - obj.height;\n            let positionHeight = 0;\n            let zIndex = false;\n            if(obj.properties) {\n                if(obj.properties.positionHeight) {\n                    positionHeight = obj.properties.positionHeight;\n                }\n                if(obj.properties.hasOwnProperty('zIndex')) {\n                    zIndex = obj.properties.zIndex;\n                }\n            }\n            this._paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight, zIndex);\n        }\n    }\n\n    _paintTilesLayer(layer, startX, startY) {\n        let tileCols = Math.ceil(this._width / this._tileWidth) + 1;\n        let tileRows = Math.ceil(this._height / this._tileHeight) + 1;\n\n        for (let y of Array(tileRows).keys()) {\n            for (let x of Array(tileCols).keys()) {\n                this._paintTile(layer, startX, startY, x, y);\n            }\n        }\n    }\n\n    _paintTile(layer, startX, startY, x, y) {\n        let mx = x + startX;\n        let my = y + startY;\n        if (this.horizontalWrap) {\n            mx = mx.mod(this._mapWidth);\n        }\n        if (this.verticalWrap) {\n            my = my.mod(this._mapHeight);\n        }\n        let tilePosition = mx + my * this._mapWidth;\n        let tileId = TiledManager.extractTileId(this.tiledData.layers[layer.layerId], tilePosition);\n        let rectLayer = layer.children[0];\n        let textureId = 0;\n        let props = $gameMap.getLayerProperties(layer.layerId);\n\n        if (!tileId) {\n            return;\n        }\n\n        // TODO: Problem with offsets\n        if (mx < 0 || mx >= this._mapWidth || my < 0 || my >= this._mapHeight) {\n            return;\n        }\n\n        textureId = this._getTextureId(tileId);\n        let tileset = this.tiledData.tilesets[textureId];\n        let dx = x * this._tileWidth;\n        let dy = y * this._tileHeight;\n        let w = tileset.tilewidth;\n        let h = tileset.tileheight;\n        let tileCols = tileset.columns;\n        let rId = this._getAnimTileId(textureId, tileId - tileset.firstgid);\n        let ux = (rId % tileCols) * w;\n        let uy = Math.floor(rId / tileCols) * h;\n\n        if (this._isPriorityTile(layer.layerId)) {\n            let positionHeight = 0;\n            if(this.tiledData.layers[layer.layerId].properties.positionHeight) {\n                positionHeight+= this.tiledData.layers[layer.layerId].properties.positionHeight || 0\n            }\n            if(tileset.tileproperties &&\n                tileset.tileproperties[tileId - tileset.firstgid] &&\n                tileset.tileproperties[tileId - tileset.firstgid].positionHeight) {\n                positionHeight+= tileset.tileproperties[tileId - tileset.firstgid].positionHeight || 0\n            }\n            this._paintPriorityTile(layer.layerId, textureId, tileId, startX, startY, dx, dy, positionHeight);\n            return;\n        }\n\n        if(props.tilesets && props.tilesets.indexOf(textureId) > -1) {\n            textureId = props.tilesets.indexOf(textureId);\n        }\n        \n        rectLayer.addRect(textureId, ux, uy, dx, dy, w, h);\n    }\n\n    _paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight = 0, zIndex = false) {\n        let tileset = this.tiledData.tilesets[textureId];\n        let tileOrientation = (tileId >> 24) & 0xe0;\n        let realTileId = tileId & 0x1FFFFFFF;\n        var tile = tileset.tiles ? tileset.tiles[realTileId - tileset.firstgid] || {} : {};\n        let w = tile.imagewidth || tileset.tilewidth;\n        let h = tile.imageheight || tileset.tileheight;\n        let tileCols = tileset.columns;\n        let rId = this._getAnimTileId(textureId, realTileId - tileset.firstgid);\n        let ux = (rId % tileCols) * w;\n        let uy = Math.floor(rId / tileCols) * h;\n        let sprite = this._priorityTiles[this._priorityTilesCount];\n        let layerData = this.tiledData.layers[layerId];\n        let offsetX = layerData ? layerData.offsetx || 0 : 0;\n        let offsetY = layerData ? layerData.offsety || 0 : 0;\n        let ox = 0;\n        let oy = 0;\n        let flipH = tileOrientation === 0x20 || ((tileOrientation & 0x80) > 0);\n        let flipV = tileOrientation === 0x20 || ((tileOrientation & 0x40) > 0);\n        if (this.roundPixels) {\n            ox = Math.floor(this.origin.x);\n            oy = Math.floor(this.origin.y);\n        } else {\n            ox = this.origin.x;\n            oy = this.origin.y;\n        }\n\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\n        if(this._priorityTilesCount >= this._priorityTiles.length) {\n            if (size > 0) {\n                return;\n            } else {\n                sprite = new Sprite_TiledPriorityTile();\n                sprite.z = sprite.zIndex = parseInt(pluginParams[\"Z - Player\"]);\n                this.addChild(sprite);\n                this._priorityTiles.push(sprite);\n            }\n        }\n\n        sprite.layerId = layerId;\n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = (flipV ? 0.0 : 1.0);\n        sprite.origX = dx;\n        sprite.origY = dy;\n        sprite.scale.x = (flipH ? -1 : 1);\n        sprite.scale.y = (flipV ? -1 : 1);\n        sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + w / 2;\n        sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + h;\n        \n        let realTextureId = this._getTextureId(realTileId, true);\n        if(Array.isArray(this.indexedBitmaps[realTextureId])) {\n            var tile = tileset.tiles[realTileId - tileset.firstgid];\n            sprite.bitmap = this.indexedBitmaps[realTextureId][realTileId - tileset.firstgid];\n            sprite.setFrame(0, 0, tile.imagewidth, tile.imageheight);\n        } else {\n            sprite.bitmap = this.indexedBitmaps[realTextureId];\n            sprite.setFrame(ux, uy, w, h);\n        }\n        sprite.priority = this._getPriority(layerId);\n        sprite.z = sprite.zIndex = (zIndex !== false ? zIndex : this._getZIndex(layerId));\n        sprite.positionHeight = positionHeight;\n        sprite.show();\n\n        this._priorityTilesCount += 1;\n    }\n\n    _getTextureId(tileId, ignore = false) {\n        let textureId = 0;\n        for (let tileset of this.tiledData.tilesets) {\n            if (ignore && tileset.properties && tileset.properties.ignoreLoading) {\n                continue;\n            }\n            if (tileId < tileset.firstgid\n                || tileId >= tileset.firstgid + tileset.tilecount) {\n                textureId++;\n                continue;\n            }\n            break;\n        }\n        return textureId;\n    }\n\n    _getAnimTileId(textureId, tileId) {\n        let tilesData = this.tiledData.tilesets[textureId].tiles;\n        if (!tilesData) {\n            return tileId;\n        }\n        if (!tilesData[tileId]) {\n            return tileId;\n        }\n        if (!tilesData[tileId].animation) {\n            return tileId;\n        }\n        let animation = tilesData[tileId].animation;\n        this._animFrame[tileId] = this._animFrame[tileId] || 0;\n        let frame = this._animFrame[tileId];\n        this._animFrame[tileId] = !!animation[frame] ? frame : 0;\n        frame = this._animFrame[tileId];\n        let duration = animation[frame].duration / 1000 * 60;\n        this._animDuration[tileId] = this._animDuration[tileId] || duration;\n        if (this._animDuration[tileId] <= 0) {\n            this._animDuration[tileId] = duration;\n        }\n        return animation[frame].tileid;\n    }\n\n    _getPriority(layerId) {\n        let layerData = this.tiledData.layers[layerId];\n        if (!layerData.properties) {\n            return 0;\n        }\n        if (!layerData.properties.priority) {\n            return 0;\n        }\n        return parseInt(layerData.properties.priority)\n    }\n\n    _isPriorityTile(layerId) {\n        let playerZIndex = parseInt(pluginParams[\"Z - Player\"]);\n        let zIndex = this._getZIndex(layerId);\n        return this._getPriority(layerId) > 0\n            && zIndex === playerZIndex;\n    }\n\n    _getZIndex(layerId) {\n        let layerData = this.tiledData.layers[layerId];\n        if (!layerData) {\n            return 0;\n        }\n        if (!layerData.properties || !layerData.properties.zIndex) {\n            return 0;\n        }\n        return parseInt(layerData.properties.zIndex);\n    }\n\n    /**\n     * Hides a layer based on the level the player is on\n     * \n     * This method has been deprecated in favor of the more general method.\n     */\n    hideOnLevel(level) {\n        let layerIds = [];\n        for (let layer of this._layers) {\n            let layerData = this.tiledData.layers[layer.layerId];\n            if (layerData.properties && layerData.properties.hasOwnProperty(\"hideOnLevel\")) {\n                if (parseInt(layerData.properties.hideOnLevel) !== level) {\n                    if(layer.transition) {\n                        /* If this layer has a transition, we'll need to tell the layer that\n                           it's supposed to be showing. */\n                           layer.isShown = true;\n                    }\n                    this.addChild(layer);\n                    continue;\n                }\n                /* Since the layer is supposed to be hidden, let's first let it transition if\n                   it has a transition fadeout. */\n                if(layer.transition) {\n                    layer.isShown = false;\n                    if(layer.minAlpha > 0 || layer.transitionStep > 0) {\n                        this.addChild(layer)\n                        continue;\n                    }\n                }\n                /* Otherwise remove the layer and hide it */\n                layerIds.push(layer.layerId);\n                this.removeChild(layer);\n            }\n        }\n        this._priorityTiles.forEach(sprite => {\n            if(layerIds.indexOf(sprite.layerId) > -1) {\n                sprite.visible = true;\n            }\n        })\n    }\n    \n    /**\n     * Hides layers on certain special conditions\n     * \n     * This method will analyze each layer, then checks them with certain conditions. If\n     * they meet one condition, they will be hidden.\n     * \n     * It also handles fading in and out layers.\n     */\n    hideOnSpecial() {\n        /* Iterates through each layer */\n        for(let layer of this._layers) {\n            let layerData = this.tiledData.layers[layer.layerId];\n\t\t\tif(layerData.properties) {\n                let hideLayer = TiledManager.checkLayerHidden(layerData);\n                \n\t\t\t\t/* If the layer has a hide property, run this code.\n\t\t\t\t * You don't need to run it for layers that don't have any properties that would\n\t\t\t\t   hide this layer. */\n\t\t\t\tif (TiledManager.hasHideProperties(layerData)) {\n\t\t\t\t\t/* If the layer isn't supposed to be hidden, add the layer to the container */\n                    let props = $gameMap.getLayerProperties(layer.layerId);\n\t\t\t\t\tif (!hideLayer) {\n                        if(props.transition) {\n                            /* If this layer has a transition, we'll need to tell the layer that\n                               it's supposed to be showing. */\n                               props.isShown = true;\n                        }\n\t\t\t\t\t\tthis.addChild(layer);\n\t\t\t\t\t\tcontinue;\n                    }\n                    /* Since the layer is supposed to be hidden, let's first let it transition if\n                       it has a transition fadeout. */\n                    if(props.transition) {\n                        props.isShown = false;\n                        if(props.minAlpha > 0 || props.transitionPhase > 0) {\n                            this.addChild(layer)\n                            continue;\n                        }\n                    }\n                    /* Otherwise remove the layer and hide it */\n\t\t\t\t\tthis.removeChild(layer);\n\t\t\t\t}\n\t\t\t}\n        }\n    }\n\t\n    _compareChildOrder(a, b) {\n        if((this._layers.indexOf(a) > -1 || this._imageLayers.indexOf(a) > -1) &&\n            (this._layers.indexOf(b) > -1 || this._imageLayers.indexOf(b) > -1)) {\n            if ((a.z || 0) !== (b.z || 0)) {\n                return (a.z || 0) - (b.z || 0);\n            } else if ((a.priority || 0) !== (b.priority || 0)) {\n                return (a.priority || 0) - (b.priority || 0);\n            } else if((a.layerId || 0) !== (b.layerId || 0)) {\n                return (a.layerId || 0) - (b.layerId || 0);\n            } else {\n                return a.spriteId - b.spriteId;\n            }\n        } else if ((a.z || 0) !== (b.z || 0)) {\n            return (a.z || 0) - (b.z || 0);\n        } else if (((a.y || 0) + (a.positionHeight || 0)) !== ((b.y || 0) + (b.positionHeight || 0))) {\n            return ((a.y || 0) + (a.positionHeight || 0)) - ((b.y || 0) + (b.positionHeight || 0));\n        } else if ((a.priority || 0) !== (b.priority || 0)) {\n            return (a.priority || 0) - (b.priority || 0);\n        } else {\n            return a.spriteId - b.spriteId;\n        }\n    }\n\n    /* Parallax map stuff */\n\n    _createImageLayer(layerData, id) {\n        let zIndex = 0;\n        let repeatX = false;\n        let repeatY = false;\n        let deltaX = 1;\n        let deltaY = 1;\n        let autoX = 0;\n        let autoY = 0;\n        let hue = 0;\n\t\tlet viewportX = 0;\n\t\tlet viewportY = 0;\n\t\tlet viewportWidth = 0;\n\t\tlet viewportHeight = 0;\n\t\tlet viewportDeltaX = 0;\n\t\tlet viewportDeltaY = 0;\n\n        let props = $gameMap.getLayerProperties(id);\n\n        if(!!layerData.properties) {\n            if(!!layerData.properties.ignoreLoading) {\n                return;\n            }\n            if (!!layerData.properties.zIndex) {\n                zIndex = parseInt(layerData.properties.zIndex);\n            }\n            if(layerData.properties.hasOwnProperty('repeatX')) {\n                repeatX = !!layerData.properties.repeatX;\n            }\n            if(layerData.properties.hasOwnProperty('repeatY')) {\n                repeatY = !!layerData.properties.repeatY;\n            }\n            if(layerData.properties.hasOwnProperty('deltaX')) {\n                deltaX = layerData.properties.deltaX;\n            }\n            if(layerData.properties.hasOwnProperty('deltaY')) {\n                deltaY = layerData.properties.deltaY;\n            }\n            if(!!layerData.properties.autoX) {\n                autoX = layerData.properties.autoX;\n            }\n            if(!!layerData.properties.autoY) {\n                autoY = layerData.properties.autoY;\n            }\n            if(!!layerData.properties.hue) {\n                hue = parseInt(layerData.properties.hue)\n            }\n\t\t\tif(layerData.properties.hasOwnProperty('viewportX')) {\n\t\t\t\tviewportX = layerData.properties.viewportX;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportY')) {\n\t\t\t\tviewportY = layerData.properties.viewportY;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportWidth')) {\n\t\t\t\tviewportWidth = layerData.properties.viewportWidth;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportHeight')) {\n\t\t\t\tviewportHeight = layerData.properties.viewportHeight;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaX')) {\n\t\t\t\tviewportDeltaX = layerData.properties.viewportDeltaX;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaY')) {\n\t\t\t\tviewportDeltaY = layerData.properties.viewportDeltaY;\n\t\t\t}\n        }\n\n        let layer;\n\n        if(!repeatX && !repeatY && !autoX && !autoY) {\n            layer = new Sprite_Base();\n        } else {\n            layer = new TilingSprite();\n            layer.move(0, 0, Graphics.width, Graphics.height);\n        }\n        layer.layerId = id;\n        layer.spriteId = Sprite._counter++;\n        layer.alpha = layerData.opacity;\n        layer.bitmap = ImageManager.loadParserParallax(layerData.image, hue);\n        layer.bitmap.addLoadListener(() => {\n            props.imageWidth = layer.bitmap.width;\n            props.imageHeight = layer.bitmap.height;\n        })\n        layer.baseX = layerData.x + (layerData.offsetx || 0);\n        layer.baseY = layerData.y + (layerData.offsety || 0);\n        layer.z = layer.zIndex = zIndex;\n        layer.repeatX = repeatX;\n        layer.repeatY = repeatY;\n        layer.deltaX = deltaX;\n        layer.deltaY = deltaY;\n        layer.stepAutoX = autoX;\n        layer.stepAutoY = autoY;\n        layer.autoX = 0;\n        layer.autoY = 0;\n\t\tif(viewportWidth || viewportHeight) {\n\t\t\tviewportWidth = viewportWidth || Graphics.width;\n\t\t\tviewportHeight = viewportHeight || Graphics.height;\n\t\t\tlet layerMask = new PIXI.Graphics();\n\t\t\tlayerMask.baseX = viewportX;\n\t\t\tlayerMask.baseY = viewportY;\n\t\t\tlayerMask.baseWidth = viewportWidth;\n\t\t\tlayerMask.baseHeight = viewportHeight;\n\t\t\tlayerMask.deltaX = viewportDeltaX;\n\t\t\tlayerMask.deltaY = viewportDeltaY;\n\t\t\tlayer.mask = layerMask;\n\t\t\tlayer.hasViewport = true;\n\t\t}\n        this._imageLayers.push(layer);\n        this.addChild(layer);\n    }\n\n    updateImageLayer() {\n        this._imageLayers.forEach(layer => {\n            let layerData = this.tiledData.layers[layer.layerId];\n            let props = $gameMap.getLayerProperties(layer.layerId);\n            if(TiledManager.hasHideProperties(layerData)) {\n                let visibility = TiledManager.checkLayerHidden(layerData);\n                if(props.transition) {\n                    layer.alpha = (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\n                    visibility = props.minAlpha > 0 || props.transitionPhase > 0;\n                }\n                layer.visible = visibility;\n            }\n\t\t\tlet offsets = $gameMap.offsets();\n\t\t\toffsets.x*= $gameMap.tileWidth();\n            offsets.y*= $gameMap.tileHeight();\n            let display = {\n                x: $gameMap.displayX() * $gameMap.tileWidth() - offsets.x,\n                y: $gameMap.displayY() * $gameMap.tileHeight() - offsets.y\n            }\n            if(!!layer.origin) {\n                let autoX = props.autoXFunction ? props.autoXFunction(props.autoX, props.autoY || 0) : 0;\n                let autoY = props.autoYFunction ? props.autoYFunction(props.autoX || 0, props.autoY) : 0;\n                if(!layer.repeatX) {\n                    layer.origin.x = layer.baseX - offsets.x + autoX;\n                    layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\n                    layer.width = layer.bitmap.width;\n                } else {\n                    layer.origin.x = layer.baseX - offsets.x + autoX + display.x * layer.deltaX;\n                    layer.x = 0;\n                    layer.width = Graphics.width;\n                }\n                if(!layer.repeatY) {\n                    layer.origin.y = layer.baseY - offsets.y + autoY;\n                    layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\n                    layer.height = layer.bitmap.height;\n                } else {\n                    layer.origin.y = layer.baseY - offsets.y + autoY + display.y * layer.deltaY;\n                    layer.y = 0;\n                    layer.height = Graphics.height;\n                }\n            } else {\n                layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\n                layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\n            }\n\t\t\tif(layer.hasViewport) {\n\t\t\t\tlet viewportX = layer.mask.baseX - offsets.x - display.x * layer.mask.deltaX;\n\t\t\t\tlet viewportY = layer.mask.baseY - offsets.y - display.y * layer.mask.deltaY;\n\t\t\t\tlayer.mask.clear();\n\t\t\t\tlayer.mask.beginFill(0xffffff, 1);\n\t\t\t\tlayer.mask.drawRect(viewportX, viewportY, layer.mask.baseWidth, layer.mask.baseHeight);\n\t\t\t}\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTilemap.js","import \"./TilesetManager\";\nimport \"./DataManager\";\nimport \"./ImageManager\";\nimport \"./TiledManager\";\nimport \"./Sprite_TiledPriorityTile\";\nimport \"./AlphaFilter\";\nimport { TiledTilemap } from \"./TiledTilemap\";\nimport \"./Game_Map\";\nimport \"./Game_Screen\";\nimport \"./Game_CharacterBase\";\nimport \"./Game_Actor\";\nimport \"./Game_Player\";\nimport \"./Game_Vehicle\";\nimport \"./Game_Interpreter\";\nimport \"./Sprite_Character\";\nimport \"./Spriteset_Map\";\n\n/* INITIALIZES LISTENERS */\n\n// Add floor damage while on a slippery floor\nTiledManager.addListener(Game_Player, 'slipperyfloor', function(options) {\n    const d = options.direction\n    $gameParty.members().forEach(actor => {\n        actor.checkFloorEffect();\n    })\n    this.moveStraight(d);\n})\n\n/* INITIALIZES HIDE FUNCTIONS */\n\nTiledManager.addHideFunction('hideOnLevel', function(layerData) {\n    /* Hide if player is on certain level */\n    let level = $gameMap.currentMapLevel;\n    let hideLayer = false;\n    if(parseInt(layerData.properties.hideOnLevel) === level) {\n        hideLayer = true;\n    }\n    return hideLayer;\n});\n\nTiledManager.addHideFunction('showOnLevel', function(layerData) {\n    /* Show if player is on certain level */\n    let level = $gameMap.currentMapLevel;\n    let hideLayer = false;\n    if(parseInt(layerData.properties.showOnLevel) !== level) {\n        hideLayer = true;\n    }\n    return hideLayer;\n});\n\nTiledManager.addHideFunction('hideOnRegion', function(layerData) {\n    /* Hide if player is on certain region */\n    let regionId = $gamePlayer.regionId();\n    let hideLayer = false;\n    if(parseInt(layerData.properties.hideOnRegion) === regionId) {\n        hideLayer = true;\n    }\n    return hideLayer;\n}, ['regions'])\n\nTiledManager.addHideFunction('hideOnRegions', function(layerData) {\n    /* Hide if player is on certain region */\n    let regionId = $gamePlayer.regionId();\n    let hideLayer = false;\n    if(layerData.properties.hideOnRegions.split(',').indexOf(String(regionId)) !== -1) {\n        hideLayer = true;\n    }\n    return hideLayer;\n}, ['regions'])\n\nTiledManager.addHideFunction('hideOnAnyRegions', function(layerData) {\n    /* Hide if player is on certain region */\n    let regionIds = $gamePlayer.regionIds();\n    let hideLayer = false;\n    let regions = layerData.properties.hideOnRegions.split(',');\n    if(regions.filter(region => regionIds.indexOf(region) > -1).length > 0) {\n        hideLayer = true;\n    }\n    return hideLayer;\n}, ['regions'])\n\nTiledManager.addHideFunction('hideOnSwitch', function(layerData) {\n    /* Hide if switch is on */\n    let hideLayer = false;\n    if($gameSwitches.value(layerData.properties.hideOnSwitch)) {\n        hideLayer = true;\n    }\n    return hideLayer;\n})\n\nTiledManager.addHideFunction('showOnSwitch', function(layerData) {\n    /* Show if switch is on */\n    let hideLayer = false;\n    if(!$gameSwitches.value(layerData.properties.showOnSwitch)) {\n        hideLayer = true;\n    }\n    return hideLayer;\n})\n\n/* INITIALIZES FLAGS */\n\nTiledManager.addFlag('boat', 'ship', 'airship')\nTiledManager.addFlag('ladder', 'bush', 'counter', 'damage')\nTiledManager.addFlag('ice', 'autoDown', 'autoLeft', 'autoRight', 'autoUp')\nTiledManager.addFlag('heal')\n\n/* INITIALIZES VEHICLES */\n\nTiledManager.createVehicle('boat', true)\nTiledManager.createVehicle('ship', true)\nTiledManager.createVehicle('airship', true)\n\n/* INITIALIZES AUTO FUNCTIONS */\n\nTiledManager.setAutoFunction('linear', {\n    x: (x, y) => { return x; },\n    y: (x, y) => { return y; }\n})\n\nTiledManager.setAutoFunction('sine', {\n    x: (x, y) => { return Math.sin(x * Math.PI / 180); },\n    y: (x, y) => { return Math.sin(y * Math.PI / 180); }\n})\n\nTiledManager.setAutoFunction('cosine', {\n    x: (x, y) => { return Math.cos(x * Math.PI / 180); },\n    y: (x, y) => { return Math.cos(y * Math.PI / 180); }\n})\n\nTiledManager.registerStandardResolvers();\n\n/* INITIALIZES PLUGIN COMMANDS */\n\nTiledManager.addPluginCommand('TiledTransferPlayer', function(args) {\n    let mapId = parseInt(args[0]);\n    let waypoint = args[1];\n    let direction = args.length > 2 ? args[2] : 0;\n    let fadeType = args.length > 3 ? args[3] : 2;\n    if(isNaN(direction)) {\n        switch(direction.toLowerCase()) {\n            case 'down':\n                direction = 2;\n                break;\n            case 'left':\n                direction = 4;\n                break;\n            case 'right':\n                direction = 6;\n                break;\n            case 'up':\n                direction = 8;\n                break;\n            default:\n                direction = 0;\n                break;\n        }\n    } else {\n        direction = parseInt(direction);\n    }\n    if(isNaN(fadeType)) {\n        // Fix by FrillyWumpus\n        switch(fadeType.toLowerCase()) {\n            case 'black':\n                fadeType = 0;\n                break;\n            case 'white':\n                fadeType = 1;\n                break;\n            default:\n                fadeType = 2;\n                break;\n        }\n    } else {\n        fadeType = parseInt(fadeType);\n    }\n    $gamePlayer.reserveTransfer(mapId, 0, 0, direction, fadeType, waypoint);\n    this.setWaitMode('transfer');\n})\n\nTiledManager.addPluginCommand('TiledSetLevel', function (args) {\n    $gameMap.currentMapLevel = parseInt(args[0]);\n});\n\n/* LOAD CUSTOM DATA FROM THE PARAMTERS */\n\nTiledManager.getParameterFlags()\nTiledManager.getParameterVehicles()\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//-----------------------------------------------------------------------------\n// TilesetManager\n//\n// The static class that manages the TileD tilesets.\n\nfunction TilesetManager() {\n    throw new Error('This is a static class');\n}\n\nwindow.TilesetManager = TilesetManager;\nTilesetManager.tilesets = {};\n\nlet _getFilename = function(path) {\n    let paths = path.split(\"/\");\n    return paths[paths.length - 1];\n};\n\nlet _getRealPath = function(path) {\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\n    return pluginParams[\"Tilesets Location\"] + _getFilename(path);\n};\n\nTilesetManager.getTileset = function(path) {\n    let realPath = _getRealPath(path);\n    return TilesetManager.tilesets[_getFilename(path)];\n};\n\nTilesetManager.loadTileset = function(path, callback = false) {\n    let realPath = _getRealPath(path);\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', './' + realPath);\n    xhr.overrideMimeType('application/json');\n\n    // on success callback\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            let tileset = false;\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\n                tileset = JSON.parse(xhr.responseText);\n                TilesetManager.tilesets[_getFilename(path)] = tileset;\n            }\n            if(callback) {\n                callback(tileset);\n            }\n        }\n    };\n\n    // send request\n    xhr.send();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/TilesetManager.js","DataManager._tempTiledData = null;\nDataManager._tiledLoaded = false;\n\nlet _loadMapData = DataManager.loadMapData;\nDataManager.loadMapData = function (mapId) {\n    _loadMapData.call(this, mapId);\n    if (mapId > 0) {\n        this.loadTiledMapData(mapId);\n    } else {\n        this.unloadTiledMapData();\n    }\n};\n\nDataManager.loadTiledMapData = function (mapId) {\n    var xhr = new XMLHttpRequest();\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\n    xhr.open('GET', \"./\" + pluginParams[\"Maps Location\"] + \"Map\" + mapId + \".json\");\n    xhr.overrideMimeType('application/json');\n\n    // on success callback\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\n                DataManager._tempTiledData = JSON.parse(xhr.responseText);\n                TiledManager.processTiledData(DataManager._tempTiledData);\n                TiledManager.triggerListener(TiledManager, \"tiledmapdataprocessed\", DataManager._tempTiledData, mapId);\n            }\n            let tiledLoaded = true;\n            let tilesRequired = 0;\n            if(DataManager._tempTiledData && DataManager._tempTiledData.tilesets && DataManager._tempTiledData.tilesets.length > 0) {\n                for(var idx = 0; idx < DataManager._tempTiledData.tilesets.length; idx++) {\n                    let tileset = DataManager._tempTiledData.tilesets[idx];\n                    if(tileset.source) {\n                        let realTileset = TilesetManager.getTileset(tileset.source);\n                        if(realTileset) {\n                            DataManager._tempTiledData.tilesets[idx] = Object.assign({}, realTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\n                        } else {\n                            tiledLoaded = false;\n                            tilesRequired++;\n                            +function(idx) {\n                                TilesetManager.loadTileset(tileset.source, function(returnTileset) {\n                                    DataManager._tempTiledData.tilesets[idx] = Object.assign({}, returnTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\n                                    tilesRequired--;\n                                    if(tilesRequired === 0) {\n                                        DataManager._tiledLoaded = true;\n                                    }\n                                });\n                            }(idx);\n                        }\n                    }\n                }\n            }\n            DataManager._tiledLoaded = tiledLoaded;\n        }\n    };\n\n    // set data to null and send request\n    this.unloadTiledMapData();\n    xhr.send();\n};\n\nDataManager.unloadTiledMapData = function () {\n    DataManager._tempTiledData = null;\n    DataManager._tiledLoaded = false;\n};\n\nlet _isMapLoaded = DataManager.isMapLoaded;\nDataManager.isMapLoaded = function() {\n    let defaultLoaded = _isMapLoaded.call(this);\n    let tiledLoaded = DataManager._tiledLoaded;\n\n    return defaultLoaded && tiledLoaded;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/DataManager.js","ImageManager.loadParserTileset = function (path, hue) {\n    if (!path) {\n        return this.loadEmptyBitmap();\n    }\n    let paths = path.split(\"/\");\n    while(paths[0] === '..') {\n        paths.shift();\n    }\n    let filename = paths[paths.length - 1];\n    let realPath = \"img/tilesets/\" + filename;\n    if(paths[0] === 'img') {\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\n    }\n\n    return this.loadNormalBitmap(realPath, hue);\n};\n\nImageManager.loadParserParallax = function (path, hue) {\n    if (!path) {\n        return this.loadEmptyBitmap();\n    }\n    let paths = path.split(\"/\");\n    while(paths[0] === '..') {\n        paths.shift();\n    }\n    let filename = paths[paths.length - 1];\n    let realPath = \"img/parallaxes/\" + filename;\n    if(paths[0] === 'img') {\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\n    }\n\n    return this.loadNormalBitmap(realPath, hue);\n};\n\n\n// WEBPACK FOOTER //\n// ./src/ImageManager.js","//-----------------------------------------------------------------------------\n// TiledManager\n//\n// The static class that manages TileD data, including extensions.\n\nfunction TiledManager() {\n    throw new Error('This is a static class');\n}\n\nwindow.TiledManager = TiledManager;\n\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nlet _listeners = {}\nlet _hideFunctions = {}\nlet _hideIgnoreFunctions = {\n    regions: [],\n    collisions: [],\n    levelChanges: [],\n    tileFlags: []\n}\nlet _tileFlags = {}\nlet _tileFlagIndex = 1;\nlet _vehicles = {};\nlet _vehiclesByIndex = [];\n\nlet _autoFunctions = {};\n\nlet _pluginCommands = {};\n\nlet _fullVehicleData = {\n    bgm: {\n        name: '',\n        pan: 0,\n        pitch: 100,\n        volume: 90\n    },\n    characterIndex: 0,\n    characterName:\"\",\n    startMapId: 0,\n    startX: 0,\n    startY: 0\n};\n\nlet _processEncoding = {\n\tbase64: function(data) {\n\t\tlet decodedData = atob(data);\n\t\tlet newData = [];\n\t\tfor (let idx = 0; idx < decodedData.length; idx+= 4) {\n\t\t\tnewData.push(decodedData.charCodeAt(idx) | ((decodedData.charCodeAt(idx + 1) || 0) << 8) | ((decodedData.charCodeAt(idx + 2) || 0) << 16) | ((decodedData.charCodeAt(idx + 3) || 0) << 24));\n\t\t}\n\t\treturn newData;\n\t}\n};\n\nlet _registeredObjectResolvers = [];\n\nTiledManager.addListener = function(objectName, event, callback, recursive = true) {\n    if(typeof objectName === 'function') {\n        objectName = objectName.name\n    }\n    if(!_listeners[objectName]) {\n        _listeners[objectName] = {}\n    }\n    if(!_listeners[objectName][event]) {\n        _listeners[objectName][event] = []\n    }\n    callback.recursive = !!recursive\n    _listeners[objectName][event].push(callback)\n}\n\nTiledManager.triggerListener = function(object, event, options = {}) {\n\n    // Handle static classes such as managers\n    let isStatic = object.constructor.name === \"Function\";\n    let objectName = isStatic ? object.name : object.constructor.name;\n\n    if(!_listeners[objectName] || !_listeners[objectName][event]) {\n        return false\n    }\n\n    if (isStatic) {\n        _listeners[objectName][event].forEach(callback => {\n            if (top || callback.recursive) {\n                callback.call(object, options)\n            }\n        })\n    } else {\n        let top = true\n        let proto = object.__proto__\n        while(proto) {\n            objectName = proto.constructor.name\n            if(_listeners[objectName] && _listeners[objectName][event]) {\n                _listeners[objectName][event].forEach(callback => {\n                    if(top || callback.recursive) {\n                        callback.call(object, options)\n                    }\n                })\n            }\n            top = false\n            proto = proto.__proto__\n        }\n    }\n}\n\nTiledManager.addHideFunction = function(id, callback, ignore = []) {\n    _hideFunctions[id] = callback\n\n    ignore.forEach((type) => {\n        _hideIgnoreFunctions[type].push(id)\n    })\n}\n\nTiledManager.checkLayerHidden = function(layerData, ignore = []) {\n    if(typeof ignore === 'string') {\n        ignore = _hideIgnoreFunctions[ignore] || []\n    }\n    let keys = Object.keys(_hideFunctions);\n    let data = false;\n    for(let idx = 0; idx < keys.length; idx++) {\n        if(ignore.indexOf(keys) !== -1) {\n            continue;\n        }\n        if(layerData.properties && layerData.properties.hasOwnProperty(keys[idx])) {\n            data = data || _hideFunctions[keys[idx]](layerData);\n        }\n        if(data) {\n            return data;\n        }\n    }\n    return data;\n}\n\nTiledManager.hasHideProperties = function(layerData) {\n    return (layerData.properties && (\n        Object.keys(_hideFunctions).filter(key => {\n            return layerData.properties.hasOwnProperty(key)\n        }).length > 0)\n    );\n}\n\nTiledManager.processTiledData = function(parentLayer = false) {\n    if(!parentLayer) {\n        parentLayer = $gameData.tiledData\n    }\n    if(!parentLayer) {\n        return;\n    }\n    for(var idx = 0; idx < parentLayer.layers.length; idx++) {\n        let layer = parentLayer.layers[idx];\n        if(layer.type === 'group') {\n\t\t\tTiledManager.processTiledData(layer);\n\t\t\tArray.prototype.splice.apply(parentLayer.layers, [idx, 1].concat(layer.layers))\n\t\t\tidx+= layer.layers.length - 1;\n        } else if(layer.type === 'tilelayer') {\n\t\t\tlet encoding = layer.encoding || '';\n\t\t\tif(encoding && _processEncoding.hasOwnProperty(encoding)) {\n\t\t\t\tlet encFunc = _processEncoding[encoding];\n\t\t\t\tif(layer.data) {\n\t\t\t\t\tlayer.data = encFunc(layer.data);\n\t\t\t\t} else if(layer.chunks) {\n\t\t\t\t\tlayer.chunks.forEach(chunk => {\n\t\t\t\t\t\tchunk.data = encFunc(chunk.data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n        }\n\n        // Trigger listener that a layer has been processed.\n        TiledManager.triggerListener(TiledManager, \"tiledlayerdataprocessed\", layer, parentLayer);\n    }\n}\n\nTiledManager.extractTileId = function(layerData, i) {\n\tif(layerData.data) {\n\t\treturn layerData.data[i];\n\t} else {\n\t\tlet x = i % $gameMap.width();\n\t\tlet y = Math.floor(i / $gameMap.width());\n\t\tlet offsets = $gameMap.offsets();\n\t\tx+= offsets.x;\n\t\ty+= offsets.y;\n\t\tif(x < layerData.startx || y < layerData.starty || x >= layerData.startx + layerData.width || y >= layerData.starty + layerData.height) {\n\t\t\treturn 0;\n\t\t}\n\t\tfor(let chunkIdx = 0; chunkIdx < layerData.chunks.length; chunkIdx++) {\n\t\t\tlet chunk = layerData.chunks[chunkIdx];\n\t\t\tif(x < chunk.x || y < chunk.y || x >= chunk.x + chunk.width || y >= chunk.y + chunk.height) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn chunk.data[x - chunk.x + (y - chunk.y) * chunk.width];\n\t\t}\n\t\treturn 0;\n\t}\n}\n\n/* TILE FLAGS */\n\nTiledManager.addFlag = function(...flagIds) {\n    flagIds.forEach(flagId => {\n        _tileFlags[flagId] = _tileFlagIndex++;\n    })\n}\n\nTiledManager.getFlag = function(flagId) {\n    return _tileFlags[flagId];\n}\n\nTiledManager.getFlagNames = function() {\n    return Object.keys(_tileFlags);\n}\n\nTiledManager.getFlagLocation = function(flagId) {\n    let flag = _tileFlags[flagId]\n    let bit = (1 << (flag % 16)) & 0xffff;\n    let group = Math.floor(flag / 16);\n    return [group, bit];\n}\n\nTiledManager.getParameterFlags = function() {\n    if(!!pluginParams['Custom Tile Flags']) {\n        let tileFlags = JSON.parse(pluginParams['Custom Tile Flags']);\n        TiledManager.addFlag.apply(this, tileFlags);\n    }\n}\n\n/* VEHICLES */\nTiledManager.createVehicle = function(vehicleName, vehicleData = false) {\n    if(!vehicleData) {\n        vehicleData = Object.assign({}, _fullVehicleData, {\n            bgm: Object.assign({}, _fullVehicleData.bgm)\n        });\n    } else if(vehicleData !== true) {\n        vehicleData = Object.assign({}, _fullVehicleData, vehicleData, {\n            bgm: Object.assign({}, _fullVehicleData.bgm, vehicleData.bgm)\n        });\n    }\n    let vehicle = new Game_Vehicle(vehicleName, vehicleData);\n    _vehicles[vehicleName] = vehicle;\n    _vehiclesByIndex.push(vehicleName);\n};\n\nTiledManager.refreshVehicles = function(vehicles = []) {\n    _vehiclesByIndex.forEach(vehicleName => {\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\n            _vehicles[vehicleName].refresh();\n        }\n    });\n};\n\nTiledManager.getAllVehicles = function(vehicles = []) {\n    let returnVehicles = [];\n    _vehiclesByIndex.forEach(vehicleName => {\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\n            returnVehicles.push(_vehicles[vehicleName]);\n        }\n    });\n    return returnVehicles;\n};\n\nTiledManager.getVehicle = function(id) {\n    if(isNaN(id)) {\n        if(_vehicles[id]) {\n            return _vehicles[id];\n        }\n    } else {\n        if(id < _vehiclesByIndex.length) {\n            return _vehicles[_vehiclesByIndex[id]];\n        }\n    }\n    return null;\n}\n\nTiledManager.updateVehicles = function(vehicles = []) {\n    _vehiclesByIndex.forEach(vehicleName => {\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\n            _vehicles[vehicleName].update();\n        }\n    });\n}\n\nTiledManager.getParameterVehicles = function() {\n    if(!!pluginParams['Custom Vehicles']) {\n        let vehicles = JSON.parse(pluginParams['Custom Vehicles']);\n        vehicles.forEach(vehicle => {\n            let vehicleData = JSON.parse(vehicle);\n            TiledManager.createVehicle(vehicleData.vehicleName, vehicleData);\n        })\n    }\n}\n\nTiledManager.setAutoFunction = function(identifier, functions = {}) {\n    _autoFunctions[identifier] = functions;\n}\n\nTiledManager.getAutoFunction = function(identifier) {\n    return _autoFunctions[identifier] || false;\n}\n\n/* Tiled Object Handlers */\nTiledManager.objectResolvers = {};\n\n/**\n * Registers an object resolver that will pre-process a tiled object.\n * The object resolver should return true if it processed the object, so then\n * other resolvers won't be called.\n * @param {(object, map)=>boolean} resolver\n */\nTiledManager.registerTiledObjectResolver = function (resolver) {\n    _registeredObjectResolvers.push(resolver);\n}\n\n/**\n * Object resolver for handling waypoints\n * @param {*} object \n * @param {*} map \n */\nTiledManager.objectResolvers.waypoint = function (object, map) {\n    if (object.properties && object.properties.waypoint) {\n\n        let x = object.x / map.tileWidth();\n        let y = object.y / map.tileHeight();\n        if (pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\n            x = Math.floor(x);\n            y = Math.floor(y);\n        }\n\n        map._waypoints[object.properties.waypoint] = { x, y }\n        return true;\n    }\n    return false;\n}\n\n/**\n * Object resolver for mapping to an existing event\n * @param {*} object \n * @param {*} map \n */\nTiledManager.objectResolvers.eventId = function (object, map) {\n    if (object.properties && object.properties.eventId) {\n        let event;\n        let eventId = parseInt(object.properties.eventId);\n        event = map._events[eventId];\n\n        if (event) {\n            let x = object.x / map.tileWidth() - map._offsets.x;\n            let y = object.y / map.tileHeight() - map._offsets.y;\n            if (pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\n                x = Math.floor(x);\n                y = Math.floor(y);\n            }\n            if (map.isHalfTile()) {\n                x += 1;\n                y += 1;\n            }\n\n            event.locate(x, y);\n\n            event._tiledProperties = object.properties;\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Object resolver for mapping a vehicle\n * @param {*} object \n * @param {*} map \n */\nTiledManager.objectResolvers.vehicle = function (object, map) {\n    if (object.properties && object.properties.eventId) {\n        let event = map.vehicle(object.properties.vehicle);\n        map._vehicles.push(object.properties.vehicle);\n\n        if (event) {\n            let x = object.x / map.tileWidth() - map._offsets.x;\n            let y = object.y / map.tileHeight() - map._offsets.y;\n            if (pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\n                x = Math.floor(x);\n                y = Math.floor(y);\n            }\n            if (map.isHalfTile()) {\n                x += 1;\n                y += 1;\n            }\n\n            event.loadSystemSettings();\n            event.setLocation(this.mapId(), x, y);\n\n            event._tiledProperties = object.properties;\n            return true;\n        }\n    }\n\n    return false;\n}\n\nTiledManager.registerStandardResolvers = function() {\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.waypoint);\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.eventId);\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.vehicle);\n}\n\nTiledManager.processTiledObject = function (object, map) {\n    _registeredObjectResolvers.some(r => r(object, map));\n}\n\n/* PLUGIN COMMANDS */\n\nTiledManager.addPluginCommand = function(command, func) {\n    _pluginCommands[command] = func;\n}\n\nTiledManager.pluginCommand = function(command, args) {\n    if(_pluginCommands.hasOwnProperty(command)) {\n        _pluginCommands[command].call(this, args);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledManager.js","//-----------------------------------------------------------------------------\n// Sprite_TiledPriorityTile\n//\n// The sprite for displaying a priority tile.\n\nfunction Sprite_TiledPriorityTile() {\n    this.initialize.apply(this, arguments);\n}\n\nSprite_TiledPriorityTile.prototype = Object.create(Sprite_Base.prototype);\nSprite_TiledPriorityTile.prototype.constructor = Sprite_TiledPriorityTile;\n\nwindow.Sprite_TiledPriorityTile = Sprite_TiledPriorityTile;\n\nSprite_TiledPriorityTile.prototype.updateVisibility = function() {\n    let visibility = false;\n    if(this.layerId > -1) {\n        visibility = true;\n        let props = $gameMap.getLayerProperties(this.layerId);\n        if(props.transition) {\n            visibility = props.minAlpha > 0 || props.transitionPhase > 0;\n            this.opacity = 255 * (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\n        } else {\n            let layer = $gameMap.tiledData.layers[this.layerId];\n            visibility = !TiledManager.checkLayerHidden(layer);\n        }\n    }\n    this.visible = visibility;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sprite_TiledPriorityTile.js","/* A fallback implementation of AlphaFilter */\n\nconst fragmentSrc = 'varying vec2 vTextureCoord;' +\n'uniform sampler2D uSampler;' +\n'uniform float uAlpha;' +\n'void main(void)' +\n'{' +\n'   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;' +\n'}';\n\nif(!PIXI.filters.AlphaFilter) {\n    class AlphaFilter extends PIXI.Filter\n    {\n        /**\n         * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\n         */\n        constructor(alpha = 1.0)\n        {\n            super(\n                // vertex shader\n                null,\n                // fragment shader\n               fragmentSrc\n            );\n            this.alpha = alpha;\n            this.glShaderKey = 'alpha';\n        }\n        /**\n         * Coefficient for alpha multiplication\n         *\n         * @member {number}\n         * @default 1\n         */\n        get alpha()\n        {\n            return this.uniforms.uAlpha;\n        }\n        set alpha(value) // eslint-disable-line require-jsdoc\n        {\n            this.uniforms.uAlpha = value;\n        }\n    }\n    PIXI.filters.AlphaFilter = AlphaFilter;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/AlphaFilter.js","import TiledTileShader from \"./TiledTileShader\";\n\nexport default class TiledTileLayer extends PIXI.tilemap.CompositeRectTileLayer {\n    constructor(zIndex, bitmaps, useSquare, texPerChild) {\n        super(zIndex, bitmaps, useSquare, texPerChild)\n    }\n\n    renderWebGL(renderer) {\n        var gl = renderer.gl;\n        if(!this.tiledTileShader) {\n            this.tiledTileShader = new TiledTileShader(gl, renderer.plugins.tilemap.maxTextures, this.useSquare)\n        }\n        var alpha = this.alpha;\n        var props = $gameMap.getLayerProperties(this.layerId);\n        if(props.transition) {\n            alpha-= props.minAlpha\n            alpha*= (props.transitionPhase / props.transition)\n            alpha+= props.minAlpha\n        }\n        //var shader = renderer.plugins.tilemap.getShader(this.useSquare);\n        var shader = this.tiledTileShader;\n        renderer.setObjectRenderer(renderer.plugins.tilemap);\n        renderer.bindShader(shader);\n        this._globalMat = this._globalMat || new PIXI.Matrix();\n        renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\n        shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\n        shader.uniforms.shadowColor = this.shadowColor;\n        shader.uniforms.alpha = alpha;\n        if (this.useSquare) {\n            var tempScale = this._tempScale = (this._tempScale || [0, 0]);\n            tempScale[0] = this._globalMat.a >= 0 ? 1 : -1;\n            tempScale[1] = this._globalMat.d < 0 ? 1 : -1;\n            var ps = shader.uniforms.pointScale = tempScale;\n            shader.uniforms.projectionScale = Math.abs(this.worldTransform.a) * renderer.resolution;\n        }\n        var af = shader.uniforms.animationFrame = renderer.plugins.tilemap.tileAnim;\n        var layers = this.children;\n        for (var i = 0; i < layers.length; i++) {\n            layers[i].renderWebGL(renderer, this.useSquare);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTileLayer.js","const GLBuffer = PIXI.glCore.GLBuffer;\nconst VertexArrayObject = PIXI.glCore.VertexArrayObject;\n\nvar squareShaderFrag = `\nvarying vec2 vTextureCoord;\nvarying float vSize;\nvarying float vTextureId;\n\nuniform vec4 shadowColor;\nuniform sampler2D uSamplers[%count%];\nuniform vec2 uSamplerSize[%count%];\nuniform vec2 pointScale;\nuniform float alpha;\n\nvoid main(void){\n   float margin = 0.5 / vSize;\n   vec2 pointCoord = (gl_PointCoord - 0.5) * pointScale + 0.5;\n   vec2 clamped = vec2(clamp(pointCoord.x, margin, 1.0 - margin), clamp(pointCoord.y, margin, 1.0 - margin));\n   vec2 textureCoord = pointCoord * vSize + vTextureCoord;\n   float textureId = vTextureId;\n   vec4 color;\n   %forloop%\n   gl_FragColor = color * alpha;\n}\n`\n\nvar squareShaderVert = `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec2 aAnim;\nattribute float aTextureId;\nattribute float aSize;\n\nuniform mat3 projectionMatrix;\nuniform vec2 samplerSize;\nuniform vec2 animationFrame;\nuniform float projectionScale;\n\nvarying vec2 vTextureCoord;\nvarying float vSize;\nvarying float vTextureId;\n\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition + aSize * 0.5, 1.0)).xy, 0.0, 1.0);\n   gl_PointSize = aSize * projectionScale;\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\n   vTextureId = aTextureId;\n   vSize = aSize;\n}\n`\nvar rectShaderFrag = `\nvarying vec2 vTextureCoord;\nvarying vec4 vFrame;\nvarying float vTextureId;\nuniform vec4 shadowColor;\nuniform sampler2D uSamplers[%count%];\nuniform vec2 uSamplerSize[%count%];\nuniform float alpha;\nvoid main(void){\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\n   float textureId = floor(vTextureId + 0.5);\n   vec4 color;\n   %forloop%\n   gl_FragColor = color * alpha;\n}\n`;\n\nvar rectShaderVert = `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aFrame;\nattribute vec2 aAnim;\nattribute float aTextureId;\nuniform mat3 projectionMatrix;\nuniform vec2 animationFrame;\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vFrame;\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n   vec2 anim = aAnim * animationFrame;\n   vTextureCoord = aTextureCoord + anim;\n   vFrame = aFrame + vec4(anim, anim);\n   vTextureId = aTextureId;\n}\n`;\nexport default class TiledTileShader extends PIXI.tilemap.TilemapShader {\n\n    constructor(gl, maxTextures, useSquare) {\n        let vert = useSquare ? squareShaderVert : rectShaderVert;\n        let frag = useSquare ? squareShaderFrag : rectShaderFrag;\n        super(gl,\n            maxTextures,\n            vert,\n            PIXI.tilemap.shaderGenerator.generateFragmentSrc(maxTextures, frag)\n        );\n        if(useSquare) {\n            this.vertSize = 8;\n            this.vertPerQuad = 1;\n            this.anim = 5;\n            this.textureId = 7;\n        } else {\n            this.vertSize = 11;\n            this.vertPerQuad = 4;\n            this.anim = 8;\n            this.textureId = 10;\n        }\n        this.maxTextures = maxTextures;\n        this.stride = this.vertSize * 4;\n        PIXI.tilemap.shaderGenerator.fillSamplers(this, this.maxTextures);\n    }\n\n    createVao(renderer, vb) {\n        var gl = renderer.gl;\n        return renderer.createVao()\n            .addIndex(this.indexBuffer)\n            .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\n            .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\n            .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\n            .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, this.anim * 4)\n            .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, this.textureId * 4);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTileShader.js","// Constants\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nObject.defineProperty(Game_Map.prototype, 'tiledData', {\n    get: function () {\n        return DataManager._tempTiledData;\n    },\n    configurable: true\n});\n\nObject.defineProperty(Game_Map.prototype, 'currentMapLevel', {\n    get: function () {\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\n        if (!varID) {\n            return this._currentMapLevel;\n        } else {\n            return $gameVariables.value(varID);\n        }\n    },\n    set: function (value) {\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\n        if (!varID) {\n            this._currentMapLevel = value;\n        } else {\n            $gameVariables.setValue(varID, value);\n        }\n    },\n    configurable: true\n});\n\nlet _setup = Game_Map.prototype.setup;\nGame_Map.prototype.setup = function (mapId) {\n    this._tiledInitialized = false;\n    this._levels = [];\n    this._collisionMap = {};\n    this._arrowCollisionMap = {};\n    this._regions = {};\n    this._mapLevelChange = {};\n    this._positionHeightChange = {};\n    this._tileFlags = {};\n    this._collisionMapLayers = [];\n    this._arrowCollisionMapLayers = [];\n    this._regionsLayers = [];\n    this._mapLevelChangeLayers = [];\n    this._positionHeightChangeLayers = [];\n    this._tileFlagsLayers = [];\n    this._currentMapLevel = 0;\n    this.currentMapLevel = 0;\n    this._waypoints = {};\n    this._layerProperties = [];\n    this._autoSize = false;\n    this._autoSizeBorder = 0;\n    this._offsets = { x: 0, y: 0 };\n    this._camera = {\n        focus: \"player\",\n        data: null\n    }\n    _setup.call(this, mapId);\n    if (this.isTiledMap()) {\n        $dataMap.width = this.tiledData.width;\n        $dataMap.height = this.tiledData.height;\n        this._setupTiled();\n        this._tiledInitialized = true;\n        if(this._refreshList) {\n            this._refreshList.forEach(character => {\n                character.refreshBushDepth();\n            })\n        }\n    } else {\n\t\tthis._tiledInitialized = true;\n\t}\n};\n\nGame_Map.prototype.isTiledInitialized = function() {\n    return !!this._tiledInitialized;\n}\n\nGame_Map.prototype.setRefreshDepth = function(character) {\n    if(!this._refreshList) {\n        this._refreshList = [];\n    }\n    this._refreshList.push(character);\n}\n\nGame_Map.prototype.isTiledMap = function () {\n    return !!this.tiledData;\n};\n\nGame_Map.prototype._setupTiled = function () {\n    this._initializeMapProperties();\n    this._initializeInfiniteMap();\n    this._setLayerProperties();\n    this._initializeMapLevel(0);\n\n    this._setupCollision();\n    this._setupRegion();\n    this._setupMapLevelChange();\n    this._setupTileFlags();\n    this._setupTiledEvents();\n};\n\nGame_Map.prototype._initializeMapProperties = function() {\n    let autoSize = false;\n    let border = 0;\n    if(this.tiledData.properties) {\n        if(this.tiledData.properties.hasOwnProperty('autoSize')) {\n            autoSize = this.tiledData.properties.autoSize;\n        }\n        if(this.tiledData.properties.hasOwnProperty('border')) {\n            border = this.tiledData.properties.border;\n        }\n    }\n    this._autoSize = autoSize;\n    this._autoSizeBorder = border;\n}\n\nGame_Map.prototype.offsets = function(x = false, y = false) {\n\tif(typeof x === 'object') {\n\t\tlet offsets = {\n\t\t\tx: (x.x || 0) - this._offsets.x,\n\t\t\ty: (x.y || 0) - this._offsets.y\n\t\t}\n\t\tif(typeof y === 'string' && offsets.hasOwnProperty(y)) {\n\t\t\treturn offsets[y];\n\t\t}\n\t\treturn offsets;\n\t}\n\tif(x !== false || y !== false) {\n\t\treturn {\n\t\t\tx: (x || 0) - this._offsets.x,\n\t\t\ty: (y || 0) - this._offsets.y\n\t\t}\n\t}\n    return {\n        x: this._offsets.x,\n        y: this._offsets.y\n    }\n}\n\nGame_Map.prototype._initializeInfiniteMap = function() {\n    if(!this.tiledData.infinite) {\n        return;\n    }\n    if(this._autoSize && this._autoSize !== 'false') {\n        this._setMapSize();\n    }\n\t/*\n\tThis used to convert chunk data into regular map data. I removed it because I realized that really big maps\n\twill pose a huge memory problem, especially if you have a lot of layers. It also won't affect the load time,\n\tas all other data will already be pre-processed.\n\t*/\n\t/*\n\tfor (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n\t\tlet layerData = this.tiledData.layers[idx];\n\t\tif(!layerData.data && !!layerData.chunks) {\n\t\t\tlayerData.data = new Array(this.width() * this.height());\n\t\t\tlayerData.data.fill(0);\n\t\t\tlayerData.chunks.forEach(chunk => {\n\t\t\t\tfor(let i = 0; i < chunk.data.length; i++) {\n\t\t\t\t\tlet x = chunk.x - this._offsets.x + (i % chunk.width);\n\t\t\t\t\tlet y = chunk.y - this._offsets.y + Math.floor(i / chunk.width);\n\t\t\t\t\tif(x < 0 || y < 0 || x >= layerData.x + this.width() || y >= layerData.x + this.width()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet realX = x + y * this.width();\n\t\t\t\t\tlayerData.data[realX] = chunk.data[i];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\t*/\n}\n\n/**\n * Resizes an infinite map so that the entire map is visible.\n * The only thing this does is set the offset and the size of the map,\n * without changing the map data itself.\n */\nGame_Map.prototype._setMapSize = function() {\n\t// Initialize variables\n    var minX = false;\n    var minY = false;\n    var maxX = false;\n    var maxY = false;\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        var layer = this.tiledData.layers[idx];\n        if(layer.type !== 'tilelayer') {\n            continue;\n        }\n        var x1 = layer.startx;\n        var y1 = layer.starty;\n        var x2 = x1 + layer.width;\n        var y2 = y1 + layer.height;\n\t\tif(this._autoSize === 'deep' || this._autoSize === 'crop') {\n\t\t\tif(minX === false || x1 < minX) {\n\t\t\t\tx1 = this._cropInfiniteMap(layer, x1, (minX === false ? x2 : minX));\n\t\t\t}\n\t\t\tif(minY === false || y1 < minY) {\n\t\t\t\ty1 = this._cropInfiniteMap(layer, y1, (minY === false ? y2 : minY), true, true);\n\t\t\t}\n\t\t\tif(maxX === false || x2 > maxX) {\n\t\t\t\tx2 = this._cropInfiniteMap(layer, x2, (maxX === false ? x1 : maxX), false);\n\t\t\t}\n\t\t\tif(maxY === false || y2 > maxY) {\n\t\t\t\ty2 = this._cropInfiniteMap(layer, y2, (maxY === false ? y1 : maxY), false, true);\n\t\t\t}\n\t\t}\n        minX = minX !== false ? Math.min(minX, x1) : x1;\n        minY = minY !== false ? Math.min(minY, y1) : y1;\n        maxX = maxX !== false ? Math.max(maxX, x2) : x2;\n        maxY = maxY !== false ? Math.max(maxY, y2) : y2;\n    }\n\tif(this._autoSizeBorder) {\n\t\tlet border = [0, 0, 0, 0];\n\t\tif(isNaN(this._autoSizeBorder)) {\n\t\t\tlet autoBorder = this.autoSizeBorder.split(' ');\n\t\t\tborder[0] = parseInt(autoBorder[0]);\n\t\t\tborder[1] = autoBorder.length < 2 ? border[0] : parseInt(autoBorder[1]);\n\t\t\tborder[2] = autoBorder.length < 3 ? border[0] : parseInt(autoBorder[2]);\n\t\t\tborder[3] = autoBorder.length < 4 ? border[1] : parseInt(autoBorder[3]);\n\t\t} else {\n\t\t\tborder[0] = this._autoSizeBorder;\n\t\t\tborder[1] = this._autoSizeBorder;\n\t\t\tborder[2] = this._autoSizeBorder;\n\t\t\tborder[3] = this._autoSizeBorder;\n\t\t}\n\t\tminX-= +border[3];\n\t\tminY-= +border[0];\n\t\tmaxX+= +border[1];\n\t\tmaxY+= +border[2];\n\t}\n    this._offsets.x = minX;\n    this._offsets.y = minY;\n    this.tiledData.width = maxX - minX;\n    this.tiledData.height = maxY - minY;\n}\n\nGame_Map.prototype._cropInfiniteMap = function(layer, offset, limit, forward = true, vertical = false) {\n\tlet o = offset;\n\tlet d = vertical ? 'y' : 'x';\n\tlet s = vertical ? 'height' : 'width';\n\twhile((forward && o < limit) || (!forward && o > limit)) {\n\t\tlet realO = o - (!forward ? 1 : 0);\n\t\tlet lineEmpty = true;\n\t\tfor(let chunkIdx = 0; chunkIdx < layer.chunks.length; chunkIdx++) {\n\t\t\tlet chunk = layer.chunks[chunkIdx];\n\t\t\tif(realO < chunk[d] || realO >= chunk[d] + chunk[s]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet empty = true;\n\t\t\tfor(let o2 = 0; o2 < chunk[s]; o2++) {\n\t\t\t\tlet coords = {\n\t\t\t\t\t[d]: realO - chunk[d],\n\t\t\t\t\t[vertical ? 'x' : 'y']: o2\n\t\t\t\t};\n\t\t\t\tlet i = coords.x + coords.y * chunk.width;\n\t\t\t\tif(chunk.data[i]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!empty) {\n\t\t\t\tlineEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!lineEmpty) {\n\t\t\tbreak;\n\t\t}\n\t\to+= forward ? 1 : -1;\n\t}\n\treturn o;\n}\n\nGame_Map.prototype._setLayerProperties = function() {\n    let autoFunctions = {};\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layer = this.tiledData.layers[idx];\n        let layerProperties = Object.assign({}, layer.properties, {layerId: idx});\n        if(layerProperties.transition) {\n            layerProperties.baseAlpha = layer.opacity;\n            layerProperties.minAlpha = Math.min(layerProperties.baseAlpha, (layer.properties.minimumOpacity || 0));\n            layerProperties.isShown = !TiledManager.checkLayerHidden(layer);\n            layerProperties.transitionPhase = layerProperties.isShown ? layerProperties.transition : 0;\n        }\n        if(layerProperties.autoX) {\n            layerProperties.autoSpeedX = layerProperties.autoX;\n            layerProperties.autoX = 0;\n            layerProperties.imageWidth = layerProperties.imageWidth || 0;\n            let funcX = 'linear';\n            if(layerProperties.autoFunctionX) {\n                funcX = layerProperties.autoFunctionX;\n            } else if (layerProperties.autoFunction) {\n                funcX = layerProperties.autoFunction;\n            }\n            let tFuncX = TiledManager.getAutoFunction(funcX);\n            if(tFuncX) {\n                layerProperties.autoXFunction = tFuncX.x || tFuncX.both;\n            } else {\n                if(!autoFunctions[funcX]) {\n                    autoFunctions[funcX] = new Function('x', 'y', funcX);\n                }\n                layerProperties.autoXFunction = autoFunctions[funcX];\n            }\n        }\n        if(layerProperties.autoY) {\n            layerProperties.autoSpeedY = layerProperties.autoY;\n            layerProperties.autoY = 0;\n            layerProperties.imageHeight = layerProperties.imageHeight || 0;\n            let funcY = 'linear';\n            if(layerProperties.autoFunctionY) {\n                funcY = layerProperties.autoFunctionY;\n            } else if (layerProperties.autoFunction) {\n                funcY = layerProperties.autoFunction;\n            }\n            let tFuncY = TiledManager.getAutoFunction(funcY);\n            if(tFuncY) {\n                layerProperties.autoYFunction = tFuncY.y || tFuncY.both;\n            } else {\n                if(!autoFunctions[funcY]) {\n                    autoFunctions[funcY] = new Function('x', 'y', funcY);\n                }\n                layerProperties.autoYFunction = autoFunctions[funcY];\n            }\n        }\n        this._getLayerTilesets(layer, layerProperties);\n        this._layerProperties.push(layerProperties);\n    }\n}\n\nGame_Map.prototype._getLayerTilesets = function(layer, props) {\n    if(layer.type !== 'tilelayer') {\n        return;\n    }\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    props.tilesets = [];\n    for (let i of Array(size).keys()) {\n        let tileId = TiledManager.extractTileId(layer, i);\n        if (!!tileId) {\n            let tilesetId = this._getTilesetId(tileId);\n            if(tilesetId === -1 || props.tilesets.indexOf(tilesetId) > -1) {\n                continue;\n            }\n            props.tilesets.push(tilesetId);\n        }\n    }\n}\n\nGame_Map.prototype._initializeMapLevel = function (id) {\n    if (!!this._collisionMap[id]) {\n        return;\n    }\n\n    this._levels.push(id);\n\n    this._collisionMap[id] = {};\n    this._arrowCollisionMap[id] = {};\n    this._regions[id] = {};\n    this._mapLevelChange[id] = {};\n    this._tileFlags[id] = {};\n    this._collisionMapLayers[id] = [];\n    this._arrowCollisionMapLayers[id] = [];\n    this._regionsLayers[id] = [];\n    this._mapLevelChangeLayers[id] = [];\n    this._tileFlagsLayers[id] = [];\n    this._initializeMapLevelData(id);\n};\n\nGame_Map.prototype._initializeMapLevelData = function(id = 0, layerId = 'main', dataTypes = false) {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    \n    const defaultData = {\n        'collisionMap': 0,\n        'arrowCollisionMap': 1 | 2 | 4 | 8,\n        'regions': 0,\n        'mapLevelChange': -1,\n        'positionHeightChange': -1,\n        'tileFlags': 0\n    }\n\n    if(!dataTypes) {\n        dataTypes = Object.keys(defaultData);\n    }\n\n    for(let idx = 0; idx < dataTypes.length; idx++) {\n        let dataType = dataTypes[idx];\n        let defaultValue = defaultData[dataType];\n        if(!this['_' + dataType][id]) {\n            this['_' + dataType][id] = {};\n            this['_' + dataType + 'Layers'][id] = [];\n        }\n        if(!!this['_' + dataType][id][layerId]) {\n            continue;\n        }\n        this['_' + dataType][id][layerId] = []\n        let typeData = this['_' + dataType][id][layerId]\n        for (let x of Array(size).keys()) {\n            typeData.push(defaultValue);\n        }\n    }\n}\n\nGame_Map.prototype._setupCollision = function () {\n    this._setupCollisionFull();\n    this._setupCollisionArrow();\n};\n\nGame_Map.prototype._setupCollisionFull = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.collision) {\n            continue;\n        }\n\n        if (layerData.properties.collision !== \"full\"\n            && layerData.properties.collision !== \"up-left\"\n            && layerData.properties.collision !== \"up-right\"\n            && layerData.properties.collision !== \"down-left\"\n            && layerData.properties.collision !== \"down-right\"\n            && layerData.properties.collision !== \"tiles\") {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._collisionMapLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['collisionMap']);\n        }\n        \n        for (let x of Array(size).keys()) {\n            let realX = x;\n            let ids = [];\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                switch(layerData.properties.collision) {\n                    case \"full\":\n                        ids.push(realX);\n                        if (this.isHalfTile()) {\n                            ids.push(realX + 1, realX + width, realX + width + 1);\n                        }\n                        break;\n                    case \"up-left\":\n                        ids.push(realX);\n                        break;\n                    case \"up-right\":\n                        ids.push(realX + 1);\n                        break;\n                    case \"down-left\":\n                        ids.push(realX + width);\n                        break;\n                    case \"down-right\":\n                        ids.push(realX + width + 1);\n                        break;\n                    case \"tiles\":\n                        let tileId = TiledManager.extractTileId(layerData, x);\n                        let tileset = this._getTileset(tileId);\n                        if(tileset && tileset.tileproperties) {\n                            let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                            if(tileData) {\n                                if(tileData.collision) {\n                                    ids.push(realX);\n                                    if (this.isHalfTile()) {\n                                        ids.push(realX + 1, realX + width, realX + width + 1);\n                                    }\n                                }\n                                if(tileData.collisionUpLeft) {\n                                    ids.push(realX);\n                                }\n                                if(tileData.collisionUpRight) {\n                                    ids.push(realX + 1);\n                                }\n                                if(tileData.collisionDownLeft) {\n                                    ids.push(realX + width);\n                                }\n                                if(tileData.collisionDownRight) {\n                                    ids.push(realX + width + 1);\n                                }\n                            }\n                        }\n                        break;\n                }\n                for (let id of ids) {\n                    this._collisionMap[level][layerId][id] = 1;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupCollisionArrow = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let bit = 0;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.collision) {\n            continue;\n        }\n\n        if (layerData.properties.collision !== \"arrow\" && layerData.properties.collision !== \"tiles\") {\n            continue;\n        }\n\n        if (!layerData.properties.arrowImpassable && layerData.properties.collision !== \"tiles\") {\n            continue;\n        }\n        \n        if(layerData.properties.arrowImpassable) {\n\n            if (layerData.properties.arrowImpassable === \"down\") {\n                bit = 1;\n            }\n\n            if (layerData.properties.arrowImpassable === \"left\") {\n                bit = 2;\n            }\n\n            if (layerData.properties.arrowImpassable === \"right\") {\n                bit = 4;\n            }\n\n            if (layerData.properties.arrowImpassable === \"up\") {\n                bit = 8;\n            }\n\n\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._arrowCollisionMapLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['arrowCollisionMap']);\n        }\n        \n        let arrowCollisionMap = this._arrowCollisionMap[level][layerId];\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                let realBit = bit;\n                if(layerData.properties.collision === \"tiles\") {\n                    realBit = 0;\n                    let tileId = TiledManager.extractTileId(layerData, x);\n                    let tileset = this._getTileset(tileId);\n                    if(tileset && tileset.tileproperties) {\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                        if(tileData) {\n                            if(tileData.arrowImpassableDown) {\n                                realBit+= 1;\n                            }\n                            if(tileData.arrowImpassableLeft) {\n                                realBit+= 2;\n                            }\n                            if(tileData.arrowImpassableRight) {\n                                realBit+= 4;\n                            }\n                            if(tileData.arrowImpassableUp) {\n                                realBit+= 8;\n                            }\n                        }\n                    }\n                }\n                arrowCollisionMap[realX] = arrowCollisionMap[realX] ^ realBit;\n                if (this.isHalfTile()) {\n                    arrowCollisionMap[realX + 1]\n                        = arrowCollisionMap[realX + 1] ^ realBit;\n                    arrowCollisionMap[realX + width]\n                        = arrowCollisionMap[realX + width] ^ realBit;\n                    arrowCollisionMap[realX + width + 1]\n                        = arrowCollisionMap[realX + width + 1] ^ realBit;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupRegion = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.regionId) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._regionsLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['regions']);\n        }\n        \n        let regionMap = this._regions[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                let regionId = 0;\n                if(layerData.properties.regionId > -1) {\n                    regionId = parseInt(layerData.properties.regionId);\n                } else {\n                    let tileId = TiledManager.extractTileId(layerData, x);\n                    let tileset = this._getTileset(tileId);\n                    if(tileset && tileset.tileproperties) {\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                        if(tileData && tileData.regionId) {\n                            regionId = parseInt(tileData.regionId);\n                        }\n                    }\n                    if(layerData.properties.regionOffset) {\n                        regionId+= layerData.properties.regionOffset;\n                    }\n                }\n                regionMap[realX] = regionId;\n                if (this.isHalfTile()) {\n                    regionMap[realX + 1] = regionId;\n                    regionMap[realX + width] = regionId;\n                    regionMap[realX + width + 1] = regionId;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupMapLevelChange = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('toLevel')) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._mapLevelChangeLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['mapLevelChange']);\n        }\n        \n        let levelChangeMap = this._mapLevelChange[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            let toLevel = parseInt(layerData.properties.toLevel);\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                levelChangeMap[realX] = toLevel;\n                if (this.isHalfTile()) {\n                    levelChangeMap[realX + 1] = toLevel;\n                    levelChangeMap[realX + width] = toLevel;\n                    levelChangeMap[realX + width + 1] = toLevel;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupPositionHeightChange = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('floorHeight')) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._positionHeightChangeLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['positionHeightChange']);\n        }\n        \n        let positionHeightChangeMap = this._positionHeightChange[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            let toLevel = parseInt(layerData.properties.floorHeight);\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                positionHeightChangeMap[realX] = toLevel;\n                if (this.isHalfTile()) {\n                    positionHeightChangeMap[realX + 1] = toLevel;\n                    positionHeightChangeMap[realX + width] = toLevel;\n                    positionHeightChangeMap[realX + width + 1] = toLevel;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupTileFlags = function() {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n    \n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.tileFlags) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._tileFlagsLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['tileFlags']);\n        }\n        \n        let tileFlagMap = this._tileFlags[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                let tileFlags = 0;\n                let tileId = TiledManager.extractTileId(layerData, x);\n                let tileset = this._getTileset(tileId);\n                if(tileset && tileset.tileproperties) {\n                    let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                    if(tileData) {\n                        tileFlags = this._getTileFlags(tileData);\n                    }\n                }\n                tileFlagMap[realX] = this._combineFlags(tileFlagMap[realX], tileFlags);\n                if (this.isHalfTile()) {\n                    tileFlagMap[realX + 1] = this._combineFlags(tileFlagMap[realX + 1], tileFlags);\n                    tileFlagMap[realX + width] = this._combineFlags(tileFlagMap[realX + width], tileFlags);\n                    tileFlagMap[realX + width + 1] = this._combineFlags(tileFlagMap[realX + width + 1], tileFlags);\n                }\n            }\n        }\n    }\n}\n\nGame_Map.prototype._getTileFlags = function(tileData) {\n    let flags = []\n    let flagNames = TiledManager.getFlagNames()\n    flagNames.forEach(prop => {\n        let property = 'flagIs' + prop.slice(0, 1).toUpperCase() + prop.slice(1)\n        if(tileData[property]) {\n            let [group, bit] = TiledManager.getFlagLocation(prop)\n            for(let i = flags.length; i <= group; i++) {\n                flags.push(0)\n            }\n            flags[group]|= bit\n        }\n    })\n    return flags.length > 0 ? flags : 0\n}\n\nGame_Map.prototype._combineFlags = function (source, target) {\n    source = source ? source.slice(0) : []\n    for(let i = 0; i < target.length; i++) {\n        if(!source.length <= i) {\n            source.push(i)\n        }\n        source[i]|= target[i];\n    }\n    return source;\n}\n\nGame_Map.prototype._setupTiledEvents = function () {\n    for (let layerData of this.tiledData.layers) {\n        if (layerData.type !== \"objectgroup\") {\n            continue;\n        }\n\n        for (let object of layerData.objects) {\n            // call the object resolvers to perform actions based on the objects\n            TiledManager.processTiledObject(object, this);\n        }\n    }\n};\n\nGame_Map.prototype.isHalfTile = function () {\n    return pluginParams[\"Half-tile movement\"].toLowerCase() === \"true\";\n};\n\nGame_Map.prototype._getTileset = function(tileId) {\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\n        let tileset = this.tiledData.tilesets[idx];\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\n            return tileset;\n        }\n    }\n    return null;\n};\n\nGame_Map.prototype._getTilesetId = function(tileId) {\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\n        let tileset = this.tiledData.tilesets[idx];\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\n                if(tileset.properties && tileset.properties.ignoreLoading) {\n                    return -1;\n                }\n                return idx;\n        }\n    }\n    return -1;\n};\n\nGame_Map.prototype.tileWidth = function () {\n    let tileWidth = this.tiledData.tilewidth;\n    if (this.isHalfTile()) {\n        tileWidth /= 2;\n    }\n    return tileWidth;\n};\n\nGame_Map.prototype.tileHeight = function () {\n    let tileHeight = this.tiledData.tileheight;\n    if (this.isHalfTile()) {\n        tileHeight /= 2;\n    }\n    return tileHeight;\n};\n\nGame_Map.prototype.width = function () {\n    let width = this.tiledData.width;\n    if (this.isHalfTile()) {\n        width *= 2;\n    }\n    return width;\n};\n\nGame_Map.prototype.height = function () {\n    let height = this.tiledData.height;\n    if (this.isHalfTile()) {\n        height *= 2;\n    }\n    return height;\n};\n\nlet _regionId = Game_Map.prototype.regionId;\nGame_Map.prototype.regionId = function (x, y, allIds = false) {\n    if (!this.isTiledMap() || !this.isTiledInitialized()) {\n        return _regionId.call(this, x, y);\n    }\n\n    let index = Math.floor(x) + this.width() * Math.floor(y);\n    let regionMap = this._regions[this.currentMapLevel];\n    if(!regionMap) {\n        return allIds ? [0] : 0;\n    }\n    let regionLayer = this._regionsLayers[this.currentMapLevel];\n    \n    let regionValue = regionMap.main[index];\n    let regionValues = [regionValue];\n\n    if(regionLayer && regionLayer.length > 0) {\n        for(let idx = 0; idx < regionLayer.length; idx++) {\n            let layerId = regionLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'regions');\n            if(!hideData) {\n                if(allIds) {\n                    regionValues.push(regionMap[layerId][index]);\n                } else {\n                    regionValue = regionMap[layerId][index];\n                }\n            }\n        }\n    }\n\n    return allIds ? regionValues : regionValue;\n};\n\nGame_Map.prototype.regionIds = function (x, y) {\n    return this.regionId(x, y, true);\n}\n\nGame_Map.prototype.getMapLevels = function() {\n    let levels = this._levels.slice(0);\n    levels.sort((a, b) => {\n        return a - b;\n    });\n    return levels;\n}\n\nlet _checkPassage = Game_Map.prototype.checkPassage;\nGame_Map.prototype.checkPassage = function (x, y, bit, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _checkPassage.call(this, x, y, d);\n    }\n    if(level === false) {\n        level = this._currentMapLevel;\n    }\n    let index = x + this.width() * y;\n    let arrows = this._arrowCollisionMap[level];\n    if(!arrows) {\n        return true;\n    }\n    let arrowLayer = this._arrowCollisionMapLayers[level];\n    let arrowValue = arrows.main[index];\n    \n    if(render && arrows[render]) {\n        arrowValue = arrows[render][index];\n    } else if(arrowLayer && arrowLayer.length > 0) {\n        for(let idx = 0; idx < arrowLayer.length; idx++) {\n            let layerId = arrowLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\n            if(!hideData) {\n                arrowValue&= arrows[layerId][index];\n            }\n        }\n    }\n\n    return (arrowValue & bit) > 0\n}\n\nGame_Map.prototype.renderPassage = function (x, y, bit, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._arrowCollisionMap[level][render]) {\n        render = 'main';\n    }\n    return this.checkPassage(x, y, bit, render, level);\n}\n\nGame_Map.prototype.getPassageLayers = function(level) {\n    return this._arrowCollisionMapLayers[level].slice(0);\n}\n\nlet _isPassable = Game_Map.prototype.isPassable;\nGame_Map.prototype.isPassable = function (x, y, d, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isPassable.call(this, x, y, d);\n    }\n    if(level === false) {\n        level = this._currentMapLevel;\n    }\n\n    if(!this.checkPassage(x, y, (1 << (d / 2 - 1)) & 0x0f, render)) {\n        return false;\n    }\n    \n    let index = x + this.width() * y;\n    let collisionMap = this._collisionMap[level];\n    if(!collisionMap) {\n        return true;\n    }\n    let collisionLayer = this._collisionMapLayers[level];\n    let collisionValue = collisionMap.main[index]\n    \n    if(render && collisionMap[render]) {\n        collisionValue = collisionMap[render][index];\n    } else if(collisionLayer && collisionLayer.length > 0) {\n        for(let idx = 0; idx < collisionLayer.length; idx++) {\n            let layerId = collisionLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\n            if(!hideData) {\n                collisionValue|= collisionMap[layerId][index];\n            }\n        }\n    }\n\n    return collisionValue === 0;\n};\n\nGame_Map.prototype.renderIsPassable = function (x, y, d, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._collisionMap[level][render]) {\n        render = 'main';\n    }\n    return this.isPassable(x, y, d, render, level);\n}\n\nGame_Map.prototype.getIsPassableLayers = function(level) {\n    return this._collisionMapLayers[level].slice(0);\n}\n\nGame_Map.prototype.checkMapLevelChanging = function (x, y) {\n    let mapLevelChange = this._mapLevelChange[this.currentMapLevel];\n    if(!mapLevelChange) {\n        return false;\n    }\n    let mapLevelChangeLayer = this._mapLevelChangeLayers[this.currentMapLevel];\n    let index = y * this.width() + x;\n    let mapLevelChangeValue = mapLevelChange.main[index]\n    if(mapLevelChangeLayer.length > 0) {\n        for(let idx = 0; idx < mapLevelChangeLayer.length; idx++) {\n            let layerId = mapLevelChangeLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'levelChanges');\n            if(!hideData) {\n                mapLevelChangeValue = mapLevelChange[layerId][index];\n            }\n        }\n    }\n    if (mapLevelChangeValue < 0) {\n        return false;\n    }\n    let oldValue = this.currentMapLevel;\n    this.currentMapLevel = mapLevelChangeValue;\n    TiledManager.triggerListener(this, 'levelchanged', {\n        oldLevel: oldValue,\n        newLevel: mapLevelChangeValue\n    })\n    return true;\n};\n\nGame_Map.prototype.checkPositionHeight = function (x, y) {\n    let positionHeightChange = this._positionHeightChange[this.currentMapLevel];\n    if(!positionHeightChange) {\n        return -1;\n    }\n    let positionHeightChangeLayer = this._positionHeightChangeLayers[this.currentMapLevel];\n    let index = y * this.width() + x;\n    let positionHeightChangeValue = positionHeightChange.main[index];\n    if(positionHeightChangeLayer.length > 0) {\n        for(let idx = 0; idx < positionHeightChangeLayer.length; idx++) {\n            let layerId = positionHeightChangeLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'positionHeightChanges');\n            if(!hideData) {\n                positionHeightChangeValue = positionHeightChange[layerId][index];\n            }\n        }\n    }\n    return positionHeightChangeValue;\n};\n\nGame_Map.prototype.getTileFlags = function (x, y, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    let index = x + this.width() * y;\n    let tileFlags = this._tileFlags[level];\n    if(!tileFlags) {\n        return [];\n    }\n    let tileFlagsLayer = this._tileFlagsLayers[level];\n    let tileFlagsValue = (tileFlags.main[index] ? tileFlags.main[index].slice(0) : []);\n\n    if(render && tileFlags[render]) {\n        tileFlagsValue = (tileFlags[render][index] ? tileFlags[render][index].slice(0) : []);\n    } else if(tileFlagsLayer && tileFlagsLayer.length > 0) {\n        for(let idx = 0; idx < tileFlagsLayer.length; idx++) {\n            let layerId = tileFlagsLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'tileFlags');\n            if(!hideData && tileFlags[layerId][index]) {\n                tileFlagsValue = this._combineFlags(tileFlagsValue, tileFlags[layerId][index])\n            }\n        }\n    }\n    return tileFlagsValue\n}\n\nGame_Map.prototype.renderTileFlags = function (x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._tileFlags[level][render]) {\n        render = 'main';\n    }\n    return this.getTileFlags(x, y, render, level);\n}\n\nGame_Map.prototype.getTileFlagLayers = function(level) {\n    return this._tileFlagsLayers[level].slice(0);\n}\n\nGame_Map.prototype.checkHasTileFlag = function (x, y, flag, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    if(typeof flag === 'string') {\n        flag = TiledManager.getFlag(flag)\n    }\n    let bit = (1 << (flag % 16)) & 0xffff;\n    let group = Math.floor(flag / 16);\n    let tileFlagsValue = this.getTileFlags(x, y, render, level);\n    \n    return (tileFlagsValue[group] & bit) > 0\n}\n\nGame_Map.prototype.renderHasTileFlag = function (x, y, flag, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._tileFlags[level][render]) {\n        render = 'main';\n    }\n    return this.checkHasTileFlag(x, y, flag, render, level);\n}\n\nlet _isBoatPassable = Game_Map.prototype.isBoatPassable\nGame_Map.prototype.isBoatPassable = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isBoatPassable.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.checkHasTileFlag(x, y, 'boat', render, level);\n};\n\nGame_Map.prototype.renderIsBoatPassable = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isBoatPassable(x, y, render, level);\n}\n\nlet _isShipPassable = Game_Map.prototype.isShipPassable\nGame_Map.prototype.isShipPassable = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isShipPassable.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.checkHasTileFlag(x, y, 'ship', render);\n};\n\nGame_Map.prototype.renderIsShipPassable = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isShipPassable(x, y, render, level);\n}\n\nlet _isAirshipLandOk = Game_Map.prototype.isAirshipLandOk\nGame_Map.prototype.isAirshipLandOk = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isAirshipLandOk.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.checkHasTileFlag(x, y, 'airship', render) && this.checkPassage(x, y, 0x0f, render);\n};\n\nGame_Map.prototype.renderIsAirshipLandOk = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isAirshipLandOk(x, y, render, level);\n}\n\nlet _isLadder = Game_Map.prototype.isLadder\nGame_Map.prototype.isLadder = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isLadder.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ladder', render);\n};\n\nGame_Map.prototype.renderIsLadder = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isLadder(x, y, render, level);\n}\n\nlet _isBush = Game_Map.prototype.isBush\nGame_Map.prototype.isBush = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isBush.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'bush', render);\n};\n\nGame_Map.prototype.renderIsBush = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isBush(x, y, render, level);\n}\n\nlet _isCounter = Game_Map.prototype.isCounter\nGame_Map.prototype.isCounter = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isCounter.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'counter', render);\n};\n\nGame_Map.prototype.renderIsCounter = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isCounter(x, y, render, level);\n}\n\nlet _isDamageFloor = Game_Map.prototype.isDamageFloor\nGame_Map.prototype.isDamageFloor = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isDamageFloor.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'damage', render);\n};\n\nGame_Map.prototype.renderIsDamageFloor = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isDamageFloor(x, y, render, level);\n}\n\nGame_Map.prototype.isSlipperyFloor = function(x, y, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ice', render);\n};\n\nGame_Map.prototype.renderIsSlipperyFloor = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isSlipperyFloor(x, y, render, level);\n}\n\nlet _isHealFloor = Game_Map.prototype.isHealFloor\nGame_Map.prototype.isHealFloor = function(x, y, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'heal', render);\n};\n\nGame_Map.prototype.getAllLayerProperties = function(layer = -1, ignoreHidden = true) {\n\tif(layer > -1) {\n\t\tif(this.tiledData.layers[layer] && this.tiledData.layers[layer].properties) {\n\t\t\treturn Object.assign({}, this.tiledData.layers[layer].properties);\n\t\t}\n\t\treturn {};\n\t}\n\tlet layerProperties = {};\n\tthis.tiledData.layers.forEach((layerData, i) => {\n\t\tif(layerData && layerData.properties) {\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData, 'collisions')) {\n                layerProperties[i] = Object.assign({}, layerData.properties);\n            }\n\t\t}\n\t});\n\treturn layerProperties;\n}\n\nGame_Map.prototype.getTileProperties = function(x, y, layer = -1, ignoreHidden = true) {\n    let index = x + this.width() * y;\n    \n\tif(layer > -1) {\n\t\tif(this.tiledData.layers[layer] && (this.tiledData.layers[layer].data || this.tiledData.layers[layer].chunks)) {\n\t\t\tlet tileId = TiledManager.extractTileId(this.tiledData.layers[layer], index);\n\t\t\tlet tileset = this._getTileset(tileId);\n\t\t\tif(tileset && tileset.tileproperties) {\n\t\t\t\treturn Object.assign({}, tileset.tileproperties[tileId - tileset.firstgid]);\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\tlet tileProperties = {};\n\tthis.tiledData.layers.forEach((layerData, i) => {\n\t\tif(layerData && (layerData.data || layerData.chunks) && layerData.properties) {\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData)) {\n                let props = this.getTileProperties(x, y, i);\n                if(Object.keys(props).length > 0) {\n                    tileProperties[i] = props;\n                }\n            }\n\t\t}\n\t});\n\treturn tileProperties;\n}\n\n/* Custom vehicles */\nlet _createVehicles = Game_Map.prototype.createVehicles\nGame_Map.prototype.createVehicles = function() {\n    if (!this.isTiledMap()) {\n        _createVehicles.call(this);\n    }\n    this._vehicles = [];\n\n};\n\nlet _refreshVehicles = Game_Map.prototype.refereshVehicles\nGame_Map.prototype.refereshVehicles = function() {\n    if (!this.isTiledMap()) {\n        return _refreshVehicles.call(this);\n    }\n    return TiledManager.refreshVehicles(this._vehicles);\n};\n\nlet _vehicles = Game_Map.prototype.vehicles\nGame_Map.prototype.vehicles = function(getNames = false) {\n    if (!this.isTiledMap()) {\n        return _vehicles.call(this);\n    }\n    if(getNames) {\n        return this._vehicles;\n    }\n    return TiledManager.getAllVehicles(this._vehicles);\n};\n\nlet _vehicle = Game_Map.prototype.vehicle\nGame_Map.prototype.vehicle = function(type) {\n    if (!this.isTiledMap()) {\n        return _vehicles.call(this, type);\n    }\n    return TiledManager.getVehicle(type);\n}\n\nlet _boat = Game_Map.prototype.boat\nGame_Map.prototype.boat = function() {\n    if (!this.isTiledMap()) {\n        return _boat.call(this);\n    }\n    return TiledManager.getVehicle('boat');\n};\n\nlet _ship = Game_Map.prototype.ship\nGame_Map.prototype.ship = function() {\n    if (!this.isTiledMap()) {\n        return _ship.call(this);\n    }\n    return TiledManager.getVehicle('ship');\n};\n\nlet _airship = Game_Map.prototype.airship\nGame_Map.prototype.airship = function() {\n    if (!this.isTiledMap()) {\n        return _airship.call(this);\n    }\n    return TiledManager.getVehicle('airship');\n};\n\nlet _updateVehicles = Game_Map.prototype.updateVehicles\nGame_Map.prototype.updateVehicles = function() {\n    if (!this.isTiledMap()) {\n        _updateVehicles.call(this);\n    }\n    TiledManager.updateVehicles(this._vehicles);\n};\n\nGame_Map.prototype.waypoint = function(waypoint) {\n    if(this._waypoints[waypoint]) {\n        return this._waypoints[waypoint];\n    }\n    return null;\n}\n\nlet _update = Game_Map.prototype.update\nGame_Map.prototype.update = function(sceneActive) {\n    this.setLayerProperties();\n    _update.call(this, sceneActive);\n}\n\nGame_Map.prototype.getLayerProperties = function(layerId) {\n    return Object.assign({}, this._layerProperties[layerId]);\n}\n\nGame_Map.prototype.setLayerProperties = function() {\n    this._layerProperties.forEach((props, i) => {\n        let layer = this.tiledData.layers[i];\n        if(props.transition) {\n            props.isShown = !TiledManager.checkLayerHidden(layer);\n            props.transitionPhase = Math.max(0, Math.min(props.transition, props.transitionPhase + (props.isShown ? 1 : -1)));\n        }\n        if(props.autoSpeedX) {\n            props.autoX+= props.autoSpeedX\n            if(props.autoDuration || props.imageWidth) {\n                while(props.autoX < 0) {\n                    props.autoX+= props.autoDuration || props.imageWidth;\n                }\n                while(props.autoX > props.imageWidth) {\n                    props.autoX-= props.autoDuration || props.imageWidth;\n                }\n            }\n        }\n        if(props.autoSpeedY) {\n            props.autoY+= props.autoSpeedY\n            if(props.imageHeight) {\n                while(props.autoY < 0) {\n                    props.autoY+= props.autoDuration || props.imageHeight;\n                }\n                while(props.autoY > props.imageHeight) {\n                    props.autoY-= props.autoDuration || props.imageHeight;\n                }\n            }\n        }\n    });\n}\n\nlet _battleback1Name = Game_Map.prototype.battleback1Name\nGame_Map.prototype.battleback1Name = function() {\n    if(!this.isTiledMap()) {\n        return _battleback1Name.call(this);\n    }\n    let tileProps = Game_Map.prototype.getTileProperties($gamePlayer.x, $gamePlayer.y);\n    let battleback = false;\n    Object.keys(tileProps).forEach((layerId) => {\n        let props = tileProps[layerId];\n        if(props.hasOwnProperty('battleback1Name')) {\n            battleback = props.battleback1Name;\n        }\n    })\n    if(battleback || battleback === '') {\n        return battleback;\n    }\n    return _battleback1Name.call(this);\n};\n\nlet _battleback2Name = Game_Map.prototype.battleback2Name\nGame_Map.prototype.battleback2Name = function() {\n    if(!this.isTiledMap()) {\n        return _battleback2Name.call(this);\n    }\n    let tileProps = Game_Map.prototype.getTileProperties($gamePlayer.x, $gamePlayer.y);\n    let battleback = false;\n    Object.keys(tileProps).forEach((layerId) => {\n        let props = tileProps[layerId];\n        if(props.hasOwnProperty('battleback2Name')) {\n            battleback = props.battleback2Name;\n        }\n    })\n    if(battleback || battleback === '') {\n        return battleback;\n    }\n    return _battleback2Name.call(this);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Map.js","\nGame_Screen.prototype.startFlashForHeal = function() {\n    this.startFlash([128, 192, 255, 128], 8);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Screen.js","let pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nGame_CharacterBase.prototype.screenZ = function () {\n    if (this._priorityType == 0) {\n        return parseInt(pluginParams[\"Z - Below Player\"]);\n    }\n    if (this._priorityType == 2) {\n        return parseInt(pluginParams[\"Z - Above Player\"]);\n    }\n    return parseInt(pluginParams[\"Z - Player\"]);\n};\n\nlet _distancePerFrame = Game_CharacterBase.prototype.distancePerFrame;\nGame_CharacterBase.prototype.distancePerFrame = function () {\n    let distance = _distancePerFrame.call(this);\n    return distance * (48 / Math.min($gameMap.tileWidth(), $gameMap.tileHeight()));\n};\n\nlet _refreshBushDepth = Game_CharacterBase.prototype.refreshBushDepth;\nGame_CharacterBase.prototype.refreshBushDepth = function() {\n    if(!this.hasOwnProperty('_bushDepth')) {\n        this._bushDepth = 0;\n    }\n    if(!$gameMap.isTiledMap() || $gameMap.isTiledInitialized()) {\n        _refreshBushDepth.call(this);\n    } else {\n        $gameMap.setRefreshDepth(this);\n    }\n};\n\nlet _updateMove = Game_CharacterBase.prototype.updateMove;\nGame_CharacterBase.prototype.updateMove = function() {\n    var hori = (this._realX > this._x ? 4 : (this._realX < this._x ? 6 : 0))\n    var vert = (this._realY > this._y ? 8 : (this._realY < this._y ? 2 : 0))\n    var d = hori + vert\n    _updateMove.call(this);\n    if(!this.isMoving() || pluginParams[\"Position Height - Always Check On Move Update\"].toLowerCase() === \"true\") {\n        let newLocationHeight = $gameMap.checkPositionHeight(this._x, this._y);\n        if(newLocationHeight > -1) {\n            this._locationHeight = newLocationHeight;\n        }\n    }\n    if(!this.isMoving()) {\n        TiledManager.triggerListener(this, 'stopmovement', {\n            direction: d\n        })\n        if($gameMap.isSlipperyFloor(this._x, this._y)) {\n            TiledManager.triggerListener(this, 'slipperyfloor', {\n                direction: d\n            })\n        }\n    }\n}\n\nGame_CharacterBase.prototype.locationHeight = function() {\n\treturn this._locationHeight || 0\n}\n\nlet _isCollideWithVehicles = Game_CharacterBase.prototype.isCollidedWithVehicles\nGame_CharacterBase.prototype.isCollidedWithVehicles = function(x, y) {\n    if(!_isCollideWithVehicles.call(this, x, y)) {\n        let vehicles = $gameMap.vehicles();\n        for(let i = 0; i < vehicles.length; i++) {\n            if(!(vehicles[i].vehicleData && (!vehicles[i].vehicleData.hasOwnProperty('hasCollision') || vehicles[i].vehicleData.hasCollision === 'true' || vehicles[i].vehicleData.hasCollision === true)) || vehicles[i].posNt(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return true;\n};\n\nGame_CharacterBase.prototype.updateScroll = function(lastScrolledX, lastScrolledY) {\n    var x1 = lastScrolledX;\n    var y1 = lastScrolledY;\n    var x2 = this.scrolledX();\n    var y2 = this.scrolledY();\n    if (y2 > y1 && y2 > this.centerY()) {\n        $gameMap.scrollDown(y2 - y1);\n    }\n    if (x2 < x1 && x2 < this.centerX()) {\n        $gameMap.scrollLeft(x1 - x2);\n    }\n    if (x2 > x1 && x2 > this.centerX()) {\n        $gameMap.scrollRight(x2 - x1);\n    }\n    if (y2 < y1 && y2 < this.centerY()) {\n        $gameMap.scrollUp(y1 - y2);\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_CharacterBase.js","// Constants\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nlet _checkFloorEffect = Game_Actor.prototype.checkFloorEffect;\nGame_Actor.prototype.checkFloorEffect = function() {\n    _checkFloorEffect.call(this);\n    if ($gamePlayer.isOnHealFloor()) {\n        this.executeFloorHeal();\n    }\n}\n\nGame_Actor.prototype.executeFloorHeal = function() {\n    var heal = Math.floor(this.basicFloorHeal() * this.fdr);\n    heal = Math.min(heal, this.maxFloorHeal());\n    this.gainHp(heal);\n    if (heal > 0) {\n        this.performMapHeal();\n    }\n};\n\nGame_Actor.prototype._getFloorHPCalculation = function(type = 'damage') {\n    let typeName = type.slice(0, 1).toUpperCase() + type.slice(1).toLowerCase();\n    let floorHP = [];\n    for(var layerId = 0; layerId < $gameMap.tiledData.layers; layerId++) {\n        let layerData = $gameMap.tiledData.layers[layerId];\n        if(!layerData.properties) {\n            return;\n        }\n        let level = parseInt(layerData.properties.level) || 0;\n        if(level !== $gameMap.currentMapLevel) {\n            return;\n        }\n        if(TiledManager.checkLayerHidden(layerData)) {\n            return;\n        }\n        let tile = Game_Map.prototype.getTileProperties(x, y, layerId);\n        if(!!tile.properties && !!tile.properties['floor' + typeName]) {\n            floorHP.push(layerData.properties['floor' + typeName]);\n        }\n    }\n    let actualHP = 0;\n    switch((pluginParams[\"Floor HP Calculation\"] || '').toLowerCase()) {\n        case 'sum':\n            floorHP.forEach(hp => {\n                actualHP+= hp;\n            })\n            break;\n        case 'average':\n            floorHP.forEach(hp => {\n                actualHP+= hp;\n            })\n            actualHP = Math.round(actualHP / floorHP.length);\n            break;\n        case 'top':\n        default:\n            actualHP = floorHP.pop();\n            break;\n    }\n    return actualHP;\n}\n\nGame_Actor.prototype.basicFloorDamage = function() {\n    let actualDamage = this._getFloorHPCalculation('damage');\n    return actualDamage || parseInt(pluginParams[\"Basic Floor Damage\"]) || 10;\n};\n\nGame_Actor.prototype.basicFloorHeal = function() {\n    let actualHeal = this._getFloorHPCalculation('heal');\n    return actualHeal || parseInt(pluginParams[\"Basic Floor Heal\"]) || 10;\n};\n\nGame_Actor.prototype.maxFloorHeal = function() {\n    return Math.max(this.mhp - this.hp, 0);\n};\n\nGame_Actor.prototype.performMapHeal = function() {\n    if (!$gameParty.inBattle()) {\n        $gameScreen.startFlashForHeal();\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Actor.js","let _initMembers = Game_Player.prototype.initMembers;\nGame_Player.prototype.initMembers = function() {\n    _initMembers.call(this);\n    this._newWaypoint = '';\n}\n\nlet _checkEventTriggerHere = Game_Player.prototype.checkEventTriggerHere;\nGame_Player.prototype.checkEventTriggerHere = function (triggers) {\n    _checkEventTriggerHere.call(this, triggers);\n    this._checkMapLevelChangingHere();\n};\n\nGame_Player.prototype._checkMapLevelChangingHere = function () {\n    let oldLevel = $gameMap.currentMapLevel;\n    $gameMap.checkMapLevelChanging(this.x, this.y);\n    TiledManager.triggerListener(this, 'levelchanged', {\n        oldLevel,\n        newLevel: $gameMap.currentMapLevel\n    })\n};\n\nGame_Player.prototype.isOnHealFloor = function() {\n    return $gameMap.isHealFloor(this.x, this.y) && !this.isInAirship();\n};\n\nlet _getOnVehicle = Game_Player.prototype.getOnVehicle\nGame_Player.prototype.getOnVehicle = function() {\n    if(!$gameMap.isTiledMap()) {\n        return _getOnVehicle.call(this);\n    }\n    var direction = this.direction();\n    var x1 = this.x;\n    var y1 = this.y;\n    var x2 = $gameMap.roundXWithDirection(x1, direction);\n    var y2 = $gameMap.roundYWithDirection(y1, direction);\n    if ($gameMap.airship().pos(x1, y1)) {\n        this._vehicleType = 'airship';\n    } else if ($gameMap.ship().pos(x2, y2)) {\n        this._vehicleType = 'ship';\n    } else if ($gameMap.boat().pos(x2, y2)) {\n        this._vehicleType = 'boat';\n    } else {\n        let vehicles = $gameMap.vehicles(true);\n        vehicles.forEach(vehicleName => {\n            let vehicle = $gameMap.vehicle(vehicleName);\n            if(vehicle.vehicleData) {\n                if(!vehicle.vehicleData.hasOwnProperty('hasCollision') || vehicle.vehicleData.hasCollision === 'true' || vehicle.vehicleData.hasCollision === true) {\n                    if(vehicle.pos(x2, y2)) {\n                        this._vehicleType = vehicleName;\n                    }\n                } else {\n                    if(vehicle.pos(x1, y1)) {\n                        this._vehicleType = vehicleName;\n                    }\n                }\n            } else if(vehicle.pos(x2, y2)) {\n                this._vehicleType = vehicleName;\n            }\n        })\n    }\n    if (this.isInVehicle()) {\n        this._vehicleGettingOn = true;\n        if (!this.isInAirship()) {\n            this.forceMoveForward();\n        }\n        this.gatherFollowers();\n    }\n    return this._vehicleGettingOn;\n};\n\nlet _gamePlayerTriggerTouchActionD2 = Game_Player.prototype.triggerTouchActionD2\nGame_Player.prototype.triggerTouchActionD2 = function(x2, y2) {\n    if(!$gameMap.isTiledMap()) {\n        return _gamePlayerTriggerTouchActionD2.call(this, x2, y2);\n    }\n    if ($gameMap.boat().pos(x2, y2) || $gameMap.ship().pos(x2, y2)) {\n        if (TouchInput.isTriggered() && this.getOnVehicle()) {\n            return true;\n        }\n    }\n    if (this.isInBoat() || this.isInShip()) {\n        if (TouchInput.isTriggered() && this.getOffVehicle()) {\n            return true;\n        }\n    }\n    let vehicles = $gameMap.vehicles(true);\n    for(var idx = 0; idx < vehicles.length; idx++) {\n        let vehicle = $gameMap.vehicle(vehicles[idx]);\n        if(!vehicle.vehicleData ||\n            !vehicle.vehicleData.hasOwnProperty('hasCollision') ||\n            vehicle.vehicleData.hasCollision === 'true' ||\n            vehicle.vehicleData.hasCollision === true\n        ) {\n            if(vehicle.pos(x2, y2) && TouchInput.isTriggered() && this.getOnVehicle()) {\n                return true;\n            }\n            if(this._vehicleType === vehicles[idx] && TouchInput.isTriggered() && this.getOffVehicle()) {\n                return true;\n            }\n        }\n    }\n    this.checkEventTriggerThere([0,1,2]);\n    return $gameMap.setupStartingEvent();\n};\n\n\nlet _isInVehicle = Game_Player.prototype.isInVehicle\nGame_Player.prototype.isInVehicle = function() {\n    if(!$gameMap.isTiledMap()) {\n        return _isInVehicle.call(this);\n    }\n    return $gameMap.vehicles(true).indexOf(this._vehicleType) > -1;\n};\n\nlet _reserveTransfer = Game_Player.prototype.reserveTransfer\nGame_Player.prototype.reserveTransfer = function(mapId, x, y, d, fadeType, waypoint = '') {\n    _reserveTransfer.call(this, mapId, x, y, d, fadeType);\n    this._newWaypoint = waypoint;\n}\n\nGame_Player.prototype.performTransfer = function() {\n    if (this.isTransferring()) {\n        this.setDirection(this._newDirection);\n        if (this._newMapId !== $gameMap.mapId() || this._needsMapReload) {\n            $gameMap.setup(this._newMapId);\n            this._needsMapReload = false;\n        }\n        let newX = this._newX;\n        let newY = this._newY;\n        if($gameMap.isTiledMap()) {\n            if(this._newWaypoint) {\n                let waypoint = $gameMap.waypoint(this._newWaypoint);\n                if(waypoint) {\n                    newX = waypoint.x;\n                    newY = waypoint.y;\n                }\n            }\n            let offsets = $gameMap.offsets();\n            if(offsets && offsets.hasOwnProperty('x') && offsets.hasOwnProperty('y')) {\n                newX-= offsets.x;\n                newY-= offsets.y;\n            }\n        }\n        this.locate(newX, newY);\n        this.refresh();\n        this.clearTransferInfo();\n    }\n};\n\nlet _clearTransferInfo = Game_Player.prototype.clearTransferInfo;\nGame_Player.prototype.clearTransferInfo = function() {\n    _clearTransferInfo.call(this);\n    this._newWaypoint = '';\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Player.js","let _initialize = Game_Vehicle.prototype.initialize\nGame_Vehicle.prototype.initialize = function(type, vehicleData = false) {\n    if(vehicleData) {\n        this.vehicleData = vehicleData;\n    }\n    _initialize.call(this, type);\n};\n\nlet _initMoveSpeed = Game_Vehicle.prototype.initMoveSpeed\nGame_Vehicle.prototype.initMoveSpeed = function() {\n    _initMoveSpeed.call(this);\n    if(!!this.vehicleData && this.vehicleData.moveSpeed) {\n        this.setMoveSpeed(parseInt(this.vehicleData.moveSpeed));\n    }\n};\n\nlet _vehicle = Game_Vehicle.prototype.vehicle\nGame_Vehicle.prototype.vehicle = function() {\n    var vehicleData = _vehicle.call(this);\n    if(!vehicleData && !!this.vehicleData) {\n        return this.vehicleData;\n    }\n    return vehicleData;\n};\n\nlet _isMapPassable = Game_Vehicle.prototype.isMapPassable\nGame_Vehicle.prototype.isMapPassable = function(x, y, d, render = false) {\n    if(!$gameMap.isTiledMap()) {\n        return _isMapPassable.call(this, x, y, d);\n    }\n    var x2 = $gameMap.roundXWithDirection(x, d);\n    var y2 = $gameMap.roundYWithDirection(y, d);\n    if (this.isBoat()) {\n        return $gameMap.isBoatPassable(x2, y2, render);\n    } else if (this.isShip()) {\n        return $gameMap.isShipPassable(x2, y2, render);\n    } else if (this.isAirship()) {\n        return true;\n    } else {\n        var vehicleData = this.vehicle();\n        if(!!vehicleData) {\n            if(!!vehicleData.tileFlag) {\n                return $gameMap.checkHasTileFlag(x2, y2, vehicleData.tileFlag, render);\n            }\n            if(vehicleData.tileFlag === '') {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\nGame_Vehicle.prototype.loadSystemSettings = function() {\n    var vehicle = (window.$dataSystem ? this.vehicle() : null);\n    if(vehicle) {\n        this._mapId = vehicle.startMapId;\n        this.setPosition(vehicle.startX, vehicle.startY);\n        this.setImage(vehicle.characterName, vehicle.characterIndex);\n    }\n};\n\nlet _resetDirection = Game_Vehicle.prototype.resetDirection\nGame_Vehicle.prototype.resetDirection = function() {\n    if(!!this.vehicleData && !!this.vehicleData.direction) {\n        this.setDirection(parseInt(this.vehicleData.direction));\n    } else {\n        _resetDirection.call(this)\n    }\n};\n\nGame_Vehicle.prototype.getOff = function() {\n    this._driving = false;\n    this.setWalkAnime(false);\n    this.setStepAnime(false);\n    if(!this.vehicleData || !this.vehicleData.hasOwnProperty('resetDirection') || this.vehicleData.resetDirection === 'true') {\n        this.resetDirection();\n    }\n    $gameSystem.replayWalkingBgm();\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Vehicle.js","let _pluginCommand = Game_Interpreter.prototype.pluginCommand\nGame_Interpreter.prototype.pluginCommand = function(command, args) {\n    _pluginCommand.call(this, command, args);\n    TiledManager.pluginCommand.call(this, command, args);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Interpreter.js","let _update = Sprite_Character.prototype.update\nSprite_Character.prototype.update = function() {\n\t_update.call(this);\n\tthis.locationHeight = this._character.locationHeight();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Sprite_Character.js","import { TiledTilemap } from \"./TiledTilemap\";\n\nlet _initialize = Spriteset_Battle.prototype.initialize\nSpriteset_Battle.prototype.initialize = function() {\n    this._parallaxContainers = {};\n    _initialize.call(this);\n}\n\nlet _createTilemap = Spriteset_Map.prototype.createTilemap;\nSpriteset_Map.prototype.createTilemap = function () {\n    if (!$gameMap.isTiledMap()) {\n        _createTilemap.call(this);\n        return;\n    }\n    this._tilemap = new TiledTilemap($gameMap.tiledData);\n    this._tilemap.horizontalWrap = $gameMap.isLoopHorizontal();\n    this._tilemap.verticalWrap = $gameMap.isLoopVertical();\n    this.loadTileset();\n    this._baseSprite.addChild(this._tilemap);\n};\n\nlet _loadTileset = Spriteset_Map.prototype.loadTileset;\nSpriteset_Map.prototype.loadTileset = function () {\n    if (!$gameMap.isTiledMap()) {\n        _loadTileset.call(this);\n        return;\n    }\n\n    let i = 0;\n    for (let tileset of $gameMap.tiledData.tilesets) {\n        if(tileset.properties && tileset.properties.ignoreLoading) {\n            continue;\n        }\n        if(tileset.image) {\n            let bitmap = ImageManager.loadParserTileset(tileset.image, 0);\n            this._tilemap.bitmaps.push(bitmap);\n            this._tilemap.indexedBitmaps[i] = bitmap;\n        } else {\n            this._tilemap.indexedBitmaps[i] = [];\n            for(let tile = 0; tile < tileset.tilecount; tile++) {\n                if(tileset.tiles[tile]) {\n                    let bitmap = ImageManager.loadParserTileset(tileset.tiles[tile].image, 0);\n                    this._tilemap.bitmaps.push(bitmap);\n                    this._tilemap.indexedBitmaps[i][tile] = bitmap;\n                }\n            }\n        }\n        i++;\n    }\n    this._tilemap.refreshTileset();\n    this._tileset = $gameMap.tiledData.tilesets;\n};\n\nlet _update = Spriteset_Map.prototype.update;\nSpriteset_Map.prototype.update = function () {\n    _update.call(this);\n    //Disabed updateHideOnLevel, since it got moved to the general layer hide functions\n    //this._updateHideOnLevel();\n    this._updateHideOnSpecial();\n    this._tilemap.updateImageLayer();\n};\n\nSpriteset_Map.prototype.updateTileset = function () {\n    if (this._tileset !== $gameMap.tiledData.tilesets) {\n        this.loadTileset();\n    }\n};\n\nSpriteset_Map.prototype._updateHideOnLevel = function () {\n    this._tilemap.hideOnLevel($gameMap.currentMapLevel);\n};\n\nSpriteset_Map.prototype._updateHideOnSpecial = function () {\n    if($gamePlayer && $gameMap) {\n        this._tilemap.hideOnSpecial();\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Spriteset_Map.js"],"sourceRoot":""}