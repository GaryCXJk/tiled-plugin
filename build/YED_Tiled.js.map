{"version":3,"sources":["webpack:///webpack/bootstrap e796333270cd419e1b33","webpack:///./src/TiledTilemap.js","webpack:///./src/index.js","webpack:///./src/TilesetManager.js","webpack:///./src/DataManager.js","webpack:///./src/ImageManager.js","webpack:///./src/TiledManager.js","webpack:///./src/Sprite_TiledPriorityTile.js","webpack:///./src/AlphaFilter.js","webpack:///./src/TiledTileLayer.js","webpack:///./src/TiledTileShader.js","webpack:///./src/Game_Map.js","webpack:///./src/Game_Screen.js","webpack:///./src/Game_CharacterBase.js","webpack:///./src/Game_Actor.js","webpack:///./src/Game_Player.js","webpack:///./src/Game_Vehicle.js","webpack:///./src/Game_Interpreter.js","webpack:///./src/Sprite_Character.js","webpack:///./src/Spriteset_Map.js"],"names":["TiledTilemap","tiledData","_tiledData","_layers","_parallaxlayers","_priorityTiles","_priorityTilesCount","setupTiled","_setupSize","_setupAnim","width","_width","height","_height","margin","_margin","tileCols","Math","ceil","_tileWidth","tileRows","_tileHeight","tilewidth","tileheight","_layerWidth","_layerHeight","_mapWidth","_mapHeight","_animFrame","_animDuration","id","_needsRepaint","parameters","PluginManager","useSquareShader","Number","hasOwnProperty","layers","layerData","zIndex","type","_createImageLayer","properties","parseInt","collision","toLevel","regionId","tileFlags","layer","layerId","spriteId","Sprite","_counter","alpha","opacity","transition","isShown","TiledManager","checkLayerHidden","transitionStep","minAlpha","min","minimumOpacity","push","addChild","_createPriorityTiles","pluginParams","size","Array","keys","x","sprite","Sprite_TiledPriorityTile","z","hide","renderer","bitmaps","map","_baseTexture","PIXI","Texture","setBitmaps","_updateAnim","needRefresh","key","refresh","startX","startY","ox","oy","roundPixels","floor","origin","y","offsetX","offsetx","offsetY","offsety","position","origX","origY","clear","_paintTiles","_paintObjectLayers","length","visible","_paintTilesLayer","objects","obj","gid","tileId","textureId","_getTextureId","dx","dy","positionHeight","_paintPriorityTile","_paintTile","mx","my","horizontalWrap","mod","verticalWrap","tilePosition","extractTileId","rectLayer","children","tileset","tilesets","w","h","columns","rId","_getAnimTileId","firstgid","ux","uy","_isPriorityTile","tileproperties","addRect","anchor","bitmap","setFrame","priority","_getPriority","_getZIndex","show","tilecount","tilesData","tiles","animation","frame","duration","tileid","playerZIndex","level","layerIds","hideOnLevel","removeChild","forEach","indexOf","hideLayer","hasHideProperties","a","b","repeatX","repeatY","deltaX","deltaY","autoX","autoY","hue","viewportX","viewportY","viewportWidth","viewportHeight","viewportDeltaX","viewportDeltaY","ignoreLoading","Sprite_Base","TilingSprite","move","Graphics","_transition","_baseAlpha","_minAlpha","_isShown","_transitionPhase","ImageManager","loadParserParallax","image","baseX","baseY","stepAutoX","stepAutoY","layerMask","baseWidth","baseHeight","mask","hasViewport","visibility","max","offsets","$gameMap","tileWidth","tileHeight","display","displayX","displayY","beginFill","drawRect","val","ShaderTilemap","addListener","Game_Player","options","d","direction","$gameParty","members","actor","checkFloorEffect","moveStraight","addHideFunction","currentMapLevel","showOnLevel","$gamePlayer","hideOnRegion","hideOnRegions","split","String","regionIds","regions","filter","region","$gameSwitches","value","hideOnSwitch","showOnSwitch","addFlag","createVehicle","addPluginCommand","args","mapId","waypoint","fadeType","isNaN","toLowerCase","reserveTransfer","setWaitMode","getParameterFlags","getParameterVehicles","TilesetManager","Error","window","_getFilename","path","paths","_getRealPath","getTileset","realPath","loadTileset","callback","xhr","XMLHttpRequest","open","overrideMimeType","onreadystatechange","readyState","status","responseText","JSON","parse","send","DataManager","_tempTiledData","_tiledLoaded","_loadMapData","loadMapData","call","loadTiledMapData","unloadTiledMapData","idx","expandLayerGroups","tiledLoaded","tilesRequired","source","realTileset","Object","assign","returnTileset","_isMapLoaded","isMapLoaded","defaultLoaded","loadParserTileset","loadEmptyBitmap","shift","filename","slice","join","loadNormalBitmap","_listeners","_hideFunctions","_hideIgnoreFunctions","collisions","levelChanges","_tileFlags","_tileFlagIndex","_vehicles","_vehiclesByIndex","_pluginCommands","_fullVehicleData","bgm","name","pan","pitch","volume","characterIndex","characterName","startMapId","objectName","event","recursive","triggerListener","object","constructor","top","proto","__proto__","ignore","data","parentLayer","$gameData","prototype","splice","apply","concat","i","startx","starty","chunkIdx","chunks","chunk","flagIds","flagId","getFlag","getFlagNames","getFlagLocation","flag","bit","group","vehicleName","vehicleData","vehicle","Game_Vehicle","refreshVehicles","vehicles","getAllVehicles","returnVehicles","getVehicle","updateVehicles","update","command","func","pluginCommand","initialize","arguments","create","updateVisibility","fragmentSrc","filters","AlphaFilter","glShaderKey","uniforms","uAlpha","Filter","TiledTileLayer","useSquare","texPerChild","gl","tiledTileShader","plugins","tilemap","maxTextures","shader","setObjectRenderer","bindShader","_globalMat","Matrix","_activeRenderTarget","projectionMatrix","copy","append","worldTransform","toArray","shadowColor","tempScale","_tempScale","ps","pointScale","projectionScale","abs","resolution","af","animationFrame","tileAnim","renderWebGL","CompositeRectTileLayer","GLBuffer","glCore","VertexArrayObject","squareShaderFrag","squareShaderVert","rectShaderFrag","rectShaderVert","TiledTileShader","vert","frag","shaderGenerator","generateFragmentSrc","vertSize","vertPerQuad","anim","stride","fillSamplers","vb","createVao","addIndex","indexBuffer","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","aFrame","aAnim","aTextureId","TilemapShader","defineProperty","Game_Map","get","configurable","varID","_currentMapLevel","$gameVariables","set","setValue","_setup","setup","_tiledInitialized","_levels","_collisionMap","_arrowCollisionMap","_regions","_mapLevelChange","_positionHeightChange","_collisionMapLayers","_arrowCollisionMapLayers","_regionsLayers","_mapLevelChangeLayers","_positionHeightChangeLayers","_tileFlagsLayers","_waypoints","_autoSize","_autoSizeBorder","_offsets","_camera","focus","isTiledMap","$dataMap","_setupTiled","_refreshList","character","refreshBushDepth","isTiledInitialized","setRefreshDepth","_initializeMapProperties","_initializeInfiniteMap","_initializeMapLevel","_setupCollision","_setupRegion","_setupMapLevelChange","_setupTileFlags","_setupTiledEvents","autoSize","border","infinite","_setMapSize","minX","minY","maxX","maxY","x1","y1","x2","y2","_cropInfiniteMap","autoBorder","autoSizeBorder","offset","limit","forward","vertical","o","s","realO","lineEmpty","empty","o2","coords","_initializeMapLevelData","dataTypes","defaultData","dataType","defaultValue","typeData","_setupCollisionFull","_setupCollisionArrow","halfWidth","halfHeight","isHalfTile","realX","ids","_getTileset","tileData","collisionUpLeft","collisionUpRight","collisionDownLeft","collisionDownRight","arrowImpassable","arrowCollisionMap","realBit","arrowImpassableDown","arrowImpassableLeft","arrowImpassableRight","arrowImpassableUp","regionMap","regionOffset","levelChangeMap","_setupPositionHeightChange","positionHeightChangeMap","floorHeight","tileFlagMap","_getTileFlags","_combineFlags","flags","flagNames","property","prop","toUpperCase","target","eventId","_events","loadSystemSettings","setLocation","locate","_tiledProperties","_regionId","allIds","index","regionLayer","regionValue","main","regionValues","hideData","getMapLevels","levels","sort","_checkPassage","checkPassage","render","arrows","arrowLayer","arrowValue","renderPassage","getPassageLayers","_isPassable","isPassable","collisionMap","collisionLayer","collisionValue","renderIsPassable","getIsPassableLayers","checkMapLevelChanging","mapLevelChange","mapLevelChangeLayer","mapLevelChangeValue","oldValue","oldLevel","newLevel","checkPositionHeight","positionHeightChange","positionHeightChangeLayer","positionHeightChangeValue","getTileFlags","tileFlagsLayer","tileFlagsValue","renderTileFlags","checkHasTileFlag","renderHasTileFlag","_isBoatPassable","isBoatPassable","renderIsBoatPassable","_isShipPassable","isShipPassable","renderIsShipPassable","_isAirshipLandOk","isAirshipLandOk","renderIsAirshipLandOk","_isLadder","isLadder","isValid","renderIsLadder","_isBush","isBush","renderIsBush","_isCounter","isCounter","renderIsCounter","_isDamageFloor","isDamageFloor","renderIsDamageFloor","isSlipperyFloor","renderIsSlipperyFloor","_isHealFloor","isHealFloor","getLayerProperties","ignoreHidden","layerProperties","getTileProperties","tileProperties","props","_createVehicles","createVehicles","_refreshVehicles","refereshVehicles","getNames","_vehicle","_boat","boat","_ship","ship","_airship","airship","_updateVehicles","Game_Screen","startFlashForHeal","startFlash","Game_CharacterBase","screenZ","_priorityType","_distancePerFrame","distancePerFrame","distance","_refreshBushDepth","_bushDepth","_updateMove","updateMove","hori","_realX","_x","_realY","_y","isMoving","newLocationHeight","_locationHeight","locationHeight","_isCollideWithVehicles","isCollidedWithVehicles","hasCollision","posNt","updateScroll","lastScrolledX","lastScrolledY","scrolledX","scrolledY","centerY","scrollDown","centerX","scrollLeft","scrollRight","scrollUp","_checkFloorEffect","Game_Actor","isOnHealFloor","executeFloorHeal","heal","basicFloorHeal","fdr","maxFloorHeal","gainHp","performMapHeal","_getFloorHPCalculation","typeName","floorHP","tile","actualHP","hp","round","pop","basicFloorDamage","actualDamage","actualHeal","mhp","inBattle","$gameScreen","_initMembers","initMembers","_newWaypoint","_checkEventTriggerHere","checkEventTriggerHere","triggers","_checkMapLevelChangingHere","isInAirship","_getOnVehicle","getOnVehicle","roundXWithDirection","roundYWithDirection","pos","_vehicleType","isInVehicle","_vehicleGettingOn","forceMoveForward","gatherFollowers","_isInVehicle","_reserveTransfer","performTransfer","isTransferring","setDirection","_newDirection","_newMapId","_needsMapReload","newX","_newX","newY","_newY","clearTransferInfo","_clearTransferInfo","_initialize","_initMoveSpeed","initMoveSpeed","moveSpeed","setMoveSpeed","_isMapPassable","isMapPassable","isBoat","isShip","isAirship","tileFlag","$dataSystem","_mapId","setPosition","setImage","_resetDirection","resetDirection","getOff","_driving","setWalkAnime","setStepAnime","$gameSystem","replayWalkingBgm","_pluginCommand","Game_Interpreter","_update","Sprite_Character","_character","Spriteset_Battle","_parallaxContainers","_createTilemap","Spriteset_Map","createTilemap","_tilemap","isLoopHorizontal","isLoopVertical","_baseSprite","_loadTileset","refreshTileset","_tileset","_updateHideOnSpecial","updateParallax","updateTileset","_updateHideOnLevel","hideOnSpecial"],"mappings":"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","file":"YED_Tiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e796333270cd419e1b33","import TiledTileLayer from \"./TiledTileLayer\";\r\n\r\nexport class TiledTilemap extends ShaderTilemap {\r\n    initialize(tiledData) {\r\n        this._tiledData = {};\r\n        this._layers = [];\r\n        this._parallaxlayers = [];\r\n        this._priorityTiles = [];\r\n        this._priorityTilesCount = 0;\r\n        this.tiledData = tiledData;\r\n        super.initialize();\r\n        this.setupTiled();\r\n    }\r\n\r\n    get tiledData() {\r\n        return this._tiledData;\r\n    }\r\n\r\n    set tiledData(val) {\r\n        this._tiledData = val;\r\n        this.setupTiled();\r\n    }\r\n\r\n    setupTiled() {\r\n        this._setupSize();\r\n        this._setupAnim();\r\n    }\r\n\r\n    _setupSize() {\r\n        let width = this._width;\r\n        let height = this._height;\r\n        let margin = this._margin;\r\n        let tileCols = Math.ceil(width / this._tileWidth) + 1;\r\n        let tileRows = Math.ceil(height / this._tileHeight) + 1;\r\n        this._tileWidth = this.tiledData.tilewidth;\r\n        this._tileHeight = this.tiledData.tileheight;\r\n        this._layerWidth = tileCols * this._tileWidth;\r\n        this._layerHeight = tileRows * this._tileHeight;\r\n        this._mapWidth = this.tiledData.width;\r\n        this._mapHeight = this.tiledData.height;\r\n    }\r\n\r\n    _setupAnim() {\r\n        this._animFrame = {};\r\n        this._animDuration = {};\r\n    }\r\n\r\n    _createLayers() {\r\n        let id = 0;\r\n        this._needsRepaint = true;\r\n\r\n        let parameters = PluginManager.parameters('ShaderTilemap');\r\n        let useSquareShader = Number(parameters.hasOwnProperty('squareShader') ? parameters['squareShader'] : 1);\r\n\r\n        for (let layerData of this.tiledData.layers) {\r\n            let zIndex = 0;\r\n            if (layerData.type === \"imagelayer\") {\r\n                this._createImageLayer(layerData, id);\r\n                id++;\r\n                continue;\r\n            }\r\n            if (layerData.type != \"tilelayer\") {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.zIndex) {\r\n                zIndex = parseInt(layerData.properties.zIndex);\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.collision) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.toLevel) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.regionId) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && layerData.properties.tileFlags === 'hide') {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            let layer = new TiledTileLayer(zIndex, [], useSquareShader);\r\n            layer.layerId = id; // @dryami: hack layer index\r\n            layer.spriteId = Sprite._counter++;\r\n            layer.alpha = layerData.opacity;\r\n            if(!!layerData.properties && layerData.properties.transition) {\r\n                layer.transition = layerData.properties.transition\r\n                layer.isShown = !TiledManager.checkLayerHidden(layerData)\r\n                layer.transitionStep = layer.isShown ? layer.transition : 0\r\n                layer.minAlpha = Math.min(layer.alpha, (layerData.properties.minimumOpacity || 0))\r\n            }\r\n            this._layers.push(layer);\r\n            this.addChild(layer);\r\n            id++;\r\n        }\r\n\r\n        this._createPriorityTiles();\r\n    }\r\n\r\n    _createPriorityTiles() {\r\n        let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\r\n        let zIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n        for (let x of Array(size).keys()) {\r\n            let sprite = new Sprite_TiledPriorityTile();\r\n            sprite.z = sprite.zIndex = zIndex;\r\n            sprite.layerId = -1;\r\n            sprite.hide();\r\n            this.addChild(sprite);\r\n            this._priorityTiles.push(sprite);\r\n        }\r\n    }\r\n\r\n    _hackRenderer(renderer) {\r\n        return renderer;\r\n    }\r\n\r\n    refreshTileset() {\r\n        var bitmaps = this.bitmaps.map(function (x) { return x._baseTexture ? new PIXI.Texture(x._baseTexture) : x; });\r\n        for (let layer of this._layers) {\r\n            layer.setBitmaps(bitmaps);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        this._updateAnim();\r\n    }\r\n\r\n    _updateAnim() {\r\n        let needRefresh = false;\r\n        for (let key in this._animDuration) {\r\n            this._animDuration[key] -= 1;\r\n            if (this._animDuration[key] <= 0) {\r\n                this._animFrame[key] += 1;\r\n                needRefresh = true;\r\n            }\r\n        }\r\n\r\n        if (needRefresh) {\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    _updateLayerPositions(startX, startY) {\r\n        let ox = 0;\r\n        let oy = 0;\r\n        if (this.roundPixels) {\r\n            ox = Math.floor(this.origin.x);\r\n            oy = Math.floor(this.origin.y);\r\n        } else {\r\n            ox = this.origin.x;\r\n            oy = this.origin.y;\r\n        }\r\n\r\n        for (let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            let offsetX = layerData.offsetx || 0;\r\n            let offsetY = layerData.offsety || 0;\r\n            layer.position.x = startX * this._tileWidth - ox + offsetX;\r\n            layer.position.y = startY * this._tileHeight - oy + offsetY;\r\n        }\r\n\r\n        for (let sprite of this._priorityTiles) {\r\n            let layerData = this.tiledData.layers[sprite.layerId];\r\n            let offsetX = layerData ? layerData.offsetx || 0 : 0;\r\n            let offsetY = layerData ? layerData.offsety || 0 : 0;\r\n            sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + sprite.width / 2;\r\n            sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + sprite.height;\r\n        }\r\n    }\r\n\r\n    _paintAllTiles(startX, startY) {\r\n        this._priorityTilesCount = 0;\r\n        for (let layer of this._layers) {\r\n            layer.clear();\r\n            this._paintTiles(layer, startX, startY);\r\n        }\r\n        let id = 0;\r\n        for (let layerData of this.tiledData.layers) {\r\n            if (layerData.type != \"objectgroup\") {\r\n                id++;\r\n                continue;\r\n            }\r\n            this._paintObjectLayers(id, startX, startY);\r\n            id++;\r\n        }\r\n        while (this._priorityTilesCount < this._priorityTiles.length) {\r\n            let sprite = this._priorityTiles[this._priorityTilesCount];\r\n            sprite.hide();\r\n            sprite.layerId = -1;\r\n            this._priorityTilesCount++;\r\n        }\r\n    }\r\n\r\n    _paintTiles(layer, startX, startY) {\r\n        let layerData = this.tiledData.layers[layer.layerId];\r\n\r\n        if (!layerData.visible) {\r\n            return;\r\n        }\r\n\r\n        if (layerData.type == \"tilelayer\") {\r\n            this._paintTilesLayer(layer, startX, startY);\r\n        }\r\n    }\r\n\r\n    _paintObjectLayers(layerId, startX, startY) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        let objects = layerData.objects || [];\r\n\r\n        for (let obj of objects) {\r\n            if (!obj.gid) {\r\n                continue;\r\n            }\r\n            if (!obj.visible) {\r\n                continue;\r\n            }\r\n            let tileId = obj.gid;\r\n            let textureId = this._getTextureId(tileId);\r\n            let dx = obj.x - startX * this._tileWidth;\r\n            let dy = obj.y - startY * this._tileHeight - obj.height;\r\n            let positionHeight = 0;\r\n            if(obj.properties && obj.properties.positionHeight) {\r\n                positionHeight = obj.properties.positionHeight;\r\n            }\r\n            this._paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight);\r\n        }\r\n    }\r\n\r\n    _paintTilesLayer(layer, startX, startY) {\r\n        let tileCols = Math.ceil(this._width / this._tileWidth) + 1;\r\n        let tileRows = Math.ceil(this._height / this._tileHeight) + 1;\r\n\r\n        for (let y of Array(tileRows).keys()) {\r\n            for (let x of Array(tileCols).keys()) {\r\n                this._paintTile(layer, startX, startY, x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    _paintTile(layer, startX, startY, x, y) {\r\n        let mx = x + startX;\r\n        let my = y + startY;\r\n        if (this.horizontalWrap) {\r\n            mx = mx.mod(this._mapWidth);\r\n        }\r\n        if (this.verticalWrap) {\r\n            my = my.mod(this._mapHeight);\r\n        }\r\n        let tilePosition = mx + my * this._mapWidth;\r\n        let tileId = TiledManager.extractTileId(this.tiledData.layers[layer.layerId], tilePosition);\r\n        let rectLayer = layer.children[0];\r\n        let textureId = 0;\r\n\r\n        if (!tileId) {\r\n            return;\r\n        }\r\n\r\n        // TODO: Problem with offsets\r\n        if (mx < 0 || mx >= this._mapWidth || my < 0 || my >= this._mapHeight) {\r\n            return;\r\n        }\r\n\r\n        textureId = this._getTextureId(tileId);\r\n\r\n        let tileset = this.tiledData.tilesets[textureId];\r\n        let dx = x * this._tileWidth;\r\n        let dy = y * this._tileHeight;\r\n        let w = tileset.tilewidth;\r\n        let h = tileset.tileheight;\r\n        let tileCols = tileset.columns;\r\n        let rId = this._getAnimTileId(textureId, tileId - tileset.firstgid);\r\n        let ux = (rId % tileCols) * w;\r\n        let uy = Math.floor(rId / tileCols) * h;\r\n\r\n        if (this._isPriorityTile(layer.layerId)) {\r\n            let positionHeight = 0;\r\n            if(this.tiledData.layers[layer.layerId].properties.positionHeight) {\r\n                positionHeight+= this.tiledData.layers[layer.layerId].properties.positionHeight || 0\r\n            }\r\n            if(tileset.tileproperties &&\r\n                tileset.tileproperties[tileId - tileset.firstgid] &&\r\n                tileset.tileproperties[tileId - tileset.firstgid].positionHeight) {\r\n                positionHeight+= tileset.tileproperties[tileId - tileset.firstgid].positionHeight || 0\r\n            }\r\n            this._paintPriorityTile(layer.layerId, textureId, tileId, startX, startY, dx, dy, positionHeight);\r\n            return;\r\n        }\r\n\r\n        rectLayer.addRect(textureId, ux, uy, dx, dy, w, h);\r\n    }\r\n\r\n    _paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight = 0) {\r\n        let tileset = this.tiledData.tilesets[textureId];\r\n        let w = tileset.tilewidth;\r\n        let h = tileset.tileheight;\r\n        let tileCols = tileset.columns;\r\n        let rId = this._getAnimTileId(textureId, tileId - tileset.firstgid);\r\n        let ux = (rId % tileCols) * w;\r\n        let uy = Math.floor(rId / tileCols) * h;\r\n        let sprite = this._priorityTiles[this._priorityTilesCount];\r\n        let layerData = this.tiledData.layers[layerId];\r\n        let offsetX = layerData ? layerData.offsetx || 0 : 0;\r\n        let offsetY = layerData ? layerData.offsety || 0 : 0;\r\n        let ox = 0;\r\n        let oy = 0;\r\n        if (this.roundPixels) {\r\n            ox = Math.floor(this.origin.x);\r\n            oy = Math.floor(this.origin.y);\r\n        } else {\r\n            ox = this.origin.x;\r\n            oy = this.origin.y;\r\n        }\r\n\r\n        if (this._priorityTilesCount >= this._priorityTiles.length) {\r\n            return;\r\n        }\r\n\r\n        sprite.layerId = layerId;\r\n        sprite.anchor.x = 0.5;\r\n        sprite.anchor.y = 1.0;\r\n        sprite.origX = dx;\r\n        sprite.origY = dy;\r\n        sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + w / 2;\r\n        sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + h;\r\n        sprite.bitmap = this.bitmaps[textureId];\r\n        sprite.setFrame(ux, uy, w, h);\r\n        sprite.priority = this._getPriority(layerId);\r\n        sprite.z = sprite.zIndex = this._getZIndex(layerId);\r\n        sprite.positionHeight = positionHeight;\r\n        sprite.show();\r\n\r\n        this._priorityTilesCount += 1;\r\n    }\r\n\r\n    _getTextureId(tileId) {\r\n        let textureId = 0;\r\n        for (let tileset of this.tiledData.tilesets) {\r\n            if (tileId < tileset.firstgid\r\n                || tileId >= tileset.firstgid + tileset.tilecount) {\r\n                textureId++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        return textureId;\r\n    }\r\n\r\n    _getAnimTileId(textureId, tileId) {\r\n        let tilesData = this.tiledData.tilesets[textureId].tiles;\r\n        if (!tilesData) {\r\n            return tileId;\r\n        }\r\n        if (!tilesData[tileId]) {\r\n            return tileId;\r\n        }\r\n        if (!tilesData[tileId].animation) {\r\n            return tileId;\r\n        }\r\n        let animation = tilesData[tileId].animation;\r\n        this._animFrame[tileId] = this._animFrame[tileId] || 0;\r\n        let frame = this._animFrame[tileId];\r\n        this._animFrame[tileId] = !!animation[frame] ? frame : 0;\r\n        frame = this._animFrame[tileId];\r\n        let duration = animation[frame].duration / 1000 * 60;\r\n        this._animDuration[tileId] = this._animDuration[tileId] || duration;\r\n        if (this._animDuration[tileId] <= 0) {\r\n            this._animDuration[tileId] = duration;\r\n        }\r\n        return animation[frame].tileid;\r\n    }\r\n\r\n    _getPriority(layerId) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        if (!layerData.properties) {\r\n            return 0;\r\n        }\r\n        if (!layerData.properties.priority) {\r\n            return 0;\r\n        }\r\n        return parseInt(layerData.properties.priority)\r\n    }\r\n\r\n    _isPriorityTile(layerId) {\r\n        let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n        let playerZIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n        let zIndex = this._getZIndex(layerId);\r\n        return this._getPriority(layerId) > 0\r\n            && zIndex === playerZIndex;\r\n    }\r\n\r\n    _getZIndex(layerId) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        if (!layerData) {\r\n            return 0;\r\n        }\r\n        if (!layerData.properties || !layerData.properties.zIndex) {\r\n            return 0;\r\n        }\r\n        return parseInt(layerData.properties.zIndex);\r\n    }\r\n\r\n    hideOnLevel(level) {\r\n        let layerIds = [];\r\n        for (let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            if (layerData.properties && layerData.properties.hasOwnProperty(\"hideOnLevel\")) {\r\n                if (parseInt(layerData.properties.hideOnLevel) !== level) {\r\n                    if(layer.transition) {\r\n                        /* If this layer has a transition, we'll need to tell the layer that\r\n                           it's supposed to be showing. */\r\n                           layer.isShown = true;\r\n                    }\r\n                    this.addChild(layer);\r\n                    continue;\r\n                }\r\n                /* Since the layer is supposed to be hidden, let's first let it transition if\r\n                   it has a transition fadeout. */\r\n                if(layer.transition) {\r\n                    layer.isShown = false;\r\n                    if(layer.minAlpha > 0 || layer.transitionStep > 0) {\r\n                        this.addChild(layer)\r\n                        continue;\r\n                    }\r\n                }\r\n                /* Otherwise remove the layer and hide it */\r\n                layerIds.push(layer.layerId);\r\n                this.removeChild(layer);\r\n            }\r\n        }\r\n        this._priorityTiles.forEach(sprite => {\r\n            if(layerIds.indexOf(sprite.layerId) > -1) {\r\n                sprite.visible = true;\r\n            }\r\n        })\r\n    }\r\n    \r\n    hideOnSpecial() {\r\n        for(let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n\t\t\tif(layerData.properties) {\r\n                let hideLayer = TiledManager.checkLayerHidden(layerData);\r\n                \r\n\t\t\t\t/* If the layer has a hide property, run this code.\r\n\t\t\t\t * You don't need to run it for layers that don't have any properties that would\r\n\t\t\t\t   hide this layer. */\r\n\t\t\t\tif (TiledManager.hasHideProperties(layerData)) {\r\n\t\t\t\t\t/* If the layer isn't supposed to be hidden, add the layer to the container */\r\n\t\t\t\t\tif (!hideLayer) {\r\n                        if(layer.transition) {\r\n                            /* If this layer has a transition, we'll need to tell the layer that\r\n                               it's supposed to be showing. */\r\n                               layer.isShown = true;\r\n                        }\r\n\t\t\t\t\t\tthis.addChild(layer);\r\n\t\t\t\t\t\tcontinue;\r\n                    }\r\n                    /* Since the layer is supposed to be hidden, let's first let it transition if\r\n                       it has a transition fadeout. */\r\n                    if(layer.transition) {\r\n                        layer.isShown = false;\r\n                        if(layer.minAlpha > 0 || layer.transitionStep > 0) {\r\n                            this.addChild(layer)\r\n                            continue;\r\n                        }\r\n                    }\r\n                    /* Otherwise remove the layer and hide it */\r\n\t\t\t\t\tthis.removeChild(layer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n    }\r\n\t\r\n    _compareChildOrder(a, b) {\r\n        if((this._layers.indexOf(a) > -1 || this._parallaxlayers.indexOf(a) > -1) &&\r\n            (this._layers.indexOf(b) > -1 || this._parallaxlayers.indexOf(b) > -1)) {\r\n            if ((a.z || 0) !== (b.z || 0)) {\r\n                return (a.z || 0) - (b.z || 0);\r\n            } else if ((a.priority || 0) !== (b.priority || 0)) {\r\n                return (a.priority || 0) - (b.priority || 0);\r\n            } else if((a.layerId || 0) !== (b.layerId || 0)) {\r\n                return (a.layerId || 0) - (b.layerId || 0);\r\n            } else {\r\n                return a.spriteId - b.spriteId;\r\n            }\r\n        } else if ((a.z || 0) !== (b.z || 0)) {\r\n            return (a.z || 0) - (b.z || 0);\r\n        } else if (((a.y || 0) + (a.positionHeight || 0)) !== ((b.y || 0) + (b.positionHeight || 0))) {\r\n            return ((a.y || 0) + (a.positionHeight || 0)) - ((b.y || 0) + (b.positionHeight || 0));\r\n        } else if ((a.priority || 0) !== (b.priority || 0)) {\r\n            return (a.priority || 0) - (b.priority || 0);\r\n        } else {\r\n            return a.spriteId - b.spriteId;\r\n        }\r\n    }\r\n\r\n    /* Parallax map stuff */\r\n\r\n    _createImageLayer(layerData, id) {\r\n        let zIndex = 0;\r\n        let repeatX = false;\r\n        let repeatY = false;\r\n        let deltaX = 1;\r\n        let deltaY = 1;\r\n        let autoX = 0;\r\n        let autoY = 0;\r\n        let hue = 0;\r\n\t\tlet viewportX = 0;\r\n\t\tlet viewportY = 0;\r\n\t\tlet viewportWidth = 0;\r\n\t\tlet viewportHeight = 0;\r\n\t\tlet viewportDeltaX = 0;\r\n\t\tlet viewportDeltaY = 0;\r\n\r\n        if(!!layerData.properties) {\r\n            if(!!layerData.properties.ignoreLoading) {\r\n                return;\r\n            }\r\n            if (!!layerData.properties.zIndex) {\r\n                zIndex = parseInt(layerData.properties.zIndex);\r\n            }\r\n            if(layerData.properties.hasOwnProperty('repeatX')) {\r\n                repeatX = !!layerData.properties.repeatX;\r\n            }\r\n            if(layerData.properties.hasOwnProperty('repeatY')) {\r\n                repeatY = !!layerData.properties.repeatY;\r\n            }\r\n            if(layerData.properties.hasOwnProperty('deltaX')) {\r\n                deltaX = layerData.properties.deltaX;\r\n            }\r\n            if(layerData.properties.hasOwnProperty('deltaY')) {\r\n                deltaY = layerData.properties.deltaY;\r\n            }\r\n            if(!!layerData.properties.autoX) {\r\n                autoX = layerData.properties.autoX;\r\n            }\r\n            if(!!layerData.properties.autoY) {\r\n                autoY = layerData.properties.autoY;\r\n            }\r\n            if(!!layerData.properties.hue) {\r\n                hue = parseInt(layerData.properties.hue)\r\n            }\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportX')) {\r\n\t\t\t\tviewportX = layerData.properties.viewportX;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportY')) {\r\n\t\t\t\tviewportX = layerData.properties.viewportY;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportWidth')) {\r\n\t\t\t\tviewportWidth = layerData.properties.viewportWidth;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportHeight')) {\r\n\t\t\t\tviewportHeight = layerData.properties.viewportHeight;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaX')) {\r\n\t\t\t\tviewportDeltaX = layerData.properties.viewportDeltaX;\r\n\t\t\t}\r\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaY')) {\r\n\t\t\t\tviewportDeltaY = layerData.properties.viewportDeltaY;\r\n\t\t\t}\r\n        }\r\n\r\n        let layer;\r\n\r\n        if(!repeatX && !repeatY && !autoX && !autoY) {\r\n            layer = new Sprite_Base();\r\n        } else {\r\n            layer = new TilingSprite();\r\n            layer.move(0, 0, Graphics.width, Graphics.height);\r\n        }\r\n        layer.layerId = id;\r\n        layer.spriteId = Sprite._counter++;\r\n        layer.alpha = layerData.opacity;\r\n        if(TiledManager.hasHideProperties(layerData) && !!layerData.properties.transition) {\r\n            layer._transition = layerData.properties.transition;\r\n            layer._baseAlpha = layerData.opacity;\r\n            layer._minAlpha = Math.min(layer._baseAlpha, (layerData.properties.minimumOpacity || 0));\r\n            layer._isShown = !TiledManager.checkLayerHidden(layerData);\r\n            layer._transitionPhase = layer._isShown ? layer._transition : 0\r\n        }\r\n        layer.bitmap = ImageManager.loadParserParallax(layerData.image, hue);\r\n        layer.baseX = layerData.x + (layerData.offsetx || 0);\r\n        layer.baseY = layerData.y + (layerData.offsety || 0);\r\n        layer.z = layer.zIndex = zIndex;\r\n        layer.repeatX = repeatX;\r\n        layer.repeatY = repeatY;\r\n        layer.deltaX = deltaX;\r\n        layer.deltaY = deltaY;\r\n        layer.stepAutoX = autoX;\r\n        layer.stepAutoY = autoY;\r\n        layer.autoX = 0;\r\n        layer.autoY = 0;\r\n\t\tif(viewportWidth || viewportHeight) {\r\n\t\t\tviewportWidth = viewportWidth || Graphics.width;\r\n\t\t\tviewportHeight = viewportHeight || Graphics.height;\r\n\t\t\tlet layerMask = new PIXI.Graphics();\r\n\t\t\tlayerMask.baseX = viewportX;\r\n\t\t\tlayerMask.baseY = viewportY;\r\n\t\t\tlayerMask.baseWidth = viewportWidth;\r\n\t\t\tlayerMask.baseHeight = viewportHeight;\r\n\t\t\tlayerMask.deltaX = viewportDeltaX;\r\n\t\t\tlayerMask.deltaY = viewportDeltaY;\r\n\t\t\tlayer.mask = layerMask;\r\n\t\t\tlayer.hasViewport = true;\r\n\t\t}\r\n        this._parallaxlayers.push(layer);\r\n        this.addChild(layer);\r\n    }\r\n\r\n    updateParallax() {\r\n        this._parallaxlayers.forEach(layer => {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            if(TiledManager.hasHideProperties(layerData)) {\r\n                let visibility = TiledManager.checkLayerHidden(layerData);\r\n                if(!!layerData.properties.transition) {\r\n                    layer._isShown = !visibility;\r\n                    layer._transitionPhase = Math.max(0, Math.min(layer._transition, layer._transitionPhase + (layer._isShown ? 1 : -1)));\r\n                    layer.alpha = (((layer._baseAlpha - layer._minAlpha) * (layer._transitionPhase / layer._transition)) + layer._minAlpha);\r\n                    visibility = layer._minAlpha > 0 || layer._transitionPhase > 0;\r\n                }\r\n                layer.visible = visibility;\r\n            }\r\n\t\t\tlet offsets = $gameMap.offsets();\r\n\t\t\toffsets.x*= $gameMap.tileWidth();\r\n            offsets.y*= $gameMap.tileHeight();\r\n            let display = {\r\n                x: $gameMap.displayX() * $gameMap.tileWidth() - offsets.x,\r\n                y: $gameMap.displayY() * $gameMap.tileHeight() - offsets.y\r\n            }\r\n            if(!!layer.origin) {\r\n                if(!layer.repeatX) {\r\n                    layer.origin.x = layer.baseX - offsets.x + layer.autoX;\r\n                    layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\r\n                    layer.width = layer.bitmap.width;\r\n                } else {\r\n                    layer.origin.x = layer.baseX - offsets.x + layer.autoX + display.x * layer.deltaX;\r\n                    layer.x = 0;\r\n                    layer.width = Graphics.width;\r\n                }\r\n                if(!layer.repeatY) {\r\n                    layer.origin.y = layer.baseY - offsets.y + layer.autoY;\r\n                    layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\r\n                    layer.height = layer.bitmap.height;\r\n                } else {\r\n                    layer.origin.y = layer.baseY - offsets.y + layer.autoY + display.y * layer.deltaY;\r\n                    layer.y = 0;\r\n                    layer.height = Graphics.height;\r\n                }\r\n                layer.autoX+= layer.stepAutoX;\r\n                layer.autoY+= layer.stepAutoY;\r\n                if(layer.bitmap.width > 0) {\r\n                    while(layer.autoX > layer.bitmap.width) {\r\n                        layer.autoX-= layer.bitmap.width;\r\n                    }\r\n                    while(layer.autoX < 0) {\r\n                        layer.autoX+= layer.bitmap.width;\r\n                    }\r\n                } else {\r\n                    layer.autoX = 0\r\n                }\r\n                if(layer.bitmap.height > 0) {\r\n                    while(layer.autoY > layer.bitmap.height) {\r\n                        layer.autoY-= layer.bitmap.height;\r\n                    }\r\n                    while(layer.autoY < 0) {\r\n                        layer.autoY+= layer.bitmap.height;\r\n                    }\r\n                } else {\r\n                    layer.autoY = 0\r\n                }\r\n            } else {\r\n                layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\r\n                layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\r\n            }\r\n\t\t\tif(layer.hasViewport) {\r\n\t\t\t\tlet viewportX = layer.mask.baseX - offsets.x - display.x * layer.mask.deltaX;\r\n\t\t\t\tlet viewportY = layer.mask.baseY - offsets.y - display.y * layer.mask.deltaY;\r\n\t\t\t\tlayer.mask.clear();\r\n\t\t\t\tlayer.mask.beginFill(0xffffff, 1);\r\n\t\t\t\tlayer.mask.drawRect(viewportX, viewportY, layer.mask.baseWidth, layer.mask.baseHeight);\r\n\t\t\t}\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTilemap.js","import \"./TilesetManager\";\r\nimport \"./DataManager\";\r\nimport \"./ImageManager\";\r\nimport \"./TiledManager\";\r\nimport \"./Sprite_TiledPriorityTile\";\r\nimport \"./AlphaFilter\";\r\nimport { TiledTilemap } from \"./TiledTilemap\";\r\nimport \"./Game_Map\";\r\nimport \"./Game_Screen\";\r\nimport \"./Game_CharacterBase\";\r\nimport \"./Game_Actor\";\r\nimport \"./Game_Player\";\r\nimport \"./Game_Vehicle\";\r\nimport \"./Game_Interpreter\";\r\nimport \"./Sprite_Character\";\r\nimport \"./Spriteset_Map\";\r\n\r\n/* INITIALIZES LISTENERS */\r\n\r\n// Add floor damage while on a slippery floor\r\nTiledManager.addListener(Game_Player, 'slipperyfloor', function(options) {\r\n    const d = options.direction\r\n    $gameParty.members().forEach(actor => {\r\n        actor.checkFloorEffect();\r\n    })\r\n    this.moveStraight(d);\r\n})\r\n\r\n/* INITIALIZES HIDE FUNCTIONS */\r\n\r\nTiledManager.addHideFunction('hideOnLevel', function(layerData) {\r\n    /* Hide if player is on certain level */\r\n    let level = $gameMap.currentMapLevel;\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.hideOnLevel) === level) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n});\r\n\r\nTiledManager.addHideFunction('showOnLevel', function(layerData) {\r\n    /* Show if player is on certain level */\r\n    let level = $gameMap.currentMapLevel;\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.showOnLevel) !== level) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n});\r\n\r\nTiledManager.addHideFunction('hideOnRegion', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionId = $gamePlayer.regionId();\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.hideOnRegion) === regionId) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnRegions', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionId = $gamePlayer.regionId();\r\n    let hideLayer = false;\r\n    if(layerData.properties.hideOnRegions.split(',').indexOf(String(regionId)) !== -1) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnAnyRegions', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionIds = $gamePlayer.regionIds();\r\n    let hideLayer = false;\r\n    let regions = layerData.properties.hideOnRegions.split(',');\r\n    if(regions.filter(region => regionIds.indexOf(region) > -1).length > 0) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnSwitch', function(layerData) {\r\n    /* Hide if switch is on */\r\n    let hideLayer = false;\r\n    if($gameSwitches.value(layerData.properties.hideOnSwitch)) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n})\r\n\r\nTiledManager.addHideFunction('showOnSwitch', function(layerData) {\r\n    /* Show if switch is on */\r\n    let hideLayer = false;\r\n    if(!$gameSwitches.value(layerData.properties.showOnSwitch)) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n})\r\n\r\n/* INITIALIZES FLAGS */\r\n\r\nTiledManager.addFlag('boat', 'ship', 'airship')\r\nTiledManager.addFlag('ladder', 'bush', 'counter', 'damage')\r\nTiledManager.addFlag('ice', 'autoDown', 'autoLeft', 'autoRight', 'autoUp')\r\nTiledManager.addFlag('heal')\r\n\r\n/* INITIALIZES VEHICLES */\r\n\r\nTiledManager.createVehicle('boat', true)\r\nTiledManager.createVehicle('ship', true)\r\nTiledManager.createVehicle('airship', true)\r\n\r\n/* INITIALIZES PLUGIN COMMANDS */\r\n\r\nTiledManager.addPluginCommand('TiledTransferPlayer', function(args) {\r\n    let mapId = parseInt(args[0]);\r\n    let waypoint = args[1];\r\n    let direction = args.length > 2 ? args[2] : 0;\r\n    let fadeType = args.length > 3 ? args[3] : 2;\r\n    if(isNaN(direction)) {\r\n        switch(direction.toLowerCase()) {\r\n            case 'down':\r\n                direction = 2;\r\n                break;\r\n            case 'left':\r\n                direction = 4;\r\n                break;\r\n            case 'right':\r\n                direction = 6;\r\n                break;\r\n            case 'up':\r\n                direction = 8;\r\n                break;\r\n            default:\r\n                direction = 0;\r\n                break;\r\n        }\r\n    } else {\r\n        direction = parseInt(direction);\r\n    }\r\n    if(isNaN(fadeType)) {\r\n        switch(direction.toLowerCase()) {\r\n            case 'black':\r\n                fadeType = 0;\r\n                break;\r\n            case 'white':\r\n                fadeType = 1;\r\n                break;\r\n            default:\r\n                fadeType = 2;\r\n                break;\r\n        }\r\n    } else {\r\n        fadeType = parseInt(fadeType);\r\n    }\r\n    $gamePlayer.reserveTransfer(mapId, 0, 0, direction, fadeType, waypoint);\r\n    this.setWaitMode('transfer');\r\n})\r\n\r\n/* LOAD CUSTOM DATA FROM THE PARAMTERS */\r\n\r\nTiledManager.getParameterFlags()\r\nTiledManager.getParameterVehicles()\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//-----------------------------------------------------------------------------\r\n// TilesetManager\r\n//\r\n// The static class that manages the TileD tilesets.\r\n\r\nfunction TilesetManager() {\r\n    throw new Error('This is a static class');\r\n}\r\n\r\nwindow.TilesetManager = TilesetManager;\r\nTilesetManager.tilesets = {};\r\n\r\nlet _getFilename = function(path) {\r\n    let paths = path.split(\"/\");\r\n    return paths[paths.length - 1];\r\n};\r\n\r\nlet _getRealPath = function(path) {\r\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n    return pluginParams[\"Tilesets Location\"] + _getFilename(path);\r\n};\r\n\r\nTilesetManager.getTileset = function(path) {\r\n    let realPath = _getRealPath(path);\r\n    return TilesetManager.tilesets[_getFilename(path)];\r\n};\r\n\r\nTilesetManager.loadTileset = function(path, callback = false) {\r\n    let realPath = _getRealPath(path);\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', './' + realPath);\r\n    xhr.overrideMimeType('application/json');\r\n\r\n    // on success callback\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n            let tileset = false;\r\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\r\n                tileset = JSON.parse(xhr.responseText);\r\n                TilesetManager.tilesets[_getFilename(path)] = tileset;\r\n            }\r\n            if(callback) {\r\n                callback(tileset);\r\n            }\r\n        }\r\n    };\r\n\r\n    // send request\r\n    xhr.send();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/TilesetManager.js","DataManager._tempTiledData = null;\r\nDataManager._tiledLoaded = false;\r\n\r\nlet _loadMapData = DataManager.loadMapData;\r\nDataManager.loadMapData = function (mapId) {\r\n    _loadMapData.call(this, mapId);\r\n    if (mapId > 0) {\r\n        this.loadTiledMapData(mapId);\r\n    } else {\r\n        this.unloadTiledMapData();\r\n    }\r\n};\r\n\r\nDataManager.loadTiledMapData = function (mapId) {\r\n    var xhr = new XMLHttpRequest();\r\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n    xhr.open('GET', \"./\" + pluginParams[\"Maps Location\"] + \"Map\" + mapId + \".json\");\r\n    xhr.overrideMimeType('application/json');\r\n\r\n    // on success callback\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\r\n                DataManager._tempTiledData = JSON.parse(xhr.responseText);\r\n                TiledManager.expandLayerGroups(DataManager._tempTiledData);\r\n            }\r\n            let tiledLoaded = true;\r\n            let tilesRequired = 0;\r\n            if(DataManager._tempTiledData && DataManager._tempTiledData.tilesets && DataManager._tempTiledData.tilesets.length > 0) {\r\n                for(var idx = 0; idx < DataManager._tempTiledData.tilesets.length; idx++) {\r\n                    let tileset = DataManager._tempTiledData.tilesets[idx];\r\n                    if(tileset.source) {\r\n                        let realTileset = TilesetManager.getTileset(tileset.source);\r\n                        if(realTileset) {\r\n                            DataManager._tempTiledData.tilesets[idx] = Object.assign({}, realTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\r\n                        } else {\r\n                            tiledLoaded = false;\r\n                            tilesRequired++;\r\n                            +function(idx) {\r\n                                TilesetManager.loadTileset(tileset.source, function(returnTileset) {\r\n                                    DataManager._tempTiledData.tilesets[idx] = Object.assign({}, returnTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\r\n                                    tilesRequired--;\r\n                                    if(tilesRequired === 0) {\r\n                                        DataManager._tiledLoaded = true;\r\n                                    }\r\n                                });\r\n                            }(idx);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            DataManager._tiledLoaded = tiledLoaded;\r\n        }\r\n    };\r\n\r\n    // set data to null and send request\r\n    this.unloadTiledMapData();\r\n    xhr.send();\r\n};\r\n\r\nDataManager.unloadTiledMapData = function () {\r\n    DataManager._tempTiledData = null;\r\n    DataManager._tiledLoaded = false;\r\n};\r\n\r\nlet _isMapLoaded = DataManager.isMapLoaded;\r\nDataManager.isMapLoaded = function() {\r\n    let defaultLoaded = _isMapLoaded.call(this);\r\n    let tiledLoaded = DataManager._tiledLoaded;\r\n\r\n    return defaultLoaded && tiledLoaded;\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/DataManager.js","ImageManager.loadParserTileset = function (path, hue) {\r\n    if (!path) {\r\n        return this.loadEmptyBitmap();\r\n    }\r\n    let paths = path.split(\"/\");\r\n    while(paths[0] === '..') {\r\n        paths.shift();\r\n    }\r\n    let filename = paths[paths.length - 1];\r\n    let realPath = \"img/tilesets/\" + filename;\r\n    if(paths[0] === 'img') {\r\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\r\n    }\r\n\r\n    return this.loadNormalBitmap(realPath, hue);\r\n};\r\n\r\nImageManager.loadParserParallax = function (path, hue) {\r\n    if (!path) {\r\n        return this.loadEmptyBitmap();\r\n    }\r\n    let paths = path.split(\"/\");\r\n    while(paths[0] === '..') {\r\n        paths.shift();\r\n    }\r\n    let filename = paths[paths.length - 1];\r\n    let realPath = \"img/parallaxes/\" + filename;\r\n    if(paths[0] === 'img') {\r\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\r\n    }\r\n\r\n    return this.loadNormalBitmap(realPath, hue);\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/ImageManager.js","//-----------------------------------------------------------------------------\r\n// TiledManager\r\n//\r\n// The static class that manages TileD data, including extensions.\r\n\r\nfunction TiledManager() {\r\n    throw new Error('This is a static class');\r\n}\r\n\r\nwindow.TiledManager = TiledManager;\r\n\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nlet _listeners = {}\r\nlet _hideFunctions = {}\r\nlet _hideIgnoreFunctions = {\r\n    regions: [],\r\n    collisions: [],\r\n    levelChanges: [],\r\n    tileFlags: []\r\n}\r\nlet _tileFlags = {}\r\nlet _tileFlagIndex = 1;\r\nlet _vehicles = {};\r\nlet _vehiclesByIndex = [];\r\n\r\nlet _pluginCommands = {};\r\n\r\nlet _fullVehicleData = {\r\n    bgm: {\r\n        name: '',\r\n        pan: 0,\r\n        pitch: 100,\r\n        volume: 90\r\n    },\r\n    characterIndex: 0,\r\n    characterName:\"\",\r\n    startMapId: 0,\r\n    startX: 0,\r\n    startY: 0\r\n};\r\n\r\nTiledManager.addListener = function(objectName, event, callback, recursive = true) {\r\n    if(typeof objectName === 'function') {\r\n        objectName = objectName.name\r\n    }\r\n    if(!_listeners[objectName]) {\r\n        _listeners[objectName] = {}\r\n    }\r\n    if(!_listeners[objectName][event]) {\r\n        _listeners[objectName][event] = []\r\n    }\r\n    callback.recursive = !!recursive\r\n    _listeners[objectName][event].push(callback)\r\n}\r\n\r\nTiledManager.triggerListener = function(object, event, options = {}) {\r\n    let objectName = object.constructor.name\r\n    if(!_listeners[objectName] || !_listeners[objectName][event]) {\r\n        return false\r\n    }\r\n    let top = true\r\n    let proto = object.__proto__\r\n    while(proto) {\r\n        objectName = proto.constructor.name\r\n        if(_listeners[objectName] && _listeners[objectName][event]) {\r\n            _listeners[objectName][event].forEach(callback => {\r\n                if(top || callback.recursive) {\r\n                    callback.call(object, options)\r\n                }\r\n            })\r\n        }\r\n        top = false\r\n        proto = proto.__proto__\r\n    }\r\n}\r\n\r\nTiledManager.addHideFunction = function(id, callback, ignore = []) {\r\n    _hideFunctions[id] = callback\r\n\r\n    ignore.forEach((type) => {\r\n        _hideIgnoreFunctions[type].push(id)\r\n    })\r\n}\r\n\r\nTiledManager.checkLayerHidden = function(layerData, ignore = []) {\r\n    if(typeof ignore === 'string') {\r\n        ignore = _hideIgnoreFunctions[ignore] || []\r\n    }\r\n    let keys = Object.keys(_hideFunctions);\r\n    let data = false;\r\n    for(let idx = 0; idx < keys.length; idx++) {\r\n        if(ignore.indexOf(keys) !== -1) {\r\n            continue;\r\n        }\r\n        if(layerData.properties && layerData.properties.hasOwnProperty(keys[idx])) {\r\n            data = data || _hideFunctions[keys[idx]](layerData);\r\n        }\r\n        if(data) {\r\n            return data;\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\nTiledManager.hasHideProperties = function(layerData) {\r\n    return (layerData.properties && (\r\n        Object.keys(_hideFunctions).filter(key => {\r\n            return layerData.properties.hasOwnProperty(key)\r\n        }).length > 0)\r\n    );\r\n}\r\n\r\nTiledManager.expandLayerGroups = function(parentLayer = false) {\r\n    if(!parentLayer) {\r\n        parentLayer = $gameData.tiledData\r\n    }\r\n    if(!parentLayer) {\r\n        return;\r\n    }\r\n    for(var idx = 0; idx < parentLayer.layers.length; idx++) {\r\n        let layer = parentLayer.layers[idx];\r\n        if(layer.type !== 'group') {\r\n            continue;\r\n        }\r\n        TiledManager.expandLayerGroups(layer);\r\n        Array.prototype.splice.apply(parentLayer.layers, [idx, 1].concat(layer.layers))\r\n        idx+= layer.layers.length - 1;\r\n    }\r\n}\r\n\r\nTiledManager.extractTileId = function(layerData, i) {\r\n\tif(layerData.data) {\r\n\t\treturn layerData.data[i];\r\n\t} else {\r\n\t\tlet x = i % $gameMap.width();\r\n\t\tlet y = Math.floor(i / $gameMap.width());\r\n\t\tlet offsets = $gameMap.offsets();\r\n\t\tx+= offsets.x;\r\n\t\ty+= offsets.y;\r\n\t\tif(x < layerData.startx || y < layerData.starty || x >= layerData.startx + layerData.width || y >= layerData.starty + layerData.height) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tfor(let chunkIdx = 0; chunkIdx < layerData.chunks.length; chunkIdx++) {\r\n\t\t\tlet chunk = layerData.chunks[chunkIdx];\r\n\t\t\tif(x < chunk.x || y < chunk.y || x >= chunk.x + chunk.width || y >= chunk.y + chunk.height) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\treturn chunk.data[x - chunk.x + (y - chunk.y) * chunk.width];\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/* TILE FLAGS */\r\n\r\nTiledManager.addFlag = function(...flagIds) {\r\n    flagIds.forEach(flagId => {\r\n        _tileFlags[flagId] = _tileFlagIndex++;\r\n    })\r\n}\r\n\r\nTiledManager.getFlag = function(flagId) {\r\n    return _tileFlags[flagId];\r\n}\r\n\r\nTiledManager.getFlagNames = function() {\r\n    return Object.keys(_tileFlags);\r\n}\r\n\r\nTiledManager.getFlagLocation = function(flagId) {\r\n    let flag = _tileFlags[flagId]\r\n    let bit = (1 << (flag % 16)) & 0xffff;\r\n    let group = Math.floor(flag / 16);\r\n    return [group, bit];\r\n}\r\n\r\nTiledManager.getParameterFlags = function() {\r\n    if(!!pluginParams['Custom Tile Flags']) {\r\n        let tileFlags = JSON.parse(pluginParams['Custom Tile Flags']);\r\n        TiledManager.addFlag.apply(this, tileFlags);\r\n    }\r\n}\r\n\r\n/* VEHICLES */\r\nTiledManager.createVehicle = function(vehicleName, vehicleData = false) {\r\n    if(!vehicleData) {\r\n        vehicleData = Object.assign({}, _fullVehicleData, {\r\n            bgm: Object.assign({}, _fullVehicleData.bgm)\r\n        });\r\n    } else if(vehicleData !== true) {\r\n        vehicleData = Object.assign({}, _fullVehicleData, vehicleData, {\r\n            bgm: Object.assign({}, _fullVehicleData.bgm, vehicleData.bgm)\r\n        });\r\n    }\r\n    let vehicle = new Game_Vehicle(vehicleName, vehicleData);\r\n    _vehicles[vehicleName] = vehicle;\r\n    _vehiclesByIndex.push(vehicleName);\r\n};\r\n\r\nTiledManager.refreshVehicles = function(vehicles = []) {\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            _vehicles[vehicleName].refresh();\r\n        }\r\n    });\r\n};\r\n\r\nTiledManager.getAllVehicles = function(vehicles = []) {\r\n    let returnVehicles = [];\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            returnVehicles.push(_vehicles[vehicleName]);\r\n        }\r\n    });\r\n    return returnVehicles;\r\n};\r\n\r\nTiledManager.getVehicle = function(id) {\r\n    if(isNaN(id)) {\r\n        if(_vehicles[id]) {\r\n            return _vehicles[id];\r\n        }\r\n    } else {\r\n        if(id < _vehiclesByIndex.length) {\r\n            return _vehicles[_vehiclesByIndex[id]];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nTiledManager.updateVehicles = function(vehicles = []) {\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            _vehicles[vehicleName].update();\r\n        }\r\n    });\r\n}\r\n\r\nTiledManager.getParameterVehicles = function() {\r\n    if(!!pluginParams['Custom Vehicles']) {\r\n        let vehicles = JSON.parse(pluginParams['Custom Vehicles']);\r\n        vehicles.forEach(vehicle => {\r\n            let vehicleData = JSON.parse(vehicle);\r\n            TiledManager.createVehicle(vehicleData.vehicleName, vehicleData);\r\n        })\r\n    }\r\n}\r\n\r\n/* PLUGIN COMMANDS */\r\n\r\nTiledManager.addPluginCommand = function(command, func) {\r\n    _pluginCommands[command] = func;\r\n}\r\n\r\nTiledManager.pluginCommand = function(command, args) {\r\n    if(_pluginCommands.hasOwnProperty(command)) {\r\n        _pluginCommands[command].call(this, args);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledManager.js","//-----------------------------------------------------------------------------\r\n// Sprite_TiledPriorityTile\r\n//\r\n// The sprite for displaying a priority tile.\r\n\r\nfunction Sprite_TiledPriorityTile() {\r\n    this.initialize.apply(this, arguments);\r\n}\r\n\r\nSprite_TiledPriorityTile.prototype = Object.create(Sprite_Base.prototype);\r\nSprite_TiledPriorityTile.prototype.constructor = Sprite_TiledPriorityTile;\r\n\r\nwindow.Sprite_TiledPriorityTile = Sprite_TiledPriorityTile;\r\n\r\nSprite_TiledPriorityTile.prototype.updateVisibility = function() {\r\n    let visibility = false;\r\n    if(this.layerId > -1) {\r\n        let layer = $gameMap.tiledData.layers[this.layerId];\r\n        if(layer.properties.transition) {\r\n            if(!this._transition) {\r\n                this._transition = layer.properties.transition;\r\n                this._baseAlpha = layer.opacity;\r\n                this._minAlpha = Math.min(this._baseAlpha, (layer.properties.minimumOpacity || 0));\r\n                this._isShown = !TiledManager.checkLayerHidden(layer);\r\n                this._transitionPhase = this._isShown ? this._transition : 0\r\n            } else {\r\n                this._isShown = !TiledManager.checkLayerHidden(layer);\r\n                this._transitionPhase = Math.max(0, Math.min(this._transition, this._transitionPhase + (this._isShown ? 1 : -1)));\r\n            }\r\n            visibility = this._minAlpha > 0 || this._transitionPhase > 0;\r\n            this.opacity = 255 * (((this._baseAlpha - this._minAlpha) * (this._transitionPhase / this._transition)) + this._minAlpha);\r\n        } else {\r\n            visibility = !TiledManager.checkLayerHidden(layer);\r\n        }\r\n    }\r\n    this.visible = visibility;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Sprite_TiledPriorityTile.js","/* A fallback implementation of AlphaFilter */\r\n\r\nconst fragmentSrc = 'varying vec2 vTextureCoord;' +\r\n'uniform sampler2D uSampler;' +\r\n'uniform float uAlpha;' +\r\n'void main(void)' +\r\n'{' +\r\n'   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;' +\r\n'}';\r\n\r\nif(!PIXI.filters.AlphaFilter) {\r\n    class AlphaFilter extends PIXI.Filter\r\n    {\r\n        /**\r\n         * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\r\n         */\r\n        constructor(alpha = 1.0)\r\n        {\r\n            super(\r\n                // vertex shader\r\n                null,\r\n                // fragment shader\r\n               fragmentSrc\r\n            );\r\n            this.alpha = alpha;\r\n            this.glShaderKey = 'alpha';\r\n        }\r\n        /**\r\n         * Coefficient for alpha multiplication\r\n         *\r\n         * @member {number}\r\n         * @default 1\r\n         */\r\n        get alpha()\r\n        {\r\n            return this.uniforms.uAlpha;\r\n        }\r\n        set alpha(value) // eslint-disable-line require-jsdoc\r\n        {\r\n            this.uniforms.uAlpha = value;\r\n        }\r\n    }\r\n    PIXI.filters.AlphaFilter = AlphaFilter;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/AlphaFilter.js","import TiledTileShader from \"./TiledTileShader\";\r\n\r\nexport default class TiledTileLayer extends PIXI.tilemap.CompositeRectTileLayer {\r\n    constructor(zIndex, bitmaps, useSquare, texPerChild) {\r\n        super(zIndex, bitmaps, useSquare, texPerChild)\r\n    }\r\n\r\n    renderWebGL(renderer) {\r\n        var gl = renderer.gl;\r\n        if(!this.tiledTileShader) {\r\n            this.tiledTileShader = new TiledTileShader(gl, renderer.plugins.tilemap.maxTextures, this.useSquare)\r\n        }\r\n        var alpha = this.alpha;\r\n        if(this.transition) {\r\n            this.transitionStep = Math.max(0, Math.min(this.transition, this.transitionStep + (this.isShown ? 1 : -1)));\r\n            alpha-= this.minAlpha\r\n            alpha*= (this.transitionStep / this.transition)\r\n            alpha+= this.minAlpha\r\n        }\r\n        //var shader = renderer.plugins.tilemap.getShader(this.useSquare);\r\n        var shader = this.tiledTileShader;\r\n        renderer.setObjectRenderer(renderer.plugins.tilemap);\r\n        renderer.bindShader(shader);\r\n        this._globalMat = this._globalMat || new PIXI.Matrix();\r\n        renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\r\n        shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\r\n        shader.uniforms.shadowColor = this.shadowColor;\r\n        shader.uniforms.alpha = alpha;\r\n        if (this.useSquare) {\r\n            var tempScale = this._tempScale = (this._tempScale || [0, 0]);\r\n            tempScale[0] = this._globalMat.a >= 0 ? 1 : -1;\r\n            tempScale[1] = this._globalMat.d < 0 ? 1 : -1;\r\n            var ps = shader.uniforms.pointScale = tempScale;\r\n            shader.uniforms.projectionScale = Math.abs(this.worldTransform.a) * renderer.resolution;\r\n        }\r\n        var af = shader.uniforms.animationFrame = renderer.plugins.tilemap.tileAnim;\r\n        var layers = this.children;\r\n        for (var i = 0; i < layers.length; i++) {\r\n            layers[i].renderWebGL(renderer, this.useSquare);\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTileLayer.js","const GLBuffer = PIXI.glCore.GLBuffer;\r\nconst VertexArrayObject = PIXI.glCore.VertexArrayObject;\r\n\r\nvar squareShaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying float vSize;\r\nvarying float vTextureId;\r\n\r\nuniform vec4 shadowColor;\r\nuniform sampler2D uSamplers[%count%];\r\nuniform vec2 uSamplerSize[%count%];\r\nuniform vec2 pointScale;\r\nuniform float alpha;\r\n\r\nvoid main(void){\r\n   float margin = 0.5 / vSize;\r\n   vec2 pointCoord = (gl_PointCoord - 0.5) * pointScale + 0.5;\r\n   vec2 clamped = vec2(clamp(pointCoord.x, margin, 1.0 - margin), clamp(pointCoord.y, margin, 1.0 - margin));\r\n   vec2 textureCoord = pointCoord * vSize + vTextureCoord;\r\n   float textureId = vTextureId;\r\n   vec4 color;\r\n   %forloop%\r\n   gl_FragColor = color * alpha;\r\n}\r\n`\r\n\r\nvar squareShaderVert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec2 aAnim;\r\nattribute float aTextureId;\r\nattribute float aSize;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform vec2 samplerSize;\r\nuniform vec2 animationFrame;\r\nuniform float projectionScale;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vSize;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition + aSize * 0.5, 1.0)).xy, 0.0, 1.0);\r\n   gl_PointSize = aSize * projectionScale;\r\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\r\n   vTextureId = aTextureId;\r\n   vSize = aSize;\r\n}\r\n`\r\nvar rectShaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vFrame;\r\nvarying float vTextureId;\r\nuniform vec4 shadowColor;\r\nuniform sampler2D uSamplers[%count%];\r\nuniform vec2 uSamplerSize[%count%];\r\nuniform float alpha;\r\nvoid main(void){\r\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\r\n   float textureId = floor(vTextureId + 0.5);\r\n   vec4 color;\r\n   %forloop%\r\n   gl_FragColor = color * alpha;\r\n}\r\n`;\r\n\r\nvar rectShaderVert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aFrame;\r\nattribute vec2 aAnim;\r\nattribute float aTextureId;\r\nuniform mat3 projectionMatrix;\r\nuniform vec2 animationFrame;\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vFrame;\r\nvoid main(void){\r\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n   vec2 anim = aAnim * animationFrame;\r\n   vTextureCoord = aTextureCoord + anim;\r\n   vFrame = aFrame + vec4(anim, anim);\r\n   vTextureId = aTextureId;\r\n}\r\n`;\r\nexport default class TiledTileShader extends PIXI.tilemap.TilemapShader {\r\n\r\n    constructor(gl, maxTextures, useSquare) {\r\n        let vert = useSquare ? squareShaderVert : rectShaderVert;\r\n        let frag = useSquare ? squareShaderFrag : rectShaderFrag;\r\n        super(gl,\r\n            maxTextures,\r\n            vert,\r\n            PIXI.tilemap.shaderGenerator.generateFragmentSrc(maxTextures, frag)\r\n        );\r\n        if(useSquare) {\r\n            this.vertSize = 8;\r\n            this.vertPerQuad = 1;\r\n            this.anim = 5;\r\n            this.textureId = 7;\r\n        } else {\r\n            this.vertSize = 11;\r\n            this.vertPerQuad = 4;\r\n            this.anim = 8;\r\n            this.textureId = 10;\r\n        }\r\n        this.maxTextures = maxTextures;\r\n        this.stride = this.vertSize * 4;\r\n        PIXI.tilemap.shaderGenerator.fillSamplers(this, this.maxTextures);\r\n    }\r\n\r\n    createVao(renderer, vb) {\r\n        var gl = renderer.gl;\r\n        return renderer.createVao()\r\n            .addIndex(this.indexBuffer)\r\n            .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\r\n            .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\r\n            .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\r\n            .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, this.anim * 4)\r\n            .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, this.textureId * 4);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TiledTileShader.js","// Constants\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nObject.defineProperty(Game_Map.prototype, 'tiledData', {\r\n    get: function () {\r\n        return DataManager._tempTiledData;\r\n    },\r\n    configurable: true\r\n});\r\n\r\nObject.defineProperty(Game_Map.prototype, 'currentMapLevel', {\r\n    get: function () {\r\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\r\n        if (!varID) {\r\n            return this._currentMapLevel;\r\n        } else {\r\n            return $gameVariables.value(varID);\r\n        }\r\n    },\r\n    set: function (value) {\r\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\r\n        if (!varID) {\r\n            this._currentMapLevel = value;\r\n        } else {\r\n            $gameVariables.setValue(varID, value);\r\n        }\r\n    },\r\n    configurable: true\r\n});\r\n\r\nlet _setup = Game_Map.prototype.setup;\r\nGame_Map.prototype.setup = function (mapId) {\r\n    this._tiledInitialized = false;\r\n    this._levels = [];\r\n    this._collisionMap = {};\r\n    this._arrowCollisionMap = {};\r\n    this._regions = {};\r\n    this._mapLevelChange = {};\r\n    this._positionHeightChange = {};\r\n    this._tileFlags = {};\r\n    this._collisionMapLayers = [];\r\n    this._arrowCollisionMapLayers = [];\r\n    this._regionsLayers = [];\r\n    this._mapLevelChangeLayers = [];\r\n    this._positionHeightChangeLayers = [];\r\n    this._tileFlagsLayers = [];\r\n    this._currentMapLevel = 0;\r\n    this.currentMapLevel = 0;\r\n    this._waypoints = {};\r\n    this._autoSize = false;\r\n    this._autoSizeBorder = 0;\r\n    this._offsets = { x: 0, y: 0 };\r\n    this._camera = {\r\n        focus: \"player\",\r\n        data: null\r\n    }\r\n    _setup.call(this, mapId);\r\n    if (this.isTiledMap()) {\r\n        $dataMap.width = this.tiledData.width;\r\n        $dataMap.height = this.tiledData.height;\r\n        this._setupTiled();\r\n        this._tiledInitialized = true;\r\n        if(this._refreshList) {\r\n            this._refreshList.forEach(character => {\r\n                character.refreshBushDepth();\r\n            })\r\n        }\r\n    } else {\r\n\t\tthis._tiledInitialized = true;\r\n\t}\r\n};\r\n\r\nGame_Map.prototype.isTiledInitialized = function() {\r\n    return !!this._tiledInitialized;\r\n}\r\n\r\nGame_Map.prototype.setRefreshDepth = function(character) {\r\n    if(!this._refreshList) {\r\n        this._refreshList = [];\r\n    }\r\n    this._refreshList.push(character);\r\n}\r\n\r\nGame_Map.prototype.isTiledMap = function () {\r\n    return !!this.tiledData;\r\n};\r\n\r\nGame_Map.prototype._setupTiled = function () {\r\n    this._initializeMapProperties();\r\n    this._initializeInfiniteMap();\r\n    this._initializeMapLevel(0);\r\n\r\n    this._setupCollision();\r\n    this._setupRegion();\r\n    this._setupMapLevelChange();\r\n    this._setupTileFlags();\r\n    this._setupTiledEvents();\r\n};\r\n\r\nGame_Map.prototype._initializeMapProperties = function() {\r\n    let autoSize = false;\r\n    let border = 0;\r\n    if(this.tiledData.properties) {\r\n        if(this.tiledData.properties.hasOwnProperty('autoSize')) {\r\n            autoSize = this.tiledData.properties.autoSize;\r\n        }\r\n        if(this.tiledData.properties.hasOwnProperty('border')) {\r\n            border = this.tiledData.properties.border;\r\n        }\r\n    }\r\n    this._autoSize = autoSize;\r\n    this._autoSizeBorder = border;\r\n}\r\n\r\nGame_Map.prototype.offsets = function(x = false, y = false) {\r\n\tif(typeof x === 'object') {\r\n\t\tlet offsets = {\r\n\t\t\tx: (x.x || 0) - this._offsets.x,\r\n\t\t\ty: (x.y || 0) - this._offsets.y\r\n\t\t}\r\n\t\tif(typeof y === 'string' && offsets.hasOwnProperty(y)) {\r\n\t\t\treturn offsets[y];\r\n\t\t}\r\n\t\treturn offsets;\r\n\t}\r\n\tif(x !== false || y !== false) {\r\n\t\treturn {\r\n\t\t\tx: (x || 0) - this._offsets.x,\r\n\t\t\ty: (y || 0) - this._offsets.y\r\n\t\t}\r\n\t}\r\n    return {\r\n        x: this._offsets.x,\r\n        y: this._offsets.y\r\n    }\r\n}\r\n\r\nGame_Map.prototype._initializeInfiniteMap = function() {\r\n    if(!this.tiledData.infinite) {\r\n        return;\r\n    }\r\n    if(this._autoSize && this._autoSize !== 'false') {\r\n        this._setMapSize();\r\n    }\r\n\t/*\r\n\tThis used to convert chunk data into regular map data. I removed it because I realized that really big maps\r\n\twill pose a huge memory problem, especially if you have a lot of layers. It also won't affect the load time,\r\n\tas all other data will already be pre-processed.\r\n\t*/\r\n\t/*\r\n\tfor (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n\t\tlet layerData = this.tiledData.layers[idx];\r\n\t\tif(!layerData.data && !!layerData.chunks) {\r\n\t\t\tlayerData.data = new Array(this.width() * this.height());\r\n\t\t\tlayerData.data.fill(0);\r\n\t\t\tlayerData.chunks.forEach(chunk => {\r\n\t\t\t\tfor(let i = 0; i < chunk.data.length; i++) {\r\n\t\t\t\t\tlet x = chunk.x - this._offsets.x + (i % chunk.width);\r\n\t\t\t\t\tlet y = chunk.y - this._offsets.y + Math.floor(i / chunk.width);\r\n\t\t\t\t\tif(x < 0 || y < 0 || x >= layerData.x + this.width() || y >= layerData.x + this.width()) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet realX = x + y * this.width();\r\n\t\t\t\t\tlayerData.data[realX] = chunk.data[i];\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n/**\r\n * Resizes an infinite map so that the entire map is visible.\r\n * The only thing this does is set the offset and the size of the map,\r\n * without changing the map data itself.\r\n */\r\nGame_Map.prototype._setMapSize = function() {\r\n\t// Initialize variables\r\n    var minX = false;\r\n    var minY = false;\r\n    var maxX = false;\r\n    var maxY = false;\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        var layer = this.tiledData.layers[idx];\r\n        if(layer.type !== 'tilelayer') {\r\n            continue;\r\n        }\r\n        var x1 = layer.startx;\r\n        var y1 = layer.starty;\r\n        var x2 = x1 + layer.width;\r\n        var y2 = y1 + layer.height;\r\n\t\tif(this._autoSize === 'deep' || this._autoSize === 'crop') {\r\n\t\t\tif(minX === false || x1 < minX) {\r\n\t\t\t\tx1 = this._cropInfiniteMap(layer, x1, (minX === false ? x2 : minX));\r\n\t\t\t}\r\n\t\t\tif(minY === false || y1 < minY) {\r\n\t\t\t\ty1 = this._cropInfiniteMap(layer, y1, (minY === false ? y2 : minY), true, true);\r\n\t\t\t}\r\n\t\t\tif(maxX === false || x2 > maxX) {\r\n\t\t\t\tx2 = this._cropInfiniteMap(layer, x2, (maxX === false ? x1 : maxX), false);\r\n\t\t\t}\r\n\t\t\tif(maxY === false || y2 > maxY) {\r\n\t\t\t\ty2 = this._cropInfiniteMap(layer, y2, (maxY === false ? y1 : maxY), false, true);\r\n\t\t\t}\r\n\t\t}\r\n        minX = minX !== false ? Math.min(minX, x1) : x1;\r\n        minY = minY !== false ? Math.min(minY, y1) : y1;\r\n        maxX = maxX !== false ? Math.max(maxX, x2) : x2;\r\n        maxY = maxY !== false ? Math.max(maxY, y2) : y2;\r\n    }\r\n\tif(this._autoSizeBorder) {\r\n\t\tlet border = [0, 0, 0, 0];\r\n\t\tif(isNaN(this._autoSizeBorder)) {\r\n\t\t\tlet autoBorder = this.autoSizeBorder.split(' ');\r\n\t\t\tborder[0] = parseInt(autoBorder[0]);\r\n\t\t\tborder[1] = autoBorder.length < 2 ? border[0] : parseInt(autoBorder[1]);\r\n\t\t\tborder[2] = autoBorder.length < 3 ? border[0] : parseInt(autoBorder[2]);\r\n\t\t\tborder[3] = autoBorder.length < 4 ? border[1] : parseInt(autoBorder[3]);\r\n\t\t} else {\r\n\t\t\tborder[0] = this._autoSizeBorder;\r\n\t\t\tborder[1] = this._autoSizeBorder;\r\n\t\t\tborder[2] = this._autoSizeBorder;\r\n\t\t\tborder[3] = this._autoSizeBorder;\r\n\t\t}\r\n\t\tminX-= +border[3];\r\n\t\tminY-= +border[0];\r\n\t\tmaxX+= +border[1];\r\n\t\tmaxY+= +border[2];\r\n\t}\r\n    this._offsets.x = minX;\r\n    this._offsets.y = minY;\r\n    this.tiledData.width = maxX - minX;\r\n    this.tiledData.height = maxY - minY;\r\n}\r\n\r\nGame_Map.prototype._cropInfiniteMap = function(layer, offset, limit, forward = true, vertical = false) {\r\n\tlet o = offset;\r\n\tlet d = vertical ? 'y' : 'x';\r\n\tlet s = vertical ? 'height' : 'width';\r\n\twhile((forward && o < limit) || (!forward && o > limit)) {\r\n\t\tlet realO = o - (!forward ? 1 : 0);\r\n\t\tlet lineEmpty = true;\r\n\t\tfor(let chunkIdx = 0; chunkIdx < layer.chunks.length; chunkIdx++) {\r\n\t\t\tlet chunk = layer.chunks[chunkIdx];\r\n\t\t\tif(realO < chunk[d] || realO >= chunk[d] + chunk[s]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet empty = true;\r\n\t\t\tfor(let o2 = 0; o2 < chunk[s]; o2++) {\r\n\t\t\t\tlet coords = {\r\n\t\t\t\t\t[d]: realO - chunk[d],\r\n\t\t\t\t\t[vertical ? 'x' : 'y']: o2\r\n\t\t\t\t};\r\n\t\t\t\tlet i = coords.x + coords.y * chunk.width;\r\n\t\t\t\tif(chunk.data[i]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!empty) {\r\n\t\t\t\tlineEmpty = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!lineEmpty) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\to+= forward ? 1 : -1;\r\n\t}\r\n\treturn o;\r\n}\r\n\r\nGame_Map.prototype._initializeMapLevel = function (id) {\r\n    if (!!this._collisionMap[id]) {\r\n        return;\r\n    }\r\n\r\n    this._levels.push(id);\r\n\r\n    this._collisionMap[id] = {};\r\n    this._arrowCollisionMap[id] = {};\r\n    this._regions[id] = {};\r\n    this._mapLevelChange[id] = {};\r\n    this._tileFlags[id] = {};\r\n    this._collisionMapLayers[id] = [];\r\n    this._arrowCollisionMapLayers[id] = [];\r\n    this._regionsLayers[id] = [];\r\n    this._mapLevelChangeLayers[id] = [];\r\n    this._tileFlagsLayers[id] = [];\r\n    this._initializeMapLevelData(id);\r\n};\r\n\r\nGame_Map.prototype._initializeMapLevelData = function(id = 0, layerId = 'main', dataTypes = false) {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    \r\n    const defaultData = {\r\n        'collisionMap': 0,\r\n        'arrowCollisionMap': 1 | 2 | 4 | 8,\r\n        'regions': 0,\r\n        'mapLevelChange': -1,\r\n        'positionHeightChange': -1,\r\n        'tileFlags': 0\r\n    }\r\n\r\n    if(!dataTypes) {\r\n        dataTypes = Object.keys(defaultData);\r\n    }\r\n\r\n    for(let idx = 0; idx < dataTypes.length; idx++) {\r\n        let dataType = dataTypes[idx];\r\n        let defaultValue = defaultData[dataType];\r\n        if(!this['_' + dataType][id]) {\r\n            this['_' + dataType][id] = {};\r\n            this['_' + dataType + 'Layers'][id] = [];\r\n        }\r\n        if(!!this['_' + dataType][id][layerId]) {\r\n            continue;\r\n        }\r\n        this['_' + dataType][id][layerId] = []\r\n        let typeData = this['_' + dataType][id][layerId]\r\n        for (let x of Array(size).keys()) {\r\n            typeData.push(defaultValue);\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._setupCollision = function () {\r\n    this._setupCollisionFull();\r\n    this._setupCollisionArrow();\r\n};\r\n\r\nGame_Map.prototype._setupCollisionFull = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.collision) {\r\n            continue;\r\n        }\r\n\r\n        if (layerData.properties.collision !== \"full\"\r\n            && layerData.properties.collision !== \"up-left\"\r\n            && layerData.properties.collision !== \"up-right\"\r\n            && layerData.properties.collision !== \"down-left\"\r\n            && layerData.properties.collision !== \"down-right\"\r\n            && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._collisionMapLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['collisionMap']);\r\n        }\r\n        \r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let ids = [];\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                switch(layerData.properties.collision) {\r\n                    case \"full\":\r\n                        ids.push(realX);\r\n                        if (this.isHalfTile()) {\r\n                            ids.push(realX + 1, realX + width, realX + width + 1);\r\n                        }\r\n                        break;\r\n                    case \"up-left\":\r\n                        ids.push(realX);\r\n                        break;\r\n                    case \"up-right\":\r\n                        ids.push(realX + 1);\r\n                        break;\r\n                    case \"down-left\":\r\n                        ids.push(realX + width);\r\n                        break;\r\n                    case \"down-right\":\r\n                        ids.push(realX + width + 1);\r\n                        break;\r\n                    case \"tiles\":\r\n                        let tileId = TiledManager.extractTileId(layerData, x);\r\n                        let tileset = this._getTileset(tileId);\r\n                        if(tileset && tileset.tileproperties) {\r\n                            let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                            if(tileData) {\r\n                                if(tileData.collision) {\r\n                                    ids.push(realX);\r\n                                    if (this.isHalfTile()) {\r\n                                        ids.push(realX + 1, realX + width, realX + width + 1);\r\n                                    }\r\n                                }\r\n                                if(tileData.collisionUpLeft) {\r\n                                    ids.push(realX);\r\n                                }\r\n                                if(tileData.collisionUpRight) {\r\n                                    ids.push(realX + 1);\r\n                                }\r\n                                if(tileData.collisionDownLeft) {\r\n                                    ids.push(realX + width);\r\n                                }\r\n                                if(tileData.collisionDownRight) {\r\n                                    ids.push(realX + width + 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                for (let id of ids) {\r\n                    this._collisionMap[level][layerId][id] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupCollisionArrow = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let bit = 0;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.collision) {\r\n            continue;\r\n        }\r\n\r\n        if (layerData.properties.collision !== \"arrow\" && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n\r\n        if (!layerData.properties.arrowImpassable && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n        \r\n        if(layerData.properties.arrowImpassable) {\r\n\r\n            if (layerData.properties.arrowImpassable === \"down\") {\r\n                bit = 1;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"left\") {\r\n                bit = 2;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"right\") {\r\n                bit = 4;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"up\") {\r\n                bit = 8;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._arrowCollisionMapLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['arrowCollisionMap']);\r\n        }\r\n        \r\n        let arrowCollisionMap = this._arrowCollisionMap[level][layerId];\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let realBit = bit;\r\n                if(layerData.properties.collision === \"tiles\") {\r\n                    realBit = 0;\r\n                    let tileId = TiledManager.extractTileId(layerData, x);\r\n                    let tileset = this._getTileset(tileId);\r\n                    if(tileset && tileset.tileproperties) {\r\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                        if(tileData) {\r\n                            if(tileData.arrowImpassableDown) {\r\n                                realBit+= 1;\r\n                            }\r\n                            if(tileData.arrowImpassableLeft) {\r\n                                realBit+= 2;\r\n                            }\r\n                            if(tileData.arrowImpassableRight) {\r\n                                realBit+= 4;\r\n                            }\r\n                            if(tileData.arrowImpassableUp) {\r\n                                realBit+= 8;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                arrowCollisionMap[realX] = arrowCollisionMap[realX] ^ realBit;\r\n                if (this.isHalfTile()) {\r\n                    arrowCollisionMap[realX + 1]\r\n                        = arrowCollisionMap[realX + 1] ^ realBit;\r\n                    arrowCollisionMap[realX + width]\r\n                        = arrowCollisionMap[realX + width] ^ realBit;\r\n                    arrowCollisionMap[realX + width + 1]\r\n                        = arrowCollisionMap[realX + width + 1] ^ realBit;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupRegion = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.regionId) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._regionsLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['regions']);\r\n        }\r\n        \r\n        let regionMap = this._regions[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let regionId = 0;\r\n                if(layerData.properties.regionId > -1) {\r\n                    regionId = parseInt(layerData.properties.regionId);\r\n                } else {\r\n                    let tileId = TiledManager.extractTileId(layerData, x);\r\n                    let tileset = this._getTileset(tileId);\r\n                    if(tileset && tileset.tileproperties) {\r\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                        if(tileData && tileData.regionId) {\r\n                            regionId = parseInt(tileData.regionId);\r\n                        }\r\n                    }\r\n                    if(layerData.properties.regionOffset) {\r\n                        regionId+= layerData.properties.regionOffset;\r\n                    }\r\n                }\r\n                regionMap[realX] = regionId;\r\n                if (this.isHalfTile()) {\r\n                    regionMap[realX + 1] = regionId;\r\n                    regionMap[realX + width] = regionId;\r\n                    regionMap[realX + width + 1] = regionId;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupMapLevelChange = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('toLevel')) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._mapLevelChangeLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['mapLevelChange']);\r\n        }\r\n        \r\n        let levelChangeMap = this._mapLevelChange[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let toLevel = parseInt(layerData.properties.toLevel);\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                levelChangeMap[realX] = toLevel;\r\n                if (this.isHalfTile()) {\r\n                    levelChangeMap[realX + 1] = toLevel;\r\n                    levelChangeMap[realX + width] = toLevel;\r\n                    levelChangeMap[realX + width + 1] = toLevel;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupPositionHeightChange = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('floorHeight')) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._positionHeightChangeLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['positionHeightChange']);\r\n        }\r\n        \r\n        let positionHeightChangeMap = this._positionHeightChange[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let toLevel = parseInt(layerData.properties.floorHeight);\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                positionHeightChangeMap[realX] = toLevel;\r\n                if (this.isHalfTile()) {\r\n                    positionHeightChangeMap[realX + 1] = toLevel;\r\n                    positionHeightChangeMap[realX + width] = toLevel;\r\n                    positionHeightChangeMap[realX + width + 1] = toLevel;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupTileFlags = function() {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n    \r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.tileFlags) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._tileFlagsLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['tileFlags']);\r\n        }\r\n        \r\n        let tileFlagMap = this._tileFlags[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let tileFlags = 0;\r\n                let tileId = TiledManager.extractTileId(layerData, x);\r\n                let tileset = this._getTileset(tileId);\r\n                if(tileset && tileset.tileproperties) {\r\n                    let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                    if(tileData) {\r\n                        tileFlags = this._getTileFlags(tileData);\r\n                    }\r\n                }\r\n                tileFlagMap[realX] = this._combineFlags(tileFlagMap[realX], tileFlags);\r\n                if (this.isHalfTile()) {\r\n                    tileFlagMap[realX + 1] = this._combineFlags(tileFlagMap[realX + 1], tileFlags);\r\n                    tileFlagMap[realX + width] = this._combineFlags(tileFlagMap[realX + width], tileFlags);\r\n                    tileFlagMap[realX + width + 1] = this._combineFlags(tileFlagMap[realX + width + 1], tileFlags);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._getTileFlags = function(tileData) {\r\n    let flags = []\r\n    let flagNames = TiledManager.getFlagNames()\r\n    flagNames.forEach(prop => {\r\n        let property = 'flagIs' + prop.slice(0, 1).toUpperCase() + prop.slice(1)\r\n        if(tileData[property]) {\r\n            let [group, bit] = TiledManager.getFlagLocation(prop)\r\n            for(let i = flags.length; i <= group; i++) {\r\n                flags.push(0)\r\n            }\r\n            flags[group]|= bit\r\n        }\r\n    })\r\n    return flags.length > 0 ? flags : 0\r\n}\r\n\r\nGame_Map.prototype._combineFlags = function (source, target) {\r\n    source = source ? source.slice(0) : []\r\n    for(let i = 0; i < target.length; i++) {\r\n        if(!source.length <= i) {\r\n            source.push(i)\r\n        }\r\n        source[i]|= target[i];\r\n    }\r\n    return source;\r\n}\r\n\r\nGame_Map.prototype._setupTiledEvents = function () {\r\n    for (let layerData of this.tiledData.layers) {\r\n        if (layerData.type !== \"objectgroup\") {\r\n            continue;\r\n        }\r\n\r\n        for (let object of layerData.objects) {\r\n            if (!object.properties) {\r\n                continue;\r\n            }\r\n\r\n            if(object.properties.waypoint) {\r\n                let x = object.x / this.tileWidth();\r\n                let y = object.y / this.tileHeight();\r\n                if(pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\r\n                    x = Math.floor(x);\r\n                    y = Math.floor(y);\r\n                }\r\n                this._waypoints[object.properties.waypoint] = {x, y}\r\n                continue;\r\n            }\r\n\r\n            if (!object.properties.eventId && !object.properties.vehicle) {\r\n                continue;\r\n            }\r\n\r\n            let event;\r\n\r\n            if(!!object.properties.vehicle) {\r\n                event = this.vehicle(object.properties.vehicle);\r\n                this._vehicles.push(object.properties.vehicle);\r\n            } else {\r\n                let eventId = parseInt(object.properties.eventId);\r\n                event = this._events[eventId];\r\n            }\r\n            if (!event) {\r\n                continue;\r\n            }\r\n            let x = object.x / this.tileWidth() - this._offsets.x;\r\n            let y = object.y / this.tileHeight() - this._offsets.y;\r\n            if(pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\r\n                x = Math.floor(x);\r\n                y = Math.floor(y);\r\n            }\r\n            if (this.isHalfTile()) {\r\n                x += 1;\r\n                y += 1;\r\n            }\r\n            if(!!object.properties.vehicle) {\r\n                event.loadSystemSettings();\r\n                event.setLocation(this.mapId(), x, y);\r\n            } else {\r\n                event.locate(x, y);\r\n            }\r\n\t\t\tevent._tiledProperties = object.properties;\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype.isHalfTile = function () {\r\n    return pluginParams[\"Half-tile movement\"].toLowerCase() === \"true\";\r\n};\r\n\r\nGame_Map.prototype._getTileset = function(tileId) {\r\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\r\n        let tileset = this.tiledData.tilesets[idx];\r\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\r\n            return tileset;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nGame_Map.prototype.tileWidth = function () {\r\n    let tileWidth = this.tiledData.tilewidth;\r\n    if (this.isHalfTile()) {\r\n        tileWidth /= 2;\r\n    }\r\n    return tileWidth;\r\n};\r\n\r\nGame_Map.prototype.tileHeight = function () {\r\n    let tileHeight = this.tiledData.tileheight;\r\n    if (this.isHalfTile()) {\r\n        tileHeight /= 2;\r\n    }\r\n    return tileHeight;\r\n};\r\n\r\nGame_Map.prototype.width = function () {\r\n    let width = this.tiledData.width;\r\n    if (this.isHalfTile()) {\r\n        width *= 2;\r\n    }\r\n    return width;\r\n};\r\n\r\nGame_Map.prototype.height = function () {\r\n    let height = this.tiledData.height;\r\n    if (this.isHalfTile()) {\r\n        height *= 2;\r\n    }\r\n    return height;\r\n};\r\n\r\nlet _regionId = Game_Map.prototype.regionId;\r\nGame_Map.prototype.regionId = function (x, y, allIds = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _regionId.call(this, x, y);\r\n    }\r\n\r\n    let index = Math.floor(x) + this.width() * Math.floor(y);\r\n    let regionMap = this._regions[this.currentMapLevel];\r\n    let regionLayer = this._regionsLayers[this.currentMapLevel];\r\n    \r\n    let regionValue = regionMap.main[index];\r\n    let regionValues = [regionValue];\r\n\r\n    if(regionLayer && regionLayer.length > 0) {\r\n        for(let idx = 0; idx < regionLayer.length; idx++) {\r\n            let layerId = regionLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'regions');\r\n            if(!hideData) {\r\n                if(allIds) {\r\n                    regionValues.push(regionMap[layerId][index]);\r\n                } else {\r\n                    regionValue = regionMap[layerId][index];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return allIds ? regionValues : regionValue;\r\n};\r\n\r\nGame_Map.prototype.regionIds = function (x, y) {\r\n    return this.regionId(x, y, true);\r\n}\r\n\r\nGame_Map.prototype.getMapLevels = function() {\r\n    let levels = this._levels.slice(0);\r\n    levels.sort((a, b) => {\r\n        return a - b;\r\n    });\r\n    return levels;\r\n}\r\n\r\nlet _checkPassage = Game_Map.prototype.checkPassage;\r\nGame_Map.prototype.checkPassage = function (x, y, bit, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _checkPassage.call(this, x, y, d);\r\n    }\r\n    if(level === false) {\r\n        level = this._currentMapLevel;\r\n    }\r\n    let index = x + this.width() * y;\r\n    let arrows = this._arrowCollisionMap[level];\r\n    let arrowLayer = this._arrowCollisionMapLayers[level];\r\n    let arrowValue = arrows.main[index];\r\n    \r\n    if(render && arrows[render]) {\r\n        arrowValue = arrows[render][index];\r\n    } else if(arrowLayer && arrowLayer.length > 0) {\r\n        for(let idx = 0; idx < arrowLayer.length; idx++) {\r\n            let layerId = arrowLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\r\n            if(!hideData) {\r\n                arrowValue&= arrows[layerId][index];\r\n            }\r\n        }\r\n    }\r\n\r\n    return (arrowValue & bit) > 0\r\n}\r\n\r\nGame_Map.prototype.renderPassage = function (x, y, bit, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._arrowCollisionMap[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.checkPassage(x, y, bit, render, level);\r\n}\r\n\r\nGame_Map.prototype.getPassageLayers = function(level) {\r\n    return this._arrowCollisionMapLayers[level].slice(0);\r\n}\r\n\r\nlet _isPassable = Game_Map.prototype.isPassable;\r\nGame_Map.prototype.isPassable = function (x, y, d, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isPassable.call(this, x, y, d);\r\n    }\r\n    if(level === false) {\r\n        level = this._currentMapLevel;\r\n    }\r\n\r\n    if(!this.checkPassage(x, y, (1 << (d / 2 - 1)) & 0x0f, render)) {\r\n        return false;\r\n    }\r\n    \r\n    let index = x + this.width() * y;\r\n    let collisionMap = this._collisionMap[level];\r\n    let collisionLayer = this._collisionMapLayers[level];\r\n    let collisionValue = collisionMap.main[index]\r\n    \r\n    if(render && collisionMap[render]) {\r\n        collisionValue = collisionMap[render][index];\r\n    } else if(collisionLayer && collisionLayer.length > 0) {\r\n        for(let idx = 0; idx < collisionLayer.length; idx++) {\r\n            let layerId = collisionLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\r\n            if(!hideData) {\r\n                collisionValue|= collisionMap[layerId][index];\r\n            }\r\n        }\r\n    }\r\n\r\n    return collisionValue === 0;\r\n};\r\n\r\nGame_Map.prototype.renderIsPassable = function (x, y, d, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._collisionMap[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.isPassable(x, y, d, render, level);\r\n}\r\n\r\nGame_Map.prototype.getIsPassableLayers = function(level) {\r\n    return this._collisionMapLayers[level].slice(0);\r\n}\r\n\r\nGame_Map.prototype.checkMapLevelChanging = function (x, y) {\r\n    let mapLevelChange = this._mapLevelChange[this.currentMapLevel];\r\n    let mapLevelChangeLayer = this._mapLevelChangeLayers[this.currentMapLevel];\r\n    let index = y * this.width() + x;\r\n    let mapLevelChangeValue = mapLevelChange.main[index]\r\n    if(mapLevelChangeLayer.length > 0) {\r\n        for(let idx = 0; idx < mapLevelChangeLayer.length; idx++) {\r\n            let layerId = mapLevelChangeLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'levelChanges');\r\n            if(!hideData) {\r\n                mapLevelChangeValue = mapLevelChange[layerId][index];\r\n            }\r\n        }\r\n    }\r\n    if (mapLevelChangeValue < 0) {\r\n        return false;\r\n    }\r\n    let oldValue = this.currentMapLevel;\r\n    this.currentMapLevel = mapLevelChangeValue;\r\n    TiledManager.triggerListener(this, 'levelchanged', {\r\n        oldLevel: oldValue,\r\n        newLevel: mapLevelChangeValue\r\n    })\r\n    return true;\r\n};\r\n\r\nGame_Map.prototype.checkPositionHeight = function (x, y) {\r\n    let positionHeightChange = this._positionHeightChange[this.currentMapLevel];\r\n    let positionHeightChangeLayer = this._positionHeightChangeLayers[this.currentMapLevel];\r\n    let index = y * this.width() + x;\r\n    let positionHeightChangeValue = positionHeightChange.main[index]\r\n    if(positionHeightChangeLayer.length > 0) {\r\n        for(let idx = 0; idx < positionHeightChangeLayer.length; idx++) {\r\n            let layerId = positionHeightChangeLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'positionHeightChanges');\r\n            if(!hideData) {\r\n                positionHeightChangeValue = positionHeightChange[layerId][index];\r\n            }\r\n        }\r\n    }\r\n    return positionHeightChangeValue;\r\n};\r\n\r\nGame_Map.prototype.getTileFlags = function (x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    let index = x + this.width() * y;\r\n    let tileFlags = this._tileFlags[level];\r\n    let tileFlagsLayer = this._tileFlagsLayers[level];\r\n    let tileFlagsValue = (tileFlags.main[index] ? tileFlags.main[index].slice(0) : []);\r\n\r\n    if(render && tileFlags[render]) {\r\n        tileFlagsValue = (tileFlags[render][index] ? tileFlags[render][index].slice(0) : []);\r\n    } else if(tileFlagsLayer && tileFlagsLayer.length > 0) {\r\n        for(let idx = 0; idx < tileFlagsLayer.length; idx++) {\r\n            let layerId = tileFlagsLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'tileFlags');\r\n            if(!hideData && tileFlags[layerId][index]) {\r\n                tileFlagsValue = this._combineFlags(tileFlagsValue, tileFlags[layerId][index])\r\n            }\r\n        }\r\n    }\r\n    return tileFlagsValue\r\n}\r\n\r\nGame_Map.prototype.renderTileFlags = function (x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._tileFlags[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.getTileFlags(x, y, render, level);\r\n}\r\n\r\nGame_Map.prototype.checkHasTileFlag = function (x, y, flag, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(typeof flag === 'string') {\r\n        flag = TiledManager.getFlag(flag)\r\n    }\r\n    let bit = (1 << (flag % 16)) & 0xffff;\r\n    let group = Math.floor(flag / 16);\r\n    let tileFlagsValue = this.getTileFlags(x, y, render, level);\r\n    \r\n    return (tileFlagsValue[group] & bit) > 0\r\n}\r\n\r\nGame_Map.prototype.renderHasTileFlag = function (x, y, flag, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._tileFlags[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.checkHasTileFlag(x, y, flag, render, level);\r\n}\r\n\r\nlet _isBoatPassable = Game_Map.prototype.isBoatPassable\r\nGame_Map.prototype.isBoatPassable = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isBoatPassable.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'boat', render, level);\r\n};\r\n\r\nGame_Map.prototype.renderIsBoatPassable = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isBoatPassable(x, y, render, level);\r\n}\r\n\r\nlet _isShipPassable = Game_Map.prototype.isShipPassable\r\nGame_Map.prototype.isShipPassable = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isShipPassable.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'ship', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsShipPassable = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isShipPassable(x, y, render, level);\r\n}\r\n\r\nlet _isAirshipLandOk = Game_Map.prototype.isAirshipLandOk\r\nGame_Map.prototype.isAirshipLandOk = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isAirshipLandOk.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'airship', render) && this.checkPassage(x, y, 0x0f, render);\r\n};\r\n\r\nGame_Map.prototype.renderIsAirshipLandOk = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isAirshipLandOk(x, y, render, level);\r\n}\r\n\r\nlet _isLadder = Game_Map.prototype.isLadder\r\nGame_Map.prototype.isLadder = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isLadder.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ladder', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsLadder = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isLadder(x, y, render, level);\r\n}\r\n\r\nlet _isBush = Game_Map.prototype.isBush\r\nGame_Map.prototype.isBush = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isBush.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'bush', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsBush = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isBush(x, y, render, level);\r\n}\r\n\r\nlet _isCounter = Game_Map.prototype.isCounter\r\nGame_Map.prototype.isCounter = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isCounter.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'counter', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsCounter = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isCounter(x, y, render, level);\r\n}\r\n\r\nlet _isDamageFloor = Game_Map.prototype.isDamageFloor\r\nGame_Map.prototype.isDamageFloor = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isDamageFloor.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'damage', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsDamageFloor = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isDamageFloor(x, y, render, level);\r\n}\r\n\r\nGame_Map.prototype.isSlipperyFloor = function(x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ice', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsSlipperyFloor = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isSlipperyFloor(x, y, render, level);\r\n}\r\n\r\nlet _isHealFloor = Game_Map.prototype.isHealFloor\r\nGame_Map.prototype.isHealFloor = function(x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'heal', render);\r\n};\r\n\r\nGame_Map.prototype.getLayerProperties = function(layer = -1, ignoreHidden = true) {\r\n\tif(layer > -1) {\r\n\t\tif(this.tiledData.layers[layer] && this.tiledData.layers[layer].properties) {\r\n\t\t\treturn Object.assign({}, this.tiledData.layers[layer].properties);\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\tlet layerProperties = {};\r\n\tthis.tiledData.layers.forEach((layerData, i) => {\r\n\t\tif(layerData && layerData.properties) {\r\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData, 'collisions')) {\r\n                layerProperties[i] = Object.assign({}, layerData.properties);\r\n            }\r\n\t\t}\r\n\t});\r\n\treturn layerProperties;\r\n}\r\n\r\nGame_Map.prototype.getTileProperties = function(x, y, layer = -1, ignoreHidden = true) {\r\n    let index = x + this.width() * y;\r\n    \r\n\tif(layer > -1) {\r\n\t\tif(this.tiledData.layers[layer] && (this.tiledData.layers[layer].data || this.tiledData.layers[layer].chunks)) {\r\n\t\t\tlet tileId = TiledManager.extractTileId(this.tiledData.layers[layer], index);\r\n\t\t\tlet tileset = this._getTileset(tileId);\r\n\t\t\tif(tileset && tileset.tileproperties) {\r\n\t\t\t\treturn Object.assign({}, tileset.tileproperties[tileId - tileset.firstgid]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\tlet tileProperties = {};\r\n\tthis.tiledData.layers.forEach((layerData, i) => {\r\n\t\tif(layerData && (layerData.data || layerData.chunks) && layerData.properties) {\r\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData)) {\r\n                let props = this.getTileProperties(x, y, i);\r\n                if(Object.keys(props).length > 0) {\r\n                    tileProperties[i] = props;\r\n                }\r\n            }\r\n\t\t}\r\n\t});\r\n\treturn tileProperties;\r\n}\r\n\r\n/* Custom vehicles */\r\nlet _createVehicles = Game_Map.prototype.createVehicles\r\nGame_Map.prototype.createVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        _createVehicles.call(this);\r\n    }\r\n    this._vehicles = [];\r\n\r\n};\r\n\r\nlet _refreshVehicles = Game_Map.prototype.refereshVehicles\r\nGame_Map.prototype.refereshVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _refreshVehicles.call(this);\r\n    }\r\n    return TiledManager.refreshVehicles(this._vehicles);\r\n};\r\n\r\nlet _vehicles = Game_Map.prototype.vehicles\r\nGame_Map.prototype.vehicles = function(getNames = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _vehicles.call(this);\r\n    }\r\n    if(getNames) {\r\n        return this._vehicles;\r\n    }\r\n    return TiledManager.getAllVehicles(this._vehicles);\r\n};\r\n\r\nlet _vehicle = Game_Map.prototype.vehicle\r\nGame_Map.prototype.vehicle = function(type) {\r\n    if (!this.isTiledMap()) {\r\n        return _vehicles.call(this, type);\r\n    }\r\n    return TiledManager.getVehicle(type);\r\n}\r\n\r\nlet _boat = Game_Map.prototype.boat\r\nGame_Map.prototype.boat = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _boat.call(this);\r\n    }\r\n    return TiledManager.getVehicle('boat');\r\n};\r\n\r\nlet _ship = Game_Map.prototype.ship\r\nGame_Map.prototype.ship = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _ship.call(this);\r\n    }\r\n    return TiledManager.getVehicle('ship');\r\n};\r\n\r\nlet _airship = Game_Map.prototype.airship\r\nGame_Map.prototype.airship = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _airship.call(this);\r\n    }\r\n    return TiledManager.getVehicle('airship');\r\n};\r\n\r\nlet _updateVehicles = Game_Map.prototype.updateVehicles\r\nGame_Map.prototype.updateVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        _updateVehicles.call(this);\r\n    }\r\n    TiledManager.updateVehicles(this._vehicles);\r\n};\r\n\r\nGame_Map.prototype.waypoint = function(waypoint) {\r\n    if(this._waypoints[waypoint]) {\r\n        return this._waypoints[waypoint];\r\n    }\r\n    return null;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Map.js","\r\nGame_Screen.prototype.startFlashForHeal = function() {\r\n    this.startFlash([128, 192, 255, 128], 8);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Screen.js","let pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nGame_CharacterBase.prototype.screenZ = function () {\r\n    if (this._priorityType == 0) {\r\n        return parseInt(pluginParams[\"Z - Below Player\"]);\r\n    }\r\n    if (this._priorityType == 2) {\r\n        return parseInt(pluginParams[\"Z - Above Player\"]);\r\n    }\r\n    return parseInt(pluginParams[\"Z - Player\"]);\r\n};\r\n\r\nlet _distancePerFrame = Game_CharacterBase.prototype.distancePerFrame;\r\nGame_CharacterBase.prototype.distancePerFrame = function () {\r\n    let distance = _distancePerFrame.call(this);\r\n    return distance * (48 / Math.min($gameMap.tileWidth(), $gameMap.tileHeight()));\r\n};\r\n\r\nlet _refreshBushDepth = Game_CharacterBase.prototype.refreshBushDepth;\r\nGame_CharacterBase.prototype.refreshBushDepth = function() {\r\n    if(!this.hasOwnProperty('_bushDepth')) {\r\n        this._bushDepth = 0;\r\n    }\r\n    if(!$gameMap.isTiledMap() || $gameMap.isTiledInitialized()) {\r\n        _refreshBushDepth.call(this);\r\n    } else {\r\n        $gameMap.setRefreshDepth(this);\r\n    }\r\n};\r\n\r\nlet _updateMove = Game_CharacterBase.prototype.updateMove;\r\nGame_CharacterBase.prototype.updateMove = function() {\r\n    var hori = (this._realX > this._x ? 4 : (this._realX < this._x ? 6 : 0))\r\n    var vert = (this._realY > this._y ? 8 : (this._realY < this._y ? 2 : 0))\r\n    var d = hori + vert\r\n    _updateMove.call(this);\r\n    if(!this.isMoving() || pluginParams[\"Position Height - Always Check On Move Update\"].toLowerCase() === \"true\") {\r\n        let newLocationHeight = $gameMap.checkPositionHeight(this._x, this._y);\r\n        if(newLocationHeight > -1) {\r\n            this._locationHeight = newLocationHeight;\r\n        }\r\n    }\r\n    if(!this.isMoving()) {\r\n        TiledManager.triggerListener(this, 'stopmovement', {\r\n            direction: d\r\n        })\r\n        if($gameMap.isSlipperyFloor(this._x, this._y)) {\r\n            TiledManager.triggerListener(this, 'slipperyfloor', {\r\n                direction: d\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nGame_CharacterBase.prototype.locationHeight = function() {\r\n\treturn this._locationHeight || 0\r\n}\r\n\r\nlet _isCollideWithVehicles = Game_CharacterBase.prototype.isCollidedWithVehicles\r\nGame_CharacterBase.prototype.isCollidedWithVehicles = function(x, y) {\r\n    if(!_isCollideWithVehicles.call(this, x, y)) {\r\n        let vehicles = $gameMap.vehicles();\r\n        for(let i = 0; i < vehicles.length; i++) {\r\n            if(!(vehicles[i].vehicleData && (!vehicles[i].vehicleData.hasOwnProperty('hasCollision') || vehicles[i].vehicleData.hasCollision === 'true' || vehicles[i].vehicleData.hasCollision === true)) || vehicles[i].posNt(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGame_CharacterBase.prototype.updateScroll = function(lastScrolledX, lastScrolledY) {\r\n    var x1 = lastScrolledX;\r\n    var y1 = lastScrolledY;\r\n    var x2 = this.scrolledX();\r\n    var y2 = this.scrolledY();\r\n    if (y2 > y1 && y2 > this.centerY()) {\r\n        $gameMap.scrollDown(y2 - y1);\r\n    }\r\n    if (x2 < x1 && x2 < this.centerX()) {\r\n        $gameMap.scrollLeft(x1 - x2);\r\n    }\r\n    if (x2 > x1 && x2 > this.centerX()) {\r\n        $gameMap.scrollRight(x2 - x1);\r\n    }\r\n    if (y2 < y1 && y2 < this.centerY()) {\r\n        $gameMap.scrollUp(y1 - y2);\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_CharacterBase.js","// Constants\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nlet _checkFloorEffect = Game_Actor.prototype.checkFloorEffect;\r\nGame_Actor.prototype.checkFloorEffect = function() {\r\n    _checkFloorEffect.call(this);\r\n    if ($gamePlayer.isOnHealFloor()) {\r\n        this.executeFloorHeal();\r\n    }\r\n}\r\n\r\nGame_Actor.prototype.executeFloorHeal = function() {\r\n    var heal = Math.floor(this.basicFloorHeal() * this.fdr);\r\n    heal = Math.min(heal, this.maxFloorHeal());\r\n    this.gainHp(heal);\r\n    if (heal > 0) {\r\n        this.performMapHeal();\r\n    }\r\n};\r\n\r\nGame_Actor.prototype._getFloorHPCalculation = function(type = 'damage') {\r\n    let typeName = type.slice(0, 1).toUpperCase() + type.slice(1).toLowerCase();\r\n    let floorHP = [];\r\n    for(var layerId = 0; layerId < $gameMap.tiledData.layers; layerId++) {\r\n        let layerData = $gameMap.tiledData.layers[layerId];\r\n        if(!layerData.properties) {\r\n            return;\r\n        }\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        if(level !== $gameMap.currentMapLevel) {\r\n            return;\r\n        }\r\n        if(TiledManager.checkLayerHidden(layerData)) {\r\n            return;\r\n        }\r\n        let tile = Game_Map.prototype.getTileProperties(x, y, layerId);\r\n        if(!!tile.properties && !!tile.properties['floor' + typeName]) {\r\n            floorHP.push(layerData.properties['floor' + typeName]);\r\n        }\r\n    }\r\n    let actualHP = 0;\r\n    switch((pluginParams[\"Floor HP Calculation\"] || '').toLowerCase()) {\r\n        case 'sum':\r\n            floorHP.forEach(hp => {\r\n                actualHP+= hp;\r\n            })\r\n            break;\r\n        case 'average':\r\n            floorHP.forEach(hp => {\r\n                actualHP+= hp;\r\n            })\r\n            actualHP = Math.round(actualHP / floorHP.length);\r\n            break;\r\n        case 'top':\r\n        default:\r\n            actualHP = floorHP.pop();\r\n            break;\r\n    }\r\n    return actualHP;\r\n}\r\n\r\nGame_Actor.prototype.basicFloorDamage = function() {\r\n    let actualDamage = this._getFloorHPCalculation('damage');\r\n    return actualDamage || parseInt(pluginParams[\"Basic Floor Damage\"]) || 10;\r\n};\r\n\r\nGame_Actor.prototype.basicFloorHeal = function() {\r\n    let actualHeal = this._getFloorHPCalculation('heal');\r\n    return actualHeal || parseInt(pluginParams[\"Basic Floor Heal\"]) || 10;\r\n};\r\n\r\nGame_Actor.prototype.maxFloorHeal = function() {\r\n    return Math.max(this.mhp - this.hp, 0);\r\n};\r\n\r\nGame_Actor.prototype.performMapHeal = function() {\r\n    if (!$gameParty.inBattle()) {\r\n        $gameScreen.startFlashForHeal();\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Actor.js","let _initMembers = Game_Player.prototype.initMembers;\r\nGame_Player.prototype.initMembers = function() {\r\n    _initMembers.call(this);\r\n    this._newWaypoint = '';\r\n}\r\n\r\nlet _checkEventTriggerHere = Game_Player.prototype.checkEventTriggerHere;\r\nGame_Player.prototype.checkEventTriggerHere = function (triggers) {\r\n    _checkEventTriggerHere.call(this, triggers);\r\n    this._checkMapLevelChangingHere();\r\n};\r\n\r\nGame_Player.prototype._checkMapLevelChangingHere = function () {\r\n    let oldLevel = $gameMap.currentMapLevel;\r\n    $gameMap.checkMapLevelChanging(this.x, this.y);\r\n    TiledManager.triggerListener(this, 'levelchanged', {\r\n        oldLevel,\r\n        newLevel: $gameMap.currentMapLevel\r\n    })\r\n};\r\n\r\nGame_Player.prototype.isOnHealFloor = function() {\r\n    return $gameMap.isHealFloor(this.x, this.y) && !this.isInAirship();\r\n};\r\n\r\nlet _getOnVehicle = Game_Player.prototype.getOnVehicle\r\nGame_Player.prototype.getOnVehicle = function() {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _getOnVehicle.call(this);\r\n    }\r\n    var direction = this.direction();\r\n    var x1 = this.x;\r\n    var y1 = this.y;\r\n    var x2 = $gameMap.roundXWithDirection(x1, direction);\r\n    var y2 = $gameMap.roundYWithDirection(y1, direction);\r\n    if ($gameMap.airship().pos(x1, y1)) {\r\n        this._vehicleType = 'airship';\r\n    } else if ($gameMap.ship().pos(x2, y2)) {\r\n        this._vehicleType = 'ship';\r\n    } else if ($gameMap.boat().pos(x2, y2)) {\r\n        this._vehicleType = 'boat';\r\n    } else {\r\n        let vehicles = $gameMap.vehicles(true);\r\n        vehicles.forEach(vehicleName => {\r\n            let vehicle = $gameMap.vehicle(vehicleName);\r\n            if(vehicle.vehicleData) {\r\n                if(!vehicle.vehicleData.hasOwnProperty('hasCollision') || vehicle.vehicleData.hasCollision === 'true' || vehicle.vehicleData.hasCollision === true) {\r\n                    if(vehicle.pos(x2, y2)) {\r\n                        this._vehicleType = vehicleName;\r\n                    }\r\n                } else {\r\n                    if(vehicle.pos(x1, y1)) {\r\n                        this._vehicleType = vehicleName;\r\n                    }\r\n                }\r\n            } else if(vehicle.pos(x2, y2)) {\r\n                this._vehicleType = vehicleName;\r\n            }\r\n        })\r\n    }\r\n    if (this.isInVehicle()) {\r\n        this._vehicleGettingOn = true;\r\n        if (!this.isInAirship()) {\r\n            this.forceMoveForward();\r\n        }\r\n        this.gatherFollowers();\r\n    }\r\n    return this._vehicleGettingOn;\r\n};\r\n\r\nlet _isInVehicle = Game_Player.prototype.isInVehicle\r\nGame_Player.prototype.isInVehicle = function() {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _isInVehicle.call(this);\r\n    }\r\n    return $gameMap.vehicles(true).indexOf(this._vehicleType) > -1;\r\n};\r\n\r\nlet _reserveTransfer = Game_Player.prototype.reserveTransfer\r\nGame_Player.prototype.reserveTransfer = function(mapId, x, y, d, fadeType, waypoint = '') {\r\n    _reserveTransfer.call(this, mapId, x, y, d, fadeType);\r\n    this._newWaypoint = waypoint;\r\n}\r\n\r\nGame_Player.prototype.performTransfer = function() {\r\n    if (this.isTransferring()) {\r\n        this.setDirection(this._newDirection);\r\n        if (this._newMapId !== $gameMap.mapId() || this._needsMapReload) {\r\n            $gameMap.setup(this._newMapId);\r\n            this._needsMapReload = false;\r\n        }\r\n        let newX = this._newX;\r\n        let newY = this._newY;\r\n        if($gameMap.isTiledMap()) {\r\n            if(this._newWaypoint) {\r\n                let waypoint = $gameMap.waypoint(this._newWaypoint);\r\n                if(waypoint) {\r\n                    newX = waypoint.x;\r\n                    newY = waypoint.y;\r\n                }\r\n            }\r\n            let offsets = $gameMap.offsets();\r\n            if(offsets && offsets.x && offsets.y) {\r\n                newX-= offsets.x;\r\n                newY-= offsets.y;\r\n            }\r\n        }\r\n        this.locate(newX, newY);\r\n        this.refresh();\r\n        this.clearTransferInfo();\r\n    }\r\n};\r\n\r\nlet _clearTransferInfo = Game_Player.prototype.clearTransferInfo;\r\nGame_Player.prototype.clearTransferInfo = function() {\r\n    _clearTransferInfo.call(this);\r\n    this._newWaypoint = '';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Player.js","let _initialize = Game_Vehicle.prototype.initialize\r\nGame_Vehicle.prototype.initialize = function(type, vehicleData = false) {\r\n    if(vehicleData) {\r\n        this.vehicleData = vehicleData;\r\n    }\r\n    _initialize.call(this, type);\r\n};\r\n\r\nlet _initMoveSpeed = Game_Vehicle.prototype.initMoveSpeed\r\nGame_Vehicle.prototype.initMoveSpeed = function() {\r\n    _initMoveSpeed.call(this);\r\n    if(!!this.vehicleData && this.vehicleData.moveSpeed) {\r\n        this.setMoveSpeed(parseInt(this.vehicleData.moveSpeed));\r\n    }\r\n};\r\n\r\nlet _vehicle = Game_Vehicle.prototype.vehicle\r\nGame_Vehicle.prototype.vehicle = function() {\r\n    var vehicleData = _vehicle.call(this);\r\n    if(!vehicleData && !!this.vehicleData) {\r\n        return this.vehicleData;\r\n    }\r\n    return vehicleData;\r\n};\r\n\r\nlet _isMapPassable = Game_Vehicle.prototype.isMapPassable\r\nGame_Vehicle.prototype.isMapPassable = function(x, y, d, render = false) {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _isMapPassable.call(this, x, y, d);\r\n    }\r\n    var x2 = $gameMap.roundXWithDirection(x, d);\r\n    var y2 = $gameMap.roundYWithDirection(y, d);\r\n    if (this.isBoat()) {\r\n        return $gameMap.isBoatPassable(x2, y2, render);\r\n    } else if (this.isShip()) {\r\n        return $gameMap.isShipPassable(x2, y2, render);\r\n    } else if (this.isAirship()) {\r\n        return true;\r\n    } else {\r\n        var vehicleData = this.vehicle();\r\n        if(!!vehicleData) {\r\n            if(!!vehicleData.tileFlag) {\r\n                return $gameMap.checkHasTileFlag(x2, y2, vehicleData.tileFlag, render);\r\n            }\r\n            if(vehicleData.tileFlag === '') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\r\nGame_Vehicle.prototype.loadSystemSettings = function() {\r\n    var vehicle = (window.$dataSystem ? this.vehicle() : null);\r\n    if(vehicle) {\r\n        this._mapId = vehicle.startMapId;\r\n        this.setPosition(vehicle.startX, vehicle.startY);\r\n        this.setImage(vehicle.characterName, vehicle.characterIndex);\r\n    }\r\n};\r\n\r\nlet _resetDirection = Game_Vehicle.prototype.resetDirection\r\nGame_Vehicle.prototype.resetDirection = function() {\r\n    if(!!this.vehicleData && !!this.vehicleData.direction) {\r\n        this.setDirection(parseInt(this.vehicleData.direction));\r\n    } else {\r\n        _resetDirection.call(this)\r\n    }\r\n};\r\n\r\nGame_Vehicle.prototype.getOff = function() {\r\n    this._driving = false;\r\n    this.setWalkAnime(false);\r\n    this.setStepAnime(false);\r\n    if(!this.vehicleData || !this.vehicleData.hasOwnProperty('resetDirection') || this.vehicleData.resetDirection === 'true') {\r\n        this.resetDirection();\r\n    }\r\n    $gameSystem.replayWalkingBgm();\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Vehicle.js","let _pluginCommand = Game_Interpreter.prototype.pluginCommand\r\nGame_Interpreter.prototype.pluginCommand = function(command, args) {\r\n    _pluginCommand.call(this, command, args);\r\n    TiledManager.pluginCommand.call(this, command, args);\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Game_Interpreter.js","let _update = Sprite_Character.prototype.update\r\nSprite_Character.prototype.update = function() {\r\n\t_update.call(this);\r\n\tthis.locationHeight = this._character.locationHeight();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Sprite_Character.js","import { TiledTilemap } from \"./TiledTilemap\";\r\n\r\nlet _initialize = Spriteset_Battle.prototype.initialize\r\nSpriteset_Battle.prototype.initialize = function() {\r\n    this._parallaxContainers = {};\r\n    _initialize.call(this);\r\n}\r\n\r\nlet _createTilemap = Spriteset_Map.prototype.createTilemap;\r\nSpriteset_Map.prototype.createTilemap = function () {\r\n    if (!$gameMap.isTiledMap()) {\r\n        _createTilemap.call(this);\r\n        return;\r\n    }\r\n    this._tilemap = new TiledTilemap($gameMap.tiledData);\r\n    this._tilemap.horizontalWrap = $gameMap.isLoopHorizontal();\r\n    this._tilemap.verticalWrap = $gameMap.isLoopVertical();\r\n    this.loadTileset();\r\n    this._baseSprite.addChild(this._tilemap);\r\n};\r\n\r\nlet _loadTileset = Spriteset_Map.prototype.loadTileset;\r\nSpriteset_Map.prototype.loadTileset = function () {\r\n    if (!$gameMap.isTiledMap()) {\r\n        _loadTileset.call(this);\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    for (let tileset of $gameMap.tiledData.tilesets) {\r\n        if(tileset.properties && tileset.properties.ignoreLoading) {\r\n            continue;\r\n        }\r\n        this._tilemap.bitmaps[i] = ImageManager.loadParserTileset(tileset.image, 0);\r\n        i++;\r\n    }\r\n    this._tilemap.refreshTileset();\r\n    this._tileset = $gameMap.tiledData.tilesets;\r\n};\r\n\r\nlet _update = Spriteset_Map.prototype.update;\r\nSpriteset_Map.prototype.update = function () {\r\n    _update.call(this);\r\n    //Disabed updateHideOnLevel, since it got moved to the general layer hide functions\r\n    //this._updateHideOnLevel();\r\n    this._updateHideOnSpecial();\r\n    this._tilemap.updateParallax();\r\n};\r\n\r\nSpriteset_Map.prototype.updateTileset = function () {\r\n    if (this._tileset !== $gameMap.tiledData.tilesets) {\r\n        this.loadTileset();\r\n    }\r\n};\r\n\r\nSpriteset_Map.prototype._updateHideOnLevel = function () {\r\n    this._tilemap.hideOnLevel($gameMap.currentMapLevel);\r\n};\r\n\r\nSpriteset_Map.prototype._updateHideOnSpecial = function () {\r\n    if($gamePlayer && $gameMap) {\r\n        this._tilemap.hideOnSpecial();\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Spriteset_Map.js"],"sourceRoot":""}