{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/AlphaFilter.js","webpack:///./src/DataManager.js","webpack:///./src/Game_Actor.js","webpack:///./src/Game_CharacterBase.js","webpack:///./src/Game_Interpreter.js","webpack:///./src/Game_Map.js","webpack:///./src/Game_Player.js","webpack:///./src/Game_Screen.js","webpack:///./src/Game_Vehicle.js","webpack:///./src/ImageManager.js","webpack:///./src/Sprite_Character.js","webpack:///./src/Sprite_TiledPriorityTile.js","webpack:///./src/Spriteset_Map.js","webpack:///./src/TiledManager.js","webpack:///./src/TiledMap/TiledMapImage.js","webpack:///./src/TiledMap/TiledMapLayer.js","webpack:///./src/TiledTileLayer.js","webpack:///./src/TiledTileRenderer.js","webpack:///./src/TiledTileShader.js","webpack:///./src/TiledTilemap/index.js","webpack:///./src/TilesetManager.js","webpack:///./src/index.js"],"names":["fragmentSrc","PIXI","filters","AlphaFilter","alpha","glShaderKey","uniforms","uAlpha","value","Filter","DataManager","_tempTiledData","_tiledLoaded","_loadMapData","loadMapData","mapId","call","loadTiledMapData","unloadTiledMapData","xhr","XMLHttpRequest","pluginParams","PluginManager","parameters","open","overrideMimeType","onreadystatechange","readyState","idx","status","responseText","JSON","parse","TiledManager","processTiledData","triggerListener","tiledLoaded","tilesRequired","tilesets","length","tileset","source","realTileset","TilesetManager","getTileset","Object","assign","firstgid","loadTileset","returnTileset","send","_isMapLoaded","isMapLoaded","defaultLoaded","_checkFloorEffect","Game_Actor","prototype","checkFloorEffect","$gamePlayer","isOnHealFloor","executeFloorHeal","heal","Math","floor","basicFloorHeal","fdr","min","maxFloorHeal","gainHp","performMapHeal","_getFloorHPCalculation","type","typeName","slice","toUpperCase","toLowerCase","floorHP","layerId","$gameMap","tiledData","layers","layerData","properties","level","parseInt","currentMapLevel","checkLayerHidden","tile","Game_Map","getTileProperties","x","y","push","actualHP","forEach","hp","round","pop","basicFloorDamage","actualDamage","actualHeal","max","mhp","$gameParty","inBattle","$gameScreen","startFlashForHeal","Game_CharacterBase","screenZ","_priorityType","_distancePerFrame","distancePerFrame","distance","tileWidth","tileHeight","_refreshBushDepth","refreshBushDepth","hasOwnProperty","_bushDepth","isTiledMap","isTiledInitialized","setRefreshDepth","_updateMove","updateMove","hori","_realX","_x","vert","_realY","_y","d","isMoving","newLocationHeight","checkPositionHeight","_locationHeight","direction","isSlipperyFloor","locationHeight","_isCollideWithVehicles","isCollidedWithVehicles","vehicles","i","vehicleData","hasCollision","posNt","updateScroll","lastScrolledX","lastScrolledY","x1","y1","x2","scrolledX","y2","scrolledY","centerY","scrollDown","centerX","scrollLeft","scrollRight","scrollUp","_pluginCommand","Game_Interpreter","pluginCommand","command","args","defineProperty","get","configurable","varID","_currentMapLevel","$gameVariables","set","setValue","_layers","_setup","setup","_tiledInitialized","_levels","_collisionMap","_arrowCollisionMap","_regions","_mapLevelChange","_positionHeightChange","_tileFlags","_collisionMapLayers","_arrowCollisionMapLayers","_regionsLayers","_mapLevelChangeLayers","_positionHeightChangeLayers","_tileFlagsLayers","_waypoints","_layerProperties","_camera","focus","data","$dataMap","width","height","_setupTiled","_refreshList","character","_setupLayers","_setLayerProperties","_initializeMapLevel","_setupCollision","_setupRegion","_setupMapLevelChange","_setupTileFlags","_setupTiledEvents","initializeMapProperties","_autoSize","_autoSizeBorder","_offsets","autoSize","border","offsets","initializeInfiniteMap","infinite","_setMapSize","minX","minY","maxX","maxY","layer","startx","starty","_cropInfiniteMap","isNaN","autoBorder","autoSizeBorder","split","offset","limit","forward","vertical","o","s","realO","lineEmpty","chunkIdx","chunks","chunk","empty","o2","coords","autoFunctions","layerProperties","transition","baseAlpha","opacity","minAlpha","minimumOpacity","isShown","transitionPhase","autoX","autoSpeedX","imageWidth","funcX","autoFunctionX","autoFunction","tFuncX","getAutoFunction","autoXFunction","both","Function","autoY","autoSpeedY","imageHeight","funcY","autoFunctionY","tFuncY","autoYFunction","_getLayerTilesets","props","size","Array","keys","tileId","extractTileId","tilesetId","_getTilesetId","indexOf","console","log","TiledMapImage","TiledMapLayer","id","_initializeMapLevelData","dataTypes","defaultData","dataType","defaultValue","typeData","_setupCollisionFull","_setupCollisionArrow","halfWidth","halfHeight","isHalfTile","collision","hasHideProperties","realX","ids","_getTileset","tileproperties","tileData","collisionUpLeft","collisionUpRight","collisionDownLeft","collisionDownRight","bit","arrowImpassable","arrowCollisionMap","realBit","arrowImpassableDown","arrowImpassableLeft","arrowImpassableRight","arrowImpassableUp","regionId","regionMap","regionOffset","levelChangeMap","toLevel","_setupPositionHeightChange","positionHeightChangeMap","floorHeight","tileFlags","tileFlagMap","_getTileFlags","_combineFlags","flags","flagNames","getFlagNames","prop","property","getFlagLocation","group","target","objects","object","processTiledObject","tilecount","ignoreLoading","tilewidth","tileheight","_regionId","allIds","index","regionLayer","regionValue","main","regionValues","hideData","regionIds","getMapLevels","levels","sort","a","b","_checkPassage","checkPassage","render","arrows","arrowLayer","arrowValue","renderPassage","getPassageLayers","_isPassable","isPassable","collisionMap","collisionLayer","collisionValue","renderIsPassable","getIsPassableLayers","checkMapLevelChanging","mapLevelChange","mapLevelChangeLayer","mapLevelChangeValue","oldValue","oldLevel","newLevel","positionHeightChange","positionHeightChangeLayer","positionHeightChangeValue","getTileFlags","tileFlagsLayer","tileFlagsValue","renderTileFlags","getTileFlagLayers","checkHasTileFlag","flag","getFlag","renderHasTileFlag","_isBoatPassable","isBoatPassable","renderIsBoatPassable","_isShipPassable","isShipPassable","renderIsShipPassable","_isAirshipLandOk","isAirshipLandOk","renderIsAirshipLandOk","_isLadder","isLadder","isValid","renderIsLadder","_isBush","isBush","renderIsBush","_isCounter","isCounter","renderIsCounter","_isDamageFloor","isDamageFloor","renderIsDamageFloor","renderIsSlipperyFloor","_isHealFloor","isHealFloor","getAllLayerProperties","ignoreHidden","tileProperties","_createVehicles","createVehicles","_vehicles","_refreshVehicles","refereshVehicles","refreshVehicles","getNames","getAllVehicles","_vehicle","vehicle","getVehicle","_boat","boat","_ship","ship","_airship","airship","_updateVehicles","updateVehicles","waypoint","_update","update","sceneActive","setLayerProperties","getLayerProperties","autoDuration","_battleback1Name","battleback1Name","tileProps","battleback","_battleback2Name","battleback2Name","_initMembers","Game_Player","initMembers","_newWaypoint","_checkEventTriggerHere","checkEventTriggerHere","triggers","_checkMapLevelChangingHere","isInAirship","_getOnVehicle","getOnVehicle","roundXWithDirection","roundYWithDirection","pos","_vehicleType","vehicleName","isInVehicle","_vehicleGettingOn","forceMoveForward","gatherFollowers","_gamePlayerTriggerTouchActionD2","triggerTouchActionD2","TouchInput","isTriggered","isInBoat","isInShip","getOffVehicle","checkEventTriggerThere","setupStartingEvent","_isInVehicle","_reserveTransfer","reserveTransfer","fadeType","performTransfer","isTransferring","setDirection","_newDirection","_newMapId","_needsMapReload","newX","_newX","newY","_newY","locate","refresh","clearTransferInfo","_clearTransferInfo","Game_Screen","startFlash","_initialize","Game_Vehicle","initialize","_initMoveSpeed","initMoveSpeed","moveSpeed","setMoveSpeed","_isMapPassable","isMapPassable","isBoat","isShip","isAirship","tileFlag","loadSystemSettings","window","$dataSystem","_mapId","startMapId","setPosition","startX","startY","setImage","characterName","characterIndex","_resetDirection","resetDirection","getOff","_driving","setWalkAnime","setStepAnime","$gameSystem","replayWalkingBgm","ImageManager","loadParserTileset","path","hue","loadEmptyBitmap","paths","shift","filename","realPath","join","loadNormalBitmap","loadParserParallax","Sprite_Character","_character","Sprite_TiledPriorityTile","apply","arguments","create","Sprite_Base","constructor","updateVisibility","visibility","visible","Spriteset_Battle","_parallaxContainers","_createTilemap","Spriteset_Map","createTilemap","_tilemap","TiledTilemap","horizontalWrap","isLoopHorizontal","verticalWrap","isLoopVertical","_baseSprite","addChild","_loadTileset","image","bitmap","bitmaps","indexedBitmaps","tiles","refreshTileset","_tileset","_updateHideOnSpecial","updateImageLayer","updateTileset","_updateHideOnLevel","hideOnLevel","hideOnSpecial","Error","_listeners","_hideFunctions","_hideIgnoreFunctions","regions","collisions","levelChanges","_tileFlagIndex","_vehiclesByIndex","_autoFunctions","_pluginCommands","_fullVehicleData","bgm","name","pan","pitch","volume","_processEncoding","base64","decodedData","atob","newData","charCodeAt","_registeredObjectResolvers","addListener","objectName","event","callback","recursive","options","isStatic","top","proto","__proto__","addHideFunction","ignore","filter","key","parentLayer","$gameData","splice","concat","encoding","encFunc","addFlag","flagIds","flagId","getParameterFlags","createVehicle","returnVehicles","getParameterVehicles","setAutoFunction","identifier","functions","objectResolvers","registerTiledObjectResolver","resolver","map","eventId","_events","_tiledProperties","setLocation","registerStandardResolvers","some","r","addPluginCommand","func","z","offsetX","offsetx","offsetY","offsety","deltaX","deltaY","repeatX","repeatY","viewportX","viewportY","viewportWidth","viewportHeight","viewportDeltaX","viewportDeltaY","zIndex","gameMap","TiledTileLayer","useSquare","texPerChild","renderer","gl","shader","plugins","tilemap","getShader","setObjectRenderer","bindShader","_globalMat","Matrix","_activeRenderTarget","projectionMatrix","copy","append","worldTransform","toArray","shadowColor","tempScale","_tempScale","ps","pointScale","projectionScale","abs","resolution","af","animationFrame","tileAnim","children","renderWebGL","CompositeRectTileLayer","TiledTileRenderer","maxTextures","rectShader","TiledTileShader","squareShader","checkIndexBuffer","indexBuffer","vbs","glTextures","boundSprites","initBounds","TileRenderer","WebGLRenderer","registerPlugin","GLBuffer","glCore","VertexArrayObject","squareShaderFrag","squareShaderVert","rectShaderFrag","rectShaderVert","frag","shaderGenerator","generateFragmentSrc","vertSize","vertPerQuad","anim","textureId","stride","fillSamplers","vb","createVaoSquare","createVaoRect","createVao","addIndex","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","aFrame","aAnim","aTextureId","aSize","TilemapShader","_tiledData","_imageLayers","_objectTiles","_priorityTiles","_priorityTilesCount","setupTiled","_setupSize","_setupAnim","_width","_height","margin","_margin","tileCols","ceil","_tileWidth","tileRows","_tileHeight","_layerWidth","_layerHeight","_mapWidth","_mapHeight","_animFrame","_animDuration","_needsRepaint","useSquareShader","Number","_createImageLayer","spriteId","Sprite","_counter","_createPriorityTiles","sprite","hide","isArray","_baseTexture","Texture","tilesetBitmaps","setBitmaps","_updateAnim","needRefresh","ox","oy","roundPixels","origin","position","origX","origY","clear","_paintTiles","_paintObjectLayers","_paintTilesLayer","obj","gid","realTileId","_getTextureId","dx","dy","positionHeight","_paintPriorityTile","_paintTile","mx","my","mod","tilePosition","rectLayer","w","h","columns","rId","_getAnimTileId","ux","uy","_isPriorityTile","addRect","tileOrientation","imagewidth","imageheight","flipH","flipV","anchor","scale","realTextureId","setFrame","priority","_getPriority","_getZIndex","show","tilesData","animation","frame","duration","tileid","playerZIndex","layerIds","transitionStep","removeChild","hideLayer","imageLayer","TilingSprite","move","Graphics","addLoadListener","baseX","baseY","stepAutoX","stepAutoY","layerMask","baseWidth","baseHeight","mask","hasViewport","display","displayX","displayY","beginFill","drawRect","val","ShaderTilemap","_getFilename","_getRealPath","members","actor","moveStraight","showOnLevel","hideOnRegion","hideOnRegions","String","region","$gameSwitches","hideOnSwitch","showOnSwitch","sin","PI","cos","setWaitMode"],"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","file":"YED_Tiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/* A fallback implementation of AlphaFilter */\n\nconst fragmentSrc = 'varying vec2 vTextureCoord;' +\n'uniform sampler2D uSampler;' +\n'uniform float uAlpha;' +\n'void main(void)' +\n'{' +\n'   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;' +\n'}';\n\nif(!PIXI.filters.AlphaFilter) {\n    class AlphaFilter extends PIXI.Filter\n    {\n        /**\n         * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\n         */\n        constructor(alpha = 1.0)\n        {\n            super(\n                // vertex shader\n                null,\n                // fragment shader\n               fragmentSrc\n            );\n            this.alpha = alpha;\n            this.glShaderKey = 'alpha';\n        }\n        /**\n         * Coefficient for alpha multiplication\n         *\n         * @member {number}\n         * @default 1\n         */\n        get alpha()\n        {\n            return this.uniforms.uAlpha;\n        }\n        set alpha(value) // eslint-disable-line require-jsdoc\n        {\n            this.uniforms.uAlpha = value;\n        }\n    }\n    PIXI.filters.AlphaFilter = AlphaFilter;\n}","DataManager._tempTiledData = null;\nDataManager._tiledLoaded = false;\n\nlet _loadMapData = DataManager.loadMapData;\nDataManager.loadMapData = function (mapId) {\n    _loadMapData.call(this, mapId);\n    if (mapId > 0) {\n        this.loadTiledMapData(mapId);\n    } else {\n        this.unloadTiledMapData();\n    }\n};\n\nDataManager.loadTiledMapData = function (mapId) {\n    const xhr = new XMLHttpRequest();\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\n    xhr.open('GET', \"./\" + pluginParams[\"Maps Location\"] + \"Map\" + mapId + \".json\");\n    xhr.overrideMimeType('application/json');\n\n    // on success callback\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\n                DataManager._tempTiledData = JSON.parse(xhr.responseText);\n                TiledManager.processTiledData(DataManager._tempTiledData);\n                TiledManager.triggerListener(TiledManager, \"tiledmapdataprocessed\", DataManager._tempTiledData, mapId);\n            }\n            let tiledLoaded = true;\n            let tilesRequired = 0;\n            if(DataManager._tempTiledData && DataManager._tempTiledData.tilesets && DataManager._tempTiledData.tilesets.length > 0) {\n                for(var idx = 0; idx < DataManager._tempTiledData.tilesets.length; idx++) {\n                    let tileset = DataManager._tempTiledData.tilesets[idx];\n                    if(tileset.source) {\n                        let realTileset = TilesetManager.getTileset(tileset.source);\n                        if(realTileset) {\n                            DataManager._tempTiledData.tilesets[idx] = Object.assign({}, realTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\n                        } else {\n                            tiledLoaded = false;\n                            tilesRequired++;\n                            +function(idx) {\n                                TilesetManager.loadTileset(tileset.source, function(returnTileset) {\n                                    DataManager._tempTiledData.tilesets[idx] = Object.assign({}, returnTileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\n                                    tilesRequired--;\n                                    if(tilesRequired === 0) {\n                                        DataManager._tiledLoaded = true;\n                                    }\n                                });\n                            }(idx);\n                        }\n                    }\n                }\n            }\n            DataManager._tiledLoaded = tiledLoaded;\n        }\n    };\n\n    // set data to null and send request\n    this.unloadTiledMapData();\n    xhr.send();\n};\n\nDataManager.unloadTiledMapData = function () {\n    DataManager._tempTiledData = null;\n    DataManager._tiledLoaded = false;\n};\n\nlet _isMapLoaded = DataManager.isMapLoaded;\nDataManager.isMapLoaded = function() {\n    let defaultLoaded = _isMapLoaded.call(this);\n    let tiledLoaded = DataManager._tiledLoaded;\n\n    return defaultLoaded && tiledLoaded;\n};","// Constants\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nlet _checkFloorEffect = Game_Actor.prototype.checkFloorEffect;\nGame_Actor.prototype.checkFloorEffect = function() {\n    _checkFloorEffect.call(this);\n    if ($gamePlayer.isOnHealFloor()) {\n        this.executeFloorHeal();\n    }\n}\n\nGame_Actor.prototype.executeFloorHeal = function() {\n    var heal = Math.floor(this.basicFloorHeal() * this.fdr);\n    heal = Math.min(heal, this.maxFloorHeal());\n    this.gainHp(heal);\n    if (heal > 0) {\n        this.performMapHeal();\n    }\n};\n\nGame_Actor.prototype._getFloorHPCalculation = function(type = 'damage') {\n    let typeName = type.slice(0, 1).toUpperCase() + type.slice(1).toLowerCase();\n    let floorHP = [];\n    for(var layerId = 0; layerId < $gameMap.tiledData.layers; layerId++) {\n        let layerData = $gameMap.tiledData.layers[layerId];\n        if(!layerData.properties) {\n            return;\n        }\n        let level = parseInt(layerData.properties.level) || 0;\n        if(level !== $gameMap.currentMapLevel) {\n            return;\n        }\n        if(TiledManager.checkLayerHidden(layerData)) {\n            return;\n        }\n        let tile = Game_Map.prototype.getTileProperties(x, y, layerId);\n        if(!!tile.properties && !!tile.properties['floor' + typeName]) {\n            floorHP.push(layerData.properties['floor' + typeName]);\n        }\n    }\n    let actualHP = 0;\n    switch((pluginParams[\"Floor HP Calculation\"] || '').toLowerCase()) {\n        case 'sum':\n            floorHP.forEach(hp => {\n                actualHP+= hp;\n            })\n            break;\n        case 'average':\n            floorHP.forEach(hp => {\n                actualHP+= hp;\n            })\n            actualHP = Math.round(actualHP / floorHP.length);\n            break;\n        case 'top':\n        default:\n            actualHP = floorHP.pop();\n            break;\n    }\n    return actualHP;\n}\n\nGame_Actor.prototype.basicFloorDamage = function() {\n    let actualDamage = this._getFloorHPCalculation('damage');\n    return actualDamage || parseInt(pluginParams[\"Basic Floor Damage\"]) || 10;\n};\n\nGame_Actor.prototype.basicFloorHeal = function() {\n    let actualHeal = this._getFloorHPCalculation('heal');\n    return actualHeal || parseInt(pluginParams[\"Basic Floor Heal\"]) || 10;\n};\n\nGame_Actor.prototype.maxFloorHeal = function() {\n    return Math.max(this.mhp - this.hp, 0);\n};\n\nGame_Actor.prototype.performMapHeal = function() {\n    if (!$gameParty.inBattle()) {\n        $gameScreen.startFlashForHeal();\n    }\n};\n","let pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nGame_CharacterBase.prototype.screenZ = function () {\n    if (this._priorityType == 0) {\n        return parseInt(pluginParams[\"Z - Below Player\"]);\n    }\n    if (this._priorityType == 2) {\n        return parseInt(pluginParams[\"Z - Above Player\"]);\n    }\n    return parseInt(pluginParams[\"Z - Player\"]);\n};\n\nconst _distancePerFrame = Game_CharacterBase.prototype.distancePerFrame;\nGame_CharacterBase.prototype.distancePerFrame = function () {\n    const distance = _distancePerFrame.call(this);\n    return distance * (48 / Math.min($gameMap.tileWidth(), $gameMap.tileHeight()));\n};\n\nconst _refreshBushDepth = Game_CharacterBase.prototype.refreshBushDepth;\nGame_CharacterBase.prototype.refreshBushDepth = function() {\n    if(!this.hasOwnProperty('_bushDepth')) {\n        this._bushDepth = 0;\n    }\n    if(!$gameMap.isTiledMap() || $gameMap.isTiledInitialized()) {\n        _refreshBushDepth.call(this);\n    } else {\n        $gameMap.setRefreshDepth(this);\n    }\n};\n\nlet _updateMove = Game_CharacterBase.prototype.updateMove;\nGame_CharacterBase.prototype.updateMove = function() {\n    var hori = (this._realX > this._x ? 4 : (this._realX < this._x ? 6 : 0))\n    var vert = (this._realY > this._y ? 8 : (this._realY < this._y ? 2 : 0))\n    var d = hori + vert\n    _updateMove.call(this);\n    if(!this.isMoving() || pluginParams[\"Position Height - Always Check On Move Update\"].toLowerCase() === \"true\") {\n        let newLocationHeight = $gameMap.checkPositionHeight(this._x, this._y);\n        if(newLocationHeight > -1) {\n            this._locationHeight = newLocationHeight;\n        }\n    }\n    if(!this.isMoving()) {\n        TiledManager.triggerListener(this, 'stopmovement', {\n            direction: d\n        })\n        if($gameMap.isSlipperyFloor(this._x, this._y)) {\n            TiledManager.triggerListener(this, 'slipperyfloor', {\n                direction: d\n            })\n        }\n    }\n}\n\nGame_CharacterBase.prototype.locationHeight = function() {\n\treturn this._locationHeight || 0\n}\n\nlet _isCollideWithVehicles = Game_CharacterBase.prototype.isCollidedWithVehicles\nGame_CharacterBase.prototype.isCollidedWithVehicles = function(x, y) {\n    if(!_isCollideWithVehicles.call(this, x, y)) {\n        let vehicles = $gameMap.vehicles();\n        for(let i = 0; i < vehicles.length; i++) {\n            if(!(vehicles[i].vehicleData && (!vehicles[i].vehicleData.hasOwnProperty('hasCollision') || vehicles[i].vehicleData.hasCollision === 'true' || vehicles[i].vehicleData.hasCollision === true)) || vehicles[i].posNt(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return true;\n};\n\nGame_CharacterBase.prototype.updateScroll = function(lastScrolledX, lastScrolledY) {\n    var x1 = lastScrolledX;\n    var y1 = lastScrolledY;\n    var x2 = this.scrolledX();\n    var y2 = this.scrolledY();\n    if (y2 > y1 && y2 > this.centerY()) {\n        $gameMap.scrollDown(y2 - y1);\n    }\n    if (x2 < x1 && x2 < this.centerX()) {\n        $gameMap.scrollLeft(x1 - x2);\n    }\n    if (x2 > x1 && x2 > this.centerX()) {\n        $gameMap.scrollRight(x2 - x1);\n    }\n    if (y2 < y1 && y2 < this.centerY()) {\n        $gameMap.scrollUp(y1 - y2);\n    }\n};\n","let _pluginCommand = Game_Interpreter.prototype.pluginCommand\nGame_Interpreter.prototype.pluginCommand = function(command, args) {\n    _pluginCommand.call(this, command, args);\n    TiledManager.pluginCommand.call(this, command, args);\n};\n","import TiledMapImage from './TiledMap/TiledMapImage';\r\nimport TiledMapLayer from './TiledMap/TiledMapLayer';\r\n\r\n// Constants\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nObject.defineProperty(Game_Map.prototype, 'tiledData', {\r\n    get: function () {\r\n        return DataManager._tempTiledData;\r\n    },\r\n    configurable: true\r\n});\r\n\r\nObject.defineProperty(Game_Map.prototype, 'currentMapLevel', {\r\n    get: function () {\r\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\r\n        if (!varID) {\r\n            return this._currentMapLevel;\r\n        } else {\r\n            return $gameVariables.value(varID);\r\n        }\r\n    },\r\n    set: function (value) {\r\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\r\n        if (!varID) {\r\n            this._currentMapLevel = value;\r\n        } else {\r\n            $gameVariables.setValue(varID, value);\r\n        }\r\n    },\r\n    configurable: true\r\n});\r\n\r\nObject.defineProperty(Game_Map.prototype, 'layers', {\r\n    get: function() {\r\n        return this._layers;\r\n    },\r\n});\r\n\r\nlet _setup = Game_Map.prototype.setup;\r\nGame_Map.prototype.setup = function (mapId) {\r\n    this._tiledInitialized = false;\r\n    this._layers = [];\r\n    this._levels = [];\r\n    this._collisionMap = {};\r\n    this._arrowCollisionMap = {};\r\n    this._regions = {};\r\n    this._mapLevelChange = {};\r\n    this._positionHeightChange = {};\r\n    this._tileFlags = {};\r\n    this._collisionMapLayers = [];\r\n    this._arrowCollisionMapLayers = [];\r\n    this._regionsLayers = [];\r\n    this._mapLevelChangeLayers = [];\r\n    this._positionHeightChangeLayers = [];\r\n    this._tileFlagsLayers = [];\r\n    this._currentMapLevel = 0;\r\n    this.currentMapLevel = 0;\r\n    this._waypoints = {};\r\n    this._layerProperties = [];\r\n    this._camera = {\r\n        focus: \"player\",\r\n        data: null\r\n    }\r\n    _setup.call(this, mapId);\r\n    if (this.isTiledMap()) {\r\n        $dataMap.width = this.tiledData.width;\r\n        $dataMap.height = this.tiledData.height;\r\n        this._setupTiled();\r\n        this._tiledInitialized = true;\r\n        if(this._refreshList) {\r\n            this._refreshList.forEach(character => {\r\n                character.refreshBushDepth();\r\n            })\r\n        }\r\n    } else {\r\n\t\tthis._tiledInitialized = true;\r\n\t}\r\n};\r\n\r\nGame_Map.prototype.isTiledInitialized = function() {\r\n    return !!this._tiledInitialized;\r\n}\r\n\r\nGame_Map.prototype.setRefreshDepth = function(character) {\r\n    if(!this._refreshList) {\r\n        this._refreshList = [];\r\n    }\r\n    this._refreshList.push(character);\r\n}\r\n\r\nGame_Map.prototype.isTiledMap = function () {\r\n    return !!this.tiledData;\r\n};\r\n\r\nGame_Map.prototype._setupTiled = function () {\r\n    this._setupLayers();\r\n    this._setLayerProperties();\r\n    this._initializeMapLevel(0);\r\n\r\n    this._setupCollision();\r\n    this._setupRegion();\r\n    this._setupMapLevelChange();\r\n    this._setupTileFlags();\r\n    this._setupTiledEvents();\r\n};\r\n\r\nGame_Map.prototype.initializeMapProperties = function() {\r\n    this._autoSize = false;\r\n    this._autoSizeBorder = 0;\r\n    this._offsets = { x: 0, y: 0 };\r\n    let autoSize = false;\r\n    let border = 0;\r\n    if(this.tiledData.properties) {\r\n        if(this.tiledData.properties.hasOwnProperty('autoSize')) {\r\n            autoSize = this.tiledData.properties.autoSize;\r\n        }\r\n        if(this.tiledData.properties.hasOwnProperty('border')) {\r\n            border = this.tiledData.properties.border;\r\n        }\r\n    }\r\n    this._autoSize = autoSize;\r\n    this._autoSizeBorder = border;\r\n}\r\n\r\nGame_Map.prototype.offsets = function(x = false, y = false) {\r\n\tif(typeof x === 'object') {\r\n\t\tlet offsets = {\r\n\t\t\tx: (x.x || 0) - this._offsets.x,\r\n\t\t\ty: (x.y || 0) - this._offsets.y\r\n\t\t}\r\n\t\tif(typeof y === 'string' && offsets.hasOwnProperty(y)) {\r\n\t\t\treturn offsets[y];\r\n\t\t}\r\n\t\treturn offsets;\r\n\t}\r\n\tif(x !== false || y !== false) {\r\n\t\treturn {\r\n\t\t\tx: (x || 0) - this._offsets.x,\r\n\t\t\ty: (y || 0) - this._offsets.y\r\n\t\t}\r\n\t}\r\n    return {\r\n        x: this._offsets.x,\r\n        y: this._offsets.y\r\n    }\r\n}\r\n\r\n/*\r\n * I've decided to not use the following functions anymore, as they caused problems when reloading after\r\n * battle.\r\n */\r\nGame_Map.prototype.initializeInfiniteMap = function() {\r\n    if(!this.tiledData.infinite) {\r\n        return;\r\n    }\r\n    if(this._autoSize && this._autoSize !== 'false') {\r\n        this._setMapSize();\r\n    }\r\n\t/*\r\n\tThis used to convert chunk data into regular map data. I removed it because I realized that really big maps\r\n\twill pose a huge memory problem, especially if you have a lot of layers. It also won't affect the load time,\r\n\tas all other data will already be pre-processed.\r\n\t*/\r\n\t/*\r\n\tfor (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n\t\tlet layerData = this.tiledData.layers[idx];\r\n\t\tif(!layerData.data && !!layerData.chunks) {\r\n\t\t\tlayerData.data = new Array(this.width() * this.height());\r\n\t\t\tlayerData.data.fill(0);\r\n\t\t\tlayerData.chunks.forEach(chunk => {\r\n\t\t\t\tfor(let i = 0; i < chunk.data.length; i++) {\r\n\t\t\t\t\tlet x = chunk.x - this._offsets.x + (i % chunk.width);\r\n\t\t\t\t\tlet y = chunk.y - this._offsets.y + Math.floor(i / chunk.width);\r\n\t\t\t\t\tif(x < 0 || y < 0 || x >= layerData.x + this.width() || y >= layerData.x + this.width()) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet realX = x + y * this.width();\r\n\t\t\t\t\tlayerData.data[realX] = chunk.data[i];\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n/**\r\n * Resizes an infinite map so that the entire map is visible.\r\n * The only thing this does is set the offset and the size of the map,\r\n * without changing the map data itself.\r\n */\r\nGame_Map.prototype._setMapSize = function() {\r\n\t// Initialize variables\r\n    var minX = false;\r\n    var minY = false;\r\n    var maxX = false;\r\n    var maxY = false;\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        var layer = this.tiledData.layers[idx];\r\n        if(layer.type !== 'tilelayer') {\r\n            continue;\r\n        }\r\n        var x1 = layer.startx;\r\n        var y1 = layer.starty;\r\n        var x2 = x1 + layer.width;\r\n        var y2 = y1 + layer.height;\r\n\t\tif(this._autoSize === 'deep' || this._autoSize === 'crop') {\r\n\t\t\tif(minX === false || x1 < minX) {\r\n\t\t\t\tx1 = this._cropInfiniteMap(layer, x1, (minX === false ? x2 : minX));\r\n\t\t\t}\r\n\t\t\tif(minY === false || y1 < minY) {\r\n\t\t\t\ty1 = this._cropInfiniteMap(layer, y1, (minY === false ? y2 : minY), true, true);\r\n\t\t\t}\r\n\t\t\tif(maxX === false || x2 > maxX) {\r\n\t\t\t\tx2 = this._cropInfiniteMap(layer, x2, (maxX === false ? x1 : maxX), false);\r\n\t\t\t}\r\n\t\t\tif(maxY === false || y2 > maxY) {\r\n\t\t\t\ty2 = this._cropInfiniteMap(layer, y2, (maxY === false ? y1 : maxY), false, true);\r\n\t\t\t}\r\n\t\t}\r\n        minX = minX !== false ? Math.min(minX, x1) : x1;\r\n        minY = minY !== false ? Math.min(minY, y1) : y1;\r\n        maxX = maxX !== false ? Math.max(maxX, x2) : x2;\r\n        maxY = maxY !== false ? Math.max(maxY, y2) : y2;\r\n    }\r\n\tif(this._autoSizeBorder) {\r\n\t\tlet border = [0, 0, 0, 0];\r\n\t\tif(isNaN(this._autoSizeBorder)) {\r\n\t\t\tlet autoBorder = this.autoSizeBorder.split(' ');\r\n\t\t\tborder[0] = parseInt(autoBorder[0]);\r\n\t\t\tborder[1] = autoBorder.length < 2 ? border[0] : parseInt(autoBorder[1]);\r\n\t\t\tborder[2] = autoBorder.length < 3 ? border[0] : parseInt(autoBorder[2]);\r\n\t\t\tborder[3] = autoBorder.length < 4 ? border[1] : parseInt(autoBorder[3]);\r\n\t\t} else {\r\n\t\t\tborder[0] = this._autoSizeBorder;\r\n\t\t\tborder[1] = this._autoSizeBorder;\r\n\t\t\tborder[2] = this._autoSizeBorder;\r\n\t\t\tborder[3] = this._autoSizeBorder;\r\n\t\t}\r\n\t\tminX-= +border[3];\r\n\t\tminY-= +border[0];\r\n\t\tmaxX+= +border[1];\r\n\t\tmaxY+= +border[2];\r\n\t}\r\n    this._offsets.x = minX;\r\n    this._offsets.y = minY;\r\n    this.tiledData.width = maxX - minX;\r\n    this.tiledData.height = maxY - minY;\r\n    this._offsets.width = this.tiledData.width;\r\n    this._offsets.height = this.tiledData.height;\r\n}\r\n\r\nGame_Map.prototype._cropInfiniteMap = function(layer, offset, limit, forward = true, vertical = false) {\r\n\tlet o = offset;\r\n\tlet d = vertical ? 'y' : 'x';\r\n\tlet s = vertical ? 'height' : 'width';\r\n\twhile((forward && o < limit) || (!forward && o > limit)) {\r\n\t\tlet realO = o - (!forward ? 1 : 0);\r\n\t\tlet lineEmpty = true;\r\n\t\tfor(let chunkIdx = 0; chunkIdx < layer.chunks.length; chunkIdx++) {\r\n\t\t\tlet chunk = layer.chunks[chunkIdx];\r\n\t\t\tif(realO < chunk[d] || realO >= chunk[d] + chunk[s]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet empty = true;\r\n\t\t\tfor(let o2 = 0; o2 < chunk[s]; o2++) {\r\n\t\t\t\tlet coords = {\r\n\t\t\t\t\t[d]: realO - chunk[d],\r\n\t\t\t\t\t[vertical ? 'x' : 'y']: o2\r\n\t\t\t\t};\r\n\t\t\t\tlet i = coords.x + coords.y * chunk.width;\r\n\t\t\t\tif(chunk.data[i]) {\r\n\t\t\t\t\tempty = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!empty) {\r\n\t\t\t\tlineEmpty = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!lineEmpty) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\to+= forward ? 1 : -1;\r\n\t}\r\n\treturn o;\r\n}\r\n\r\nGame_Map.prototype._setLayerProperties = function() {\r\n    let autoFunctions = {};\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layer = this.tiledData.layers[idx];\r\n        let layerProperties = Object.assign({}, layer.properties, {layerId: idx});\r\n        if(layerProperties.transition) {\r\n            layerProperties.baseAlpha = layer.opacity;\r\n            layerProperties.minAlpha = Math.min(layerProperties.baseAlpha, (layer.properties.minimumOpacity || 0));\r\n            layerProperties.isShown = !TiledManager.checkLayerHidden(layer);\r\n            layerProperties.transitionPhase = layerProperties.isShown ? layerProperties.transition : 0;\r\n        }\r\n        if(layerProperties.autoX) {\r\n            layerProperties.autoSpeedX = layerProperties.autoX;\r\n            layerProperties.autoX = 0;\r\n            layerProperties.imageWidth = layerProperties.imageWidth || 0;\r\n            let funcX = 'linear';\r\n            if(layerProperties.autoFunctionX) {\r\n                funcX = layerProperties.autoFunctionX;\r\n            } else if (layerProperties.autoFunction) {\r\n                funcX = layerProperties.autoFunction;\r\n            }\r\n            let tFuncX = TiledManager.getAutoFunction(funcX);\r\n            if(tFuncX) {\r\n                layerProperties.autoXFunction = tFuncX.x || tFuncX.both;\r\n            } else {\r\n                if(!autoFunctions[funcX]) {\r\n                    autoFunctions[funcX] = new Function('x', 'y', funcX);\r\n                }\r\n                layerProperties.autoXFunction = autoFunctions[funcX];\r\n            }\r\n        }\r\n        if(layerProperties.autoY) {\r\n            layerProperties.autoSpeedY = layerProperties.autoY;\r\n            layerProperties.autoY = 0;\r\n            layerProperties.imageHeight = layerProperties.imageHeight || 0;\r\n            let funcY = 'linear';\r\n            if(layerProperties.autoFunctionY) {\r\n                funcY = layerProperties.autoFunctionY;\r\n            } else if (layerProperties.autoFunction) {\r\n                funcY = layerProperties.autoFunction;\r\n            }\r\n            let tFuncY = TiledManager.getAutoFunction(funcY);\r\n            if(tFuncY) {\r\n                layerProperties.autoYFunction = tFuncY.y || tFuncY.both;\r\n            } else {\r\n                if(!autoFunctions[funcY]) {\r\n                    autoFunctions[funcY] = new Function('x', 'y', funcY);\r\n                }\r\n                layerProperties.autoYFunction = autoFunctions[funcY];\r\n            }\r\n        }\r\n        this._getLayerTilesets(layer, layerProperties);\r\n        this._layerProperties.push(layerProperties);\r\n    }\r\n}\r\n\r\nGame_Map.prototype._getLayerTilesets = function(layer, props) {\r\n    if(layer.type !== 'tilelayer') {\r\n        return;\r\n    }\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    props.tilesets = [];\r\n    for (let i of Array(size).keys()) {\r\n        let tileId = TiledManager.extractTileId(layer, i);\r\n        if (!!tileId) {\r\n            let tilesetId = this._getTilesetId(tileId);\r\n            if(tilesetId === -1 || props.tilesets.indexOf(tilesetId) > -1) {\r\n                continue;\r\n            }\r\n            props.tilesets.push(tilesetId);\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._setupLayers = function() {\r\n    this.tiledData.layers.forEach((layer) => {\r\n        let data = null;\r\n        console.log(layer);\r\n        switch (layer.type) {\r\n            case 'imagelayer':\r\n                data = new TiledMapImage(layer);\r\n                break;\r\n            case 'tilelayer':\r\n                data = new TiledMapLayer(layer, this);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this._layers.push(data);\r\n    });\r\n    console.log(this._layers, this.tiledData);\r\n}\r\n\r\nGame_Map.prototype._initializeMapLevel = function (id) {\r\n    if (!!this._collisionMap[id]) {\r\n        return;\r\n    }\r\n\r\n    this._levels.push(id);\r\n\r\n    this._collisionMap[id] = {};\r\n    this._arrowCollisionMap[id] = {};\r\n    this._regions[id] = {};\r\n    this._mapLevelChange[id] = {};\r\n    this._tileFlags[id] = {};\r\n    this._collisionMapLayers[id] = [];\r\n    this._arrowCollisionMapLayers[id] = [];\r\n    this._regionsLayers[id] = [];\r\n    this._mapLevelChangeLayers[id] = [];\r\n    this._tileFlagsLayers[id] = [];\r\n    this._initializeMapLevelData(id);\r\n};\r\n\r\nGame_Map.prototype._initializeMapLevelData = function(id = 0, layerId = 'main', dataTypes = false) {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    \r\n    const defaultData = {\r\n        'collisionMap': 0,\r\n        'arrowCollisionMap': 1 | 2 | 4 | 8,\r\n        'regions': 0,\r\n        'mapLevelChange': -1,\r\n        'positionHeightChange': -1,\r\n        'tileFlags': 0\r\n    }\r\n\r\n    if(!dataTypes) {\r\n        dataTypes = Object.keys(defaultData);\r\n    }\r\n\r\n    for(let idx = 0; idx < dataTypes.length; idx++) {\r\n        let dataType = dataTypes[idx];\r\n        let defaultValue = defaultData[dataType];\r\n        if(!this['_' + dataType][id]) {\r\n            this['_' + dataType][id] = {};\r\n            this['_' + dataType + 'Layers'][id] = [];\r\n        }\r\n        if(!!this['_' + dataType][id][layerId]) {\r\n            continue;\r\n        }\r\n        this['_' + dataType][id][layerId] = []\r\n        let typeData = this['_' + dataType][id][layerId]\r\n        for (let x of Array(size).keys()) {\r\n            typeData.push(defaultValue);\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._setupCollision = function () {\r\n    this._setupCollisionFull();\r\n    this._setupCollisionArrow();\r\n};\r\n\r\nGame_Map.prototype._setupCollisionFull = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.collision) {\r\n            continue;\r\n        }\r\n\r\n        if (layerData.properties.collision !== \"full\"\r\n            && layerData.properties.collision !== \"up-left\"\r\n            && layerData.properties.collision !== \"up-right\"\r\n            && layerData.properties.collision !== \"down-left\"\r\n            && layerData.properties.collision !== \"down-right\"\r\n            && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._collisionMapLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['collisionMap']);\r\n        }\r\n        \r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let ids = [];\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                switch(layerData.properties.collision) {\r\n                    case \"full\":\r\n                        ids.push(realX);\r\n                        if (this.isHalfTile()) {\r\n                            ids.push(realX + 1, realX + width, realX + width + 1);\r\n                        }\r\n                        break;\r\n                    case \"up-left\":\r\n                        ids.push(realX);\r\n                        break;\r\n                    case \"up-right\":\r\n                        ids.push(realX + 1);\r\n                        break;\r\n                    case \"down-left\":\r\n                        ids.push(realX + width);\r\n                        break;\r\n                    case \"down-right\":\r\n                        ids.push(realX + width + 1);\r\n                        break;\r\n                    case \"tiles\":\r\n                        let tileId = TiledManager.extractTileId(layerData, x);\r\n                        let tileset = this._getTileset(tileId);\r\n                        if(tileset && tileset.tileproperties) {\r\n                            let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                            if(tileData) {\r\n                                if(tileData.collision) {\r\n                                    ids.push(realX);\r\n                                    if (this.isHalfTile()) {\r\n                                        ids.push(realX + 1, realX + width, realX + width + 1);\r\n                                    }\r\n                                }\r\n                                if(tileData.collisionUpLeft) {\r\n                                    ids.push(realX);\r\n                                }\r\n                                if(tileData.collisionUpRight) {\r\n                                    ids.push(realX + 1);\r\n                                }\r\n                                if(tileData.collisionDownLeft) {\r\n                                    ids.push(realX + width);\r\n                                }\r\n                                if(tileData.collisionDownRight) {\r\n                                    ids.push(realX + width + 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                for (let id of ids) {\r\n                    this._collisionMap[level][layerId][id] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupCollisionArrow = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let bit = 0;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.collision) {\r\n            continue;\r\n        }\r\n\r\n        if (layerData.properties.collision !== \"arrow\" && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n\r\n        if (!layerData.properties.arrowImpassable && layerData.properties.collision !== \"tiles\") {\r\n            continue;\r\n        }\r\n        \r\n        if(layerData.properties.arrowImpassable) {\r\n\r\n            if (layerData.properties.arrowImpassable === \"down\") {\r\n                bit = 1;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"left\") {\r\n                bit = 2;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"right\") {\r\n                bit = 4;\r\n            }\r\n\r\n            if (layerData.properties.arrowImpassable === \"up\") {\r\n                bit = 8;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._arrowCollisionMapLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['arrowCollisionMap']);\r\n        }\r\n        \r\n        let arrowCollisionMap = this._arrowCollisionMap[level][layerId];\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let realBit = bit;\r\n                if(layerData.properties.collision === \"tiles\") {\r\n                    realBit = 0;\r\n                    let tileId = TiledManager.extractTileId(layerData, x);\r\n                    let tileset = this._getTileset(tileId);\r\n                    if(tileset && tileset.tileproperties) {\r\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                        if(tileData) {\r\n                            if(tileData.arrowImpassableDown) {\r\n                                realBit+= 1;\r\n                            }\r\n                            if(tileData.arrowImpassableLeft) {\r\n                                realBit+= 2;\r\n                            }\r\n                            if(tileData.arrowImpassableRight) {\r\n                                realBit+= 4;\r\n                            }\r\n                            if(tileData.arrowImpassableUp) {\r\n                                realBit+= 8;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                arrowCollisionMap[realX] = arrowCollisionMap[realX] ^ realBit;\r\n                if (this.isHalfTile()) {\r\n                    arrowCollisionMap[realX + 1]\r\n                        = arrowCollisionMap[realX + 1] ^ realBit;\r\n                    arrowCollisionMap[realX + width]\r\n                        = arrowCollisionMap[realX + width] ^ realBit;\r\n                    arrowCollisionMap[realX + width + 1]\r\n                        = arrowCollisionMap[realX + width + 1] ^ realBit;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupRegion = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.regionId) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._regionsLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['regions']);\r\n        }\r\n        \r\n        let regionMap = this._regions[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let regionId = 0;\r\n                if(layerData.properties.regionId > -1) {\r\n                    regionId = parseInt(layerData.properties.regionId);\r\n                } else {\r\n                    let tileId = TiledManager.extractTileId(layerData, x);\r\n                    let tileset = this._getTileset(tileId);\r\n                    if(tileset && tileset.tileproperties) {\r\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                        if(tileData && tileData.regionId) {\r\n                            regionId = parseInt(tileData.regionId);\r\n                        }\r\n                    }\r\n                    if(layerData.properties.regionOffset) {\r\n                        regionId+= layerData.properties.regionOffset;\r\n                    }\r\n                }\r\n                regionMap[realX] = regionId;\r\n                if (this.isHalfTile()) {\r\n                    regionMap[realX + 1] = regionId;\r\n                    regionMap[realX + width] = regionId;\r\n                    regionMap[realX + width + 1] = regionId;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupMapLevelChange = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('toLevel')) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._mapLevelChangeLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['mapLevelChange']);\r\n        }\r\n        \r\n        let levelChangeMap = this._mapLevelChange[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let toLevel = parseInt(layerData.properties.toLevel);\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                levelChangeMap[realX] = toLevel;\r\n                if (this.isHalfTile()) {\r\n                    levelChangeMap[realX + 1] = toLevel;\r\n                    levelChangeMap[realX + width] = toLevel;\r\n                    levelChangeMap[realX + width + 1] = toLevel;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupPositionHeightChange = function () {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n\r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('floorHeight')) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._positionHeightChangeLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['positionHeightChange']);\r\n        }\r\n        \r\n        let positionHeightChangeMap = this._positionHeightChange[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            let toLevel = parseInt(layerData.properties.floorHeight);\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                positionHeightChangeMap[realX] = toLevel;\r\n                if (this.isHalfTile()) {\r\n                    positionHeightChangeMap[realX + 1] = toLevel;\r\n                    positionHeightChangeMap[realX + width] = toLevel;\r\n                    positionHeightChangeMap[realX + width + 1] = toLevel;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype._setupTileFlags = function() {\r\n    let width = this.width();\r\n    let height = this.height();\r\n    let size = width * height;\r\n    let halfWidth = width / 2;\r\n    let halfHeight = height / 2;\r\n\r\n    if (this.isHalfTile()) {\r\n        size /= 4;\r\n    }\r\n    \r\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\r\n        let layerData = this.tiledData.layers[idx]\r\n        if (!layerData.properties || !layerData.properties.tileFlags) {\r\n            continue;\r\n        }\r\n\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        this._initializeMapLevel(level);\r\n        \r\n        let layerId = 'main';\r\n\r\n        if(TiledManager.hasHideProperties(layerData)) {\r\n            layerId = idx;\r\n            this._tileFlagsLayers[level].push(idx);\r\n            this._initializeMapLevelData(level, layerId, ['tileFlags']);\r\n        }\r\n        \r\n        let tileFlagMap = this._tileFlags[level][layerId];\r\n\r\n        for (let x of Array(size).keys()) {\r\n            let realX = x;\r\n            if (this.isHalfTile()) {\r\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\r\n            }\r\n\r\n            if (!!TiledManager.extractTileId(layerData, x)) {\r\n                let tileFlags = 0;\r\n                let tileId = TiledManager.extractTileId(layerData, x);\r\n                let tileset = this._getTileset(tileId);\r\n                if(tileset && tileset.tileproperties) {\r\n                    let tileData = tileset.tileproperties[tileId - tileset.firstgid];\r\n                    if(tileData) {\r\n                        tileFlags = this._getTileFlags(tileData);\r\n                    }\r\n                }\r\n                tileFlagMap[realX] = this._combineFlags(tileFlagMap[realX], tileFlags);\r\n                if (this.isHalfTile()) {\r\n                    tileFlagMap[realX + 1] = this._combineFlags(tileFlagMap[realX + 1], tileFlags);\r\n                    tileFlagMap[realX + width] = this._combineFlags(tileFlagMap[realX + width], tileFlags);\r\n                    tileFlagMap[realX + width + 1] = this._combineFlags(tileFlagMap[realX + width + 1], tileFlags);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nGame_Map.prototype._getTileFlags = function(tileData) {\r\n    let flags = []\r\n    let flagNames = TiledManager.getFlagNames()\r\n    flagNames.forEach(prop => {\r\n        let property = 'flagIs' + prop.slice(0, 1).toUpperCase() + prop.slice(1)\r\n        if(tileData[property]) {\r\n            let [group, bit] = TiledManager.getFlagLocation(prop)\r\n            for(let i = flags.length; i <= group; i++) {\r\n                flags.push(0)\r\n            }\r\n            flags[group]|= bit\r\n        }\r\n    })\r\n    return flags.length > 0 ? flags : 0\r\n}\r\n\r\nGame_Map.prototype._combineFlags = function (source, target) {\r\n    source = source ? source.slice(0) : []\r\n    for(let i = 0; i < target.length; i++) {\r\n        if(!source.length <= i) {\r\n            source.push(i)\r\n        }\r\n        source[i]|= target[i];\r\n    }\r\n    return source;\r\n}\r\n\r\nGame_Map.prototype._setupTiledEvents = function () {\r\n    for (let layerData of this.tiledData.layers) {\r\n        if (layerData.type !== \"objectgroup\") {\r\n            continue;\r\n        }\r\n\r\n        for (let object of layerData.objects) {\r\n            // call the object resolvers to perform actions based on the objects\r\n            TiledManager.processTiledObject(object, this);\r\n        }\r\n    }\r\n};\r\n\r\nGame_Map.prototype.isHalfTile = function () {\r\n    return pluginParams[\"Half-tile movement\"].toLowerCase() === \"true\";\r\n};\r\n\r\nGame_Map.prototype._getTileset = function(tileId) {\r\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\r\n        let tileset = this.tiledData.tilesets[idx];\r\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\r\n            return tileset;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\nGame_Map.prototype._getTilesetId = function(tileId) {\r\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\r\n        let tileset = this.tiledData.tilesets[idx];\r\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\r\n                if(tileset.properties && tileset.properties.ignoreLoading) {\r\n                    return -1;\r\n                }\r\n                return idx;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n\r\nGame_Map.prototype.tileWidth = function () {\r\n    let tileWidth = this.tiledData.tilewidth;\r\n    if (this.isHalfTile()) {\r\n        tileWidth /= 2;\r\n    }\r\n    return tileWidth;\r\n};\r\n\r\nGame_Map.prototype.tileHeight = function () {\r\n    let tileHeight = this.tiledData.tileheight;\r\n    if (this.isHalfTile()) {\r\n        tileHeight /= 2;\r\n    }\r\n    return tileHeight;\r\n};\r\n\r\nGame_Map.prototype.width = function () {\r\n    let width = this.tiledData.width;\r\n    if (this.isHalfTile()) {\r\n        width *= 2;\r\n    }\r\n    return width;\r\n};\r\n\r\nGame_Map.prototype.height = function () {\r\n    let height = this.tiledData.height;\r\n    if (this.isHalfTile()) {\r\n        height *= 2;\r\n    }\r\n    return height;\r\n};\r\n\r\nlet _regionId = Game_Map.prototype.regionId;\r\nGame_Map.prototype.regionId = function (x, y, allIds = false) {\r\n    if (!this.isTiledMap() || !this.isTiledInitialized()) {\r\n        return _regionId.call(this, x, y);\r\n    }\r\n\r\n    let index = Math.floor(x) + this.width() * Math.floor(y);\r\n    let regionMap = this._regions[this.currentMapLevel];\r\n    if(!regionMap) {\r\n        return allIds ? [0] : 0;\r\n    }\r\n    let regionLayer = this._regionsLayers[this.currentMapLevel];\r\n    \r\n    let regionValue = regionMap.main[index];\r\n    let regionValues = [regionValue];\r\n\r\n    if(regionLayer && regionLayer.length > 0) {\r\n        for(let idx = 0; idx < regionLayer.length; idx++) {\r\n            let layerId = regionLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'regions');\r\n            if(!hideData) {\r\n                if(allIds) {\r\n                    regionValues.push(regionMap[layerId][index]);\r\n                } else {\r\n                    regionValue = regionMap[layerId][index];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return allIds ? regionValues : regionValue;\r\n};\r\n\r\nGame_Map.prototype.regionIds = function (x, y) {\r\n    return this.regionId(x, y, true);\r\n}\r\n\r\nGame_Map.prototype.getMapLevels = function() {\r\n    let levels = this._levels.slice(0);\r\n    levels.sort((a, b) => {\r\n        return a - b;\r\n    });\r\n    return levels;\r\n}\r\n\r\nlet _checkPassage = Game_Map.prototype.checkPassage;\r\nGame_Map.prototype.checkPassage = function (x, y, bit, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _checkPassage.call(this, x, y, d);\r\n    }\r\n    if(level === false) {\r\n        level = this._currentMapLevel;\r\n    }\r\n    let index = x + this.width() * y;\r\n    let arrows = this._arrowCollisionMap[level];\r\n    if(!arrows) {\r\n        return true;\r\n    }\r\n    let arrowLayer = this._arrowCollisionMapLayers[level];\r\n    let arrowValue = arrows.main[index];\r\n    \r\n    if(render && arrows[render]) {\r\n        arrowValue = arrows[render][index];\r\n    } else if(arrowLayer && arrowLayer.length > 0) {\r\n        for(let idx = 0; idx < arrowLayer.length; idx++) {\r\n            let layerId = arrowLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\r\n            if(!hideData) {\r\n                arrowValue&= arrows[layerId][index];\r\n            }\r\n        }\r\n    }\r\n\r\n    return (arrowValue & bit) > 0\r\n}\r\n\r\nGame_Map.prototype.renderPassage = function (x, y, bit, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._arrowCollisionMap[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.checkPassage(x, y, bit, render, level);\r\n}\r\n\r\nGame_Map.prototype.getPassageLayers = function(level) {\r\n    return this._arrowCollisionMapLayers[level].slice(0);\r\n}\r\n\r\nlet _isPassable = Game_Map.prototype.isPassable;\r\nGame_Map.prototype.isPassable = function (x, y, d, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isPassable.call(this, x, y, d);\r\n    }\r\n    if(level === false) {\r\n        level = this._currentMapLevel;\r\n    }\r\n\r\n    if(!this.checkPassage(x, y, (1 << (d / 2 - 1)) & 0x0f, render)) {\r\n        return false;\r\n    }\r\n    \r\n    let index = x + this.width() * y;\r\n    let collisionMap = this._collisionMap[level];\r\n    if(!collisionMap) {\r\n        return true;\r\n    }\r\n    let collisionLayer = this._collisionMapLayers[level];\r\n    let collisionValue = collisionMap.main[index]\r\n    \r\n    if(render && collisionMap[render]) {\r\n        collisionValue = collisionMap[render][index];\r\n    } else if(collisionLayer && collisionLayer.length > 0) {\r\n        for(let idx = 0; idx < collisionLayer.length; idx++) {\r\n            let layerId = collisionLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\r\n            if(!hideData) {\r\n                collisionValue|= collisionMap[layerId][index];\r\n            }\r\n        }\r\n    }\r\n\r\n    return collisionValue === 0;\r\n};\r\n\r\nGame_Map.prototype.renderIsPassable = function (x, y, d, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._collisionMap[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.isPassable(x, y, d, render, level);\r\n}\r\n\r\nGame_Map.prototype.getIsPassableLayers = function(level) {\r\n    return this._collisionMapLayers[level].slice(0);\r\n}\r\n\r\nGame_Map.prototype.checkMapLevelChanging = function (x, y) {\r\n    let mapLevelChange = this._mapLevelChange[this.currentMapLevel];\r\n    if(!mapLevelChange) {\r\n        return false;\r\n    }\r\n    let mapLevelChangeLayer = this._mapLevelChangeLayers[this.currentMapLevel];\r\n    let index = y * this.width() + x;\r\n    let mapLevelChangeValue = mapLevelChange.main[index]\r\n    if(mapLevelChangeLayer.length > 0) {\r\n        for(let idx = 0; idx < mapLevelChangeLayer.length; idx++) {\r\n            let layerId = mapLevelChangeLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'levelChanges');\r\n            if(!hideData) {\r\n                mapLevelChangeValue = mapLevelChange[layerId][index];\r\n            }\r\n        }\r\n    }\r\n    if (mapLevelChangeValue < 0) {\r\n        return false;\r\n    }\r\n    let oldValue = this.currentMapLevel;\r\n    this.currentMapLevel = mapLevelChangeValue;\r\n    TiledManager.triggerListener(this, 'levelchanged', {\r\n        oldLevel: oldValue,\r\n        newLevel: mapLevelChangeValue\r\n    })\r\n    return true;\r\n};\r\n\r\nGame_Map.prototype.checkPositionHeight = function (x, y) {\r\n    let positionHeightChange = this._positionHeightChange[this.currentMapLevel];\r\n    if(!positionHeightChange) {\r\n        return -1;\r\n    }\r\n    let positionHeightChangeLayer = this._positionHeightChangeLayers[this.currentMapLevel];\r\n    let index = y * this.width() + x;\r\n    let positionHeightChangeValue = positionHeightChange.main[index];\r\n    if(positionHeightChangeLayer.length > 0) {\r\n        for(let idx = 0; idx < positionHeightChangeLayer.length; idx++) {\r\n            let layerId = positionHeightChangeLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'positionHeightChanges');\r\n            if(!hideData) {\r\n                positionHeightChangeValue = positionHeightChange[layerId][index];\r\n            }\r\n        }\r\n    }\r\n    return positionHeightChangeValue;\r\n};\r\n\r\nGame_Map.prototype.getTileFlags = function (x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    let index = x + this.width() * y;\r\n    let tileFlags = this._tileFlags[level];\r\n    if(!tileFlags) {\r\n        return [];\r\n    }\r\n    let tileFlagsLayer = this._tileFlagsLayers[level];\r\n    let tileFlagsValue = (tileFlags.main[index] ? tileFlags.main[index].slice(0) : []);\r\n\r\n    if(render && tileFlags[render]) {\r\n        tileFlagsValue = (tileFlags[render][index] ? tileFlags[render][index].slice(0) : []);\r\n    } else if(tileFlagsLayer && tileFlagsLayer.length > 0) {\r\n        for(let idx = 0; idx < tileFlagsLayer.length; idx++) {\r\n            let layerId = tileFlagsLayer[idx];\r\n            let layerData = this.tiledData.layers[layerId];\r\n            let hideData = TiledManager.checkLayerHidden(layerData, 'tileFlags');\r\n            if(!hideData && tileFlags[layerId][index]) {\r\n                tileFlagsValue = this._combineFlags(tileFlagsValue, tileFlags[layerId][index])\r\n            }\r\n        }\r\n    }\r\n    return tileFlagsValue\r\n}\r\n\r\nGame_Map.prototype.renderTileFlags = function (x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._tileFlags[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.getTileFlags(x, y, render, level);\r\n}\r\n\r\nGame_Map.prototype.getTileFlagLayers = function(level) {\r\n    return this._tileFlagsLayers[level].slice(0);\r\n}\r\n\r\nGame_Map.prototype.checkHasTileFlag = function (x, y, flag, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(typeof flag === 'string') {\r\n        flag = TiledManager.getFlag(flag)\r\n    }\r\n    let bit = (1 << (flag % 16)) & 0xffff;\r\n    let group = Math.floor(flag / 16);\r\n    let tileFlagsValue = this.getTileFlags(x, y, render, level);\r\n    \r\n    return (tileFlagsValue[group] & bit) > 0\r\n}\r\n\r\nGame_Map.prototype.renderHasTileFlag = function (x, y, flag, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    if(render && !this._tileFlags[level][render]) {\r\n        render = 'main';\r\n    }\r\n    return this.checkHasTileFlag(x, y, flag, render, level);\r\n}\r\n\r\nlet _isBoatPassable = Game_Map.prototype.isBoatPassable\r\nGame_Map.prototype.isBoatPassable = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isBoatPassable.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'boat', render, level);\r\n};\r\n\r\nGame_Map.prototype.renderIsBoatPassable = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isBoatPassable(x, y, render, level);\r\n}\r\n\r\nlet _isShipPassable = Game_Map.prototype.isShipPassable\r\nGame_Map.prototype.isShipPassable = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isShipPassable.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'ship', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsShipPassable = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isShipPassable(x, y, render, level);\r\n}\r\n\r\nlet _isAirshipLandOk = Game_Map.prototype.isAirshipLandOk\r\nGame_Map.prototype.isAirshipLandOk = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isAirshipLandOk.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.checkHasTileFlag(x, y, 'airship', render) && this.checkPassage(x, y, 0x0f, render);\r\n};\r\n\r\nGame_Map.prototype.renderIsAirshipLandOk = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isAirshipLandOk(x, y, render, level);\r\n}\r\n\r\nlet _isLadder = Game_Map.prototype.isLadder\r\nGame_Map.prototype.isLadder = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isLadder.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ladder', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsLadder = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isLadder(x, y, render, level);\r\n}\r\n\r\nlet _isBush = Game_Map.prototype.isBush\r\nGame_Map.prototype.isBush = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isBush.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'bush', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsBush = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isBush(x, y, render, level);\r\n}\r\n\r\nlet _isCounter = Game_Map.prototype.isCounter\r\nGame_Map.prototype.isCounter = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isCounter.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'counter', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsCounter = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isCounter(x, y, render, level);\r\n}\r\n\r\nlet _isDamageFloor = Game_Map.prototype.isDamageFloor\r\nGame_Map.prototype.isDamageFloor = function(x, y, render = false, level = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _isDamageFloor.call(this, x, y);\r\n    }\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'damage', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsDamageFloor = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isDamageFloor(x, y, render, level);\r\n}\r\n\r\nGame_Map.prototype.isSlipperyFloor = function(x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ice', render);\r\n};\r\n\r\nGame_Map.prototype.renderIsSlipperyFloor = function(x, y, render = 'main', level = 0) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isSlipperyFloor(x, y, render, level);\r\n}\r\n\r\nlet _isHealFloor = Game_Map.prototype.isHealFloor\r\nGame_Map.prototype.isHealFloor = function(x, y, render = false, level = false) {\r\n    if(level === false) {\r\n        level = 0;\r\n    }\r\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'heal', render);\r\n};\r\n\r\nGame_Map.prototype.getAllLayerProperties = function(layer = -1, ignoreHidden = true) {\r\n\tif(layer > -1) {\r\n\t\tif(this.tiledData.layers[layer] && this.tiledData.layers[layer].properties) {\r\n\t\t\treturn Object.assign({}, this.tiledData.layers[layer].properties);\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\tlet layerProperties = {};\r\n\tthis.tiledData.layers.forEach((layerData, i) => {\r\n\t\tif(layerData && layerData.properties) {\r\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData, 'collisions')) {\r\n                layerProperties[i] = Object.assign({}, layerData.properties);\r\n            }\r\n\t\t}\r\n\t});\r\n\treturn layerProperties;\r\n}\r\n\r\nGame_Map.prototype.getTileProperties = function(x, y, layer = -1, ignoreHidden = true) {\r\n    let index = x + this.width() * y;\r\n    \r\n\tif(layer > -1) {\r\n\t\tif(this.tiledData.layers[layer] && (this.tiledData.layers[layer].data || this.tiledData.layers[layer].chunks)) {\r\n\t\t\tlet tileId = TiledManager.extractTileId(this.tiledData.layers[layer], index);\r\n\t\t\tlet tileset = this._getTileset(tileId);\r\n\t\t\tif(tileset && tileset.tileproperties) {\r\n\t\t\t\treturn Object.assign({}, tileset.tileproperties[tileId - tileset.firstgid]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\tlet tileProperties = {};\r\n\tthis.tiledData.layers.forEach((layerData, i) => {\r\n\t\tif(layerData && (layerData.data || layerData.chunks) && layerData.properties) {\r\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData)) {\r\n                let props = this.getTileProperties(x, y, i);\r\n                if(Object.keys(props).length > 0) {\r\n                    tileProperties[i] = props;\r\n                }\r\n            }\r\n\t\t}\r\n\t});\r\n\treturn tileProperties;\r\n}\r\n\r\n/* Custom vehicles */\r\nlet _createVehicles = Game_Map.prototype.createVehicles\r\nGame_Map.prototype.createVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        _createVehicles.call(this);\r\n    }\r\n    this._vehicles = [];\r\n\r\n};\r\n\r\nlet _refreshVehicles = Game_Map.prototype.refereshVehicles\r\nGame_Map.prototype.refereshVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _refreshVehicles.call(this);\r\n    }\r\n    return TiledManager.refreshVehicles(this._vehicles);\r\n};\r\n\r\nlet _vehicles = Game_Map.prototype.vehicles\r\nGame_Map.prototype.vehicles = function(getNames = false) {\r\n    if (!this.isTiledMap()) {\r\n        return _vehicles.call(this);\r\n    }\r\n    if(getNames) {\r\n        return this._vehicles;\r\n    }\r\n    return TiledManager.getAllVehicles(this._vehicles);\r\n};\r\n\r\nlet _vehicle = Game_Map.prototype.vehicle\r\nGame_Map.prototype.vehicle = function(type) {\r\n    if (!this.isTiledMap()) {\r\n        return _vehicles.call(this, type);\r\n    }\r\n    return TiledManager.getVehicle(type);\r\n}\r\n\r\nlet _boat = Game_Map.prototype.boat\r\nGame_Map.prototype.boat = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _boat.call(this);\r\n    }\r\n    return TiledManager.getVehicle('boat');\r\n};\r\n\r\nlet _ship = Game_Map.prototype.ship\r\nGame_Map.prototype.ship = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _ship.call(this);\r\n    }\r\n    return TiledManager.getVehicle('ship');\r\n};\r\n\r\nlet _airship = Game_Map.prototype.airship\r\nGame_Map.prototype.airship = function() {\r\n    if (!this.isTiledMap()) {\r\n        return _airship.call(this);\r\n    }\r\n    return TiledManager.getVehicle('airship');\r\n};\r\n\r\nlet _updateVehicles = Game_Map.prototype.updateVehicles\r\nGame_Map.prototype.updateVehicles = function() {\r\n    if (!this.isTiledMap()) {\r\n        _updateVehicles.call(this);\r\n    }\r\n    TiledManager.updateVehicles(this._vehicles);\r\n};\r\n\r\nGame_Map.prototype.waypoint = function(waypoint) {\r\n    if(this._waypoints[waypoint]) {\r\n        return this._waypoints[waypoint];\r\n    }\r\n    return null;\r\n}\r\n\r\nlet _update = Game_Map.prototype.update\r\nGame_Map.prototype.update = function(sceneActive) {\r\n    this.setLayerProperties();\r\n    _update.call(this, sceneActive);\r\n}\r\n\r\nGame_Map.prototype.getLayerProperties = function(layerId) {\r\n    return Object.assign({}, this._layerProperties[layerId]);\r\n}\r\n\r\nGame_Map.prototype.setLayerProperties = function() {\r\n    this._layerProperties.forEach((props, i) => {\r\n        let layer = this.tiledData.layers[i];\r\n        if(props.transition) {\r\n            props.isShown = !TiledManager.checkLayerHidden(layer);\r\n            props.transitionPhase = Math.max(0, Math.min(props.transition, props.transitionPhase + (props.isShown ? 1 : -1)));\r\n        }\r\n        if(props.autoSpeedX) {\r\n            props.autoX+= props.autoSpeedX\r\n            if(props.autoDuration || props.imageWidth) {\r\n                while(props.autoX < 0) {\r\n                    props.autoX+= props.autoDuration || props.imageWidth;\r\n                }\r\n                while(props.autoX > props.imageWidth) {\r\n                    props.autoX-= props.autoDuration || props.imageWidth;\r\n                }\r\n            }\r\n        }\r\n        if(props.autoSpeedY) {\r\n            props.autoY+= props.autoSpeedY\r\n            if(props.imageHeight) {\r\n                while(props.autoY < 0) {\r\n                    props.autoY+= props.autoDuration || props.imageHeight;\r\n                }\r\n                while(props.autoY > props.imageHeight) {\r\n                    props.autoY-= props.autoDuration || props.imageHeight;\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nlet _battleback1Name = Game_Map.prototype.battleback1Name\r\nGame_Map.prototype.battleback1Name = function() {\r\n    if(!this.isTiledMap()) {\r\n        return _battleback1Name.call(this);\r\n    }\r\n    let tileProps = Game_Map.prototype.getTileProperties($gamePlayer.x, $gamePlayer.y);\r\n    let battleback = false;\r\n    Object.keys(tileProps).forEach((layerId) => {\r\n        let props = tileProps[layerId];\r\n        if(props.hasOwnProperty('battleback1Name')) {\r\n            battleback = props.battleback1Name;\r\n        }\r\n    })\r\n    if(battleback || battleback === '') {\r\n        return battleback;\r\n    }\r\n    return _battleback1Name.call(this);\r\n};\r\n\r\nlet _battleback2Name = Game_Map.prototype.battleback2Name\r\nGame_Map.prototype.battleback2Name = function() {\r\n    if(!this.isTiledMap()) {\r\n        return _battleback2Name.call(this);\r\n    }\r\n    let tileProps = Game_Map.prototype.getTileProperties($gamePlayer.x, $gamePlayer.y);\r\n    let battleback = false;\r\n    Object.keys(tileProps).forEach((layerId) => {\r\n        let props = tileProps[layerId];\r\n        if(props.hasOwnProperty('battleback2Name')) {\r\n            battleback = props.battleback2Name;\r\n        }\r\n    })\r\n    if(battleback || battleback === '') {\r\n        return battleback;\r\n    }\r\n    return _battleback2Name.call(this);\r\n};\r\n","let _initMembers = Game_Player.prototype.initMembers;\nGame_Player.prototype.initMembers = function() {\n    _initMembers.call(this);\n    this._newWaypoint = '';\n}\n\nlet _checkEventTriggerHere = Game_Player.prototype.checkEventTriggerHere;\nGame_Player.prototype.checkEventTriggerHere = function (triggers) {\n    _checkEventTriggerHere.call(this, triggers);\n    this._checkMapLevelChangingHere();\n};\n\nGame_Player.prototype._checkMapLevelChangingHere = function () {\n    let oldLevel = $gameMap.currentMapLevel;\n    $gameMap.checkMapLevelChanging(this.x, this.y);\n    TiledManager.triggerListener(this, 'levelchanged', {\n        oldLevel,\n        newLevel: $gameMap.currentMapLevel\n    })\n};\n\nGame_Player.prototype.isOnHealFloor = function() {\n    return $gameMap.isHealFloor(this.x, this.y) && !this.isInAirship();\n};\n\nlet _getOnVehicle = Game_Player.prototype.getOnVehicle\nGame_Player.prototype.getOnVehicle = function() {\n    if(!$gameMap.isTiledMap()) {\n        return _getOnVehicle.call(this);\n    }\n    var direction = this.direction();\n    var x1 = this.x;\n    var y1 = this.y;\n    var x2 = $gameMap.roundXWithDirection(x1, direction);\n    var y2 = $gameMap.roundYWithDirection(y1, direction);\n    if ($gameMap.airship().pos(x1, y1)) {\n        this._vehicleType = 'airship';\n    } else if ($gameMap.ship().pos(x2, y2)) {\n        this._vehicleType = 'ship';\n    } else if ($gameMap.boat().pos(x2, y2)) {\n        this._vehicleType = 'boat';\n    } else {\n        let vehicles = $gameMap.vehicles(true);\n        vehicles.forEach(vehicleName => {\n            let vehicle = $gameMap.vehicle(vehicleName);\n            if(vehicle.vehicleData) {\n                if(!vehicle.vehicleData.hasOwnProperty('hasCollision') || vehicle.vehicleData.hasCollision === 'true' || vehicle.vehicleData.hasCollision === true) {\n                    if(vehicle.pos(x2, y2)) {\n                        this._vehicleType = vehicleName;\n                    }\n                } else {\n                    if(vehicle.pos(x1, y1)) {\n                        this._vehicleType = vehicleName;\n                    }\n                }\n            } else if(vehicle.pos(x2, y2)) {\n                this._vehicleType = vehicleName;\n            }\n        })\n    }\n    if (this.isInVehicle()) {\n        this._vehicleGettingOn = true;\n        if (!this.isInAirship()) {\n            this.forceMoveForward();\n        }\n        this.gatherFollowers();\n    }\n    return this._vehicleGettingOn;\n};\n\nlet _gamePlayerTriggerTouchActionD2 = Game_Player.prototype.triggerTouchActionD2\nGame_Player.prototype.triggerTouchActionD2 = function(x2, y2) {\n    if(!$gameMap.isTiledMap()) {\n        return _gamePlayerTriggerTouchActionD2.call(this, x2, y2);\n    }\n    if ($gameMap.boat().pos(x2, y2) || $gameMap.ship().pos(x2, y2)) {\n        if (TouchInput.isTriggered() && this.getOnVehicle()) {\n            return true;\n        }\n    }\n    if (this.isInBoat() || this.isInShip()) {\n        if (TouchInput.isTriggered() && this.getOffVehicle()) {\n            return true;\n        }\n    }\n    let vehicles = $gameMap.vehicles(true);\n    for(var idx = 0; idx < vehicles.length; idx++) {\n        let vehicle = $gameMap.vehicle(vehicles[idx]);\n        if(!vehicle.vehicleData ||\n            !vehicle.vehicleData.hasOwnProperty('hasCollision') ||\n            vehicle.vehicleData.hasCollision === 'true' ||\n            vehicle.vehicleData.hasCollision === true\n        ) {\n            if(vehicle.pos(x2, y2) && TouchInput.isTriggered() && this.getOnVehicle()) {\n                return true;\n            }\n            if(this._vehicleType === vehicles[idx] && TouchInput.isTriggered() && this.getOffVehicle()) {\n                return true;\n            }\n        }\n    }\n    this.checkEventTriggerThere([0,1,2]);\n    return $gameMap.setupStartingEvent();\n};\n\n\nlet _isInVehicle = Game_Player.prototype.isInVehicle\nGame_Player.prototype.isInVehicle = function() {\n    if(!$gameMap.isTiledMap()) {\n        return _isInVehicle.call(this);\n    }\n    return $gameMap.vehicles(true).indexOf(this._vehicleType) > -1;\n};\n\nlet _reserveTransfer = Game_Player.prototype.reserveTransfer\nGame_Player.prototype.reserveTransfer = function(mapId, x, y, d, fadeType, waypoint = '') {\n    _reserveTransfer.call(this, mapId, x, y, d, fadeType);\n    this._newWaypoint = waypoint;\n}\n\nGame_Player.prototype.performTransfer = function() {\n    if (this.isTransferring()) {\n        this.setDirection(this._newDirection);\n        if (this._newMapId !== $gameMap.mapId() || this._needsMapReload) {\n            $gameMap.setup(this._newMapId);\n            this._needsMapReload = false;\n        }\n        let newX = this._newX;\n        let newY = this._newY;\n        if($gameMap.isTiledMap()) {\n            if(this._newWaypoint) {\n                let waypoint = $gameMap.waypoint(this._newWaypoint);\n                if(waypoint) {\n                    newX = waypoint.x;\n                    newY = waypoint.y;\n                }\n            }\n            let offsets = $gameMap.offsets();\n            if(offsets && offsets.hasOwnProperty('x') && offsets.hasOwnProperty('y')) {\n                newX-= offsets.x;\n                newY-= offsets.y;\n            }\n        }\n        this.locate(newX, newY);\n        this.refresh();\n        this.clearTransferInfo();\n    }\n};\n\nlet _clearTransferInfo = Game_Player.prototype.clearTransferInfo;\nGame_Player.prototype.clearTransferInfo = function() {\n    _clearTransferInfo.call(this);\n    this._newWaypoint = '';\n}","\nGame_Screen.prototype.startFlashForHeal = function() {\n    this.startFlash([128, 192, 255, 128], 8);\n};\n","let _initialize = Game_Vehicle.prototype.initialize\nGame_Vehicle.prototype.initialize = function(type, vehicleData = false) {\n    if(vehicleData) {\n        this.vehicleData = vehicleData;\n    }\n    _initialize.call(this, type);\n};\n\nlet _initMoveSpeed = Game_Vehicle.prototype.initMoveSpeed\nGame_Vehicle.prototype.initMoveSpeed = function() {\n    _initMoveSpeed.call(this);\n    if(!!this.vehicleData && this.vehicleData.moveSpeed) {\n        this.setMoveSpeed(parseInt(this.vehicleData.moveSpeed));\n    }\n};\n\nlet _vehicle = Game_Vehicle.prototype.vehicle\nGame_Vehicle.prototype.vehicle = function() {\n    var vehicleData = _vehicle.call(this);\n    if(!vehicleData && !!this.vehicleData) {\n        return this.vehicleData;\n    }\n    return vehicleData;\n};\n\nlet _isMapPassable = Game_Vehicle.prototype.isMapPassable\nGame_Vehicle.prototype.isMapPassable = function(x, y, d, render = false) {\n    if(!$gameMap.isTiledMap()) {\n        return _isMapPassable.call(this, x, y, d);\n    }\n    var x2 = $gameMap.roundXWithDirection(x, d);\n    var y2 = $gameMap.roundYWithDirection(y, d);\n    if (this.isBoat()) {\n        return $gameMap.isBoatPassable(x2, y2, render);\n    } else if (this.isShip()) {\n        return $gameMap.isShipPassable(x2, y2, render);\n    } else if (this.isAirship()) {\n        return true;\n    } else {\n        var vehicleData = this.vehicle();\n        if(!!vehicleData) {\n            if(!!vehicleData.tileFlag) {\n                return $gameMap.checkHasTileFlag(x2, y2, vehicleData.tileFlag, render);\n            }\n            if(vehicleData.tileFlag === '') {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n\nGame_Vehicle.prototype.loadSystemSettings = function() {\n    var vehicle = (window.$dataSystem ? this.vehicle() : null);\n    if(vehicle) {\n        this._mapId = vehicle.startMapId;\n        this.setPosition(vehicle.startX, vehicle.startY);\n        this.setImage(vehicle.characterName, vehicle.characterIndex);\n    }\n};\n\nlet _resetDirection = Game_Vehicle.prototype.resetDirection\nGame_Vehicle.prototype.resetDirection = function() {\n    if(!!this.vehicleData && !!this.vehicleData.direction) {\n        this.setDirection(parseInt(this.vehicleData.direction));\n    } else {\n        _resetDirection.call(this)\n    }\n};\n\nGame_Vehicle.prototype.getOff = function() {\n    this._driving = false;\n    this.setWalkAnime(false);\n    this.setStepAnime(false);\n    if(!this.vehicleData || !this.vehicleData.hasOwnProperty('resetDirection') || this.vehicleData.resetDirection === 'true') {\n        this.resetDirection();\n    }\n    $gameSystem.replayWalkingBgm();\n};\n","ImageManager.loadParserTileset = function (path, hue) {\n    if (!path) {\n        return this.loadEmptyBitmap();\n    }\n    let paths = path.split(\"/\");\n    while(paths[0] === '..') {\n        paths.shift();\n    }\n    let filename = paths[paths.length - 1];\n    let realPath = \"img/tilesets/\" + filename;\n    if(paths[0] === 'img') {\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\n    }\n\n    return this.loadNormalBitmap(realPath, hue);\n};\n\nImageManager.loadParserParallax = function (path, hue) {\n    if (!path) {\n        return this.loadEmptyBitmap();\n    }\n    let paths = path.split(\"/\");\n    while(paths[0] === '..') {\n        paths.shift();\n    }\n    let filename = paths[paths.length - 1];\n    let realPath = \"img/parallaxes/\" + filename;\n    if(paths[0] === 'img') {\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\n    }\n\n    return this.loadNormalBitmap(realPath, hue);\n};","let _update = Sprite_Character.prototype.update\nSprite_Character.prototype.update = function() {\n\t_update.call(this);\n\tthis.locationHeight = this._character.locationHeight();\n}","//-----------------------------------------------------------------------------\n// Sprite_TiledPriorityTile\n//\n// The sprite for displaying a priority tile.\n\nfunction Sprite_TiledPriorityTile() {\n    this.initialize.apply(this, arguments);\n}\n\nSprite_TiledPriorityTile.prototype = Object.create(Sprite_Base.prototype);\nSprite_TiledPriorityTile.prototype.constructor = Sprite_TiledPriorityTile;\n\nwindow.Sprite_TiledPriorityTile = Sprite_TiledPriorityTile;\n\nSprite_TiledPriorityTile.prototype.updateVisibility = function() {\n    let visibility = false;\n    if(this.layerId > -1) {\n        visibility = true;\n        let props = $gameMap.getLayerProperties(this.layerId);\n        if(props.transition) {\n            visibility = props.minAlpha > 0 || props.transitionPhase > 0;\n            this.opacity = 255 * (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\n        } else {\n            let layer = $gameMap.tiledData.layers[this.layerId];\n            visibility = !TiledManager.checkLayerHidden(layer);\n        }\n    }\n    this.visible = visibility;\n};\n","import TiledTilemap from \"./TiledTilemap\";\n\nlet _initialize = Spriteset_Battle.prototype.initialize\nSpriteset_Battle.prototype.initialize = function() {\n    this._parallaxContainers = {};\n    _initialize.call(this);\n}\n\nlet _createTilemap = Spriteset_Map.prototype.createTilemap;\nSpriteset_Map.prototype.createTilemap = function () {\n    if (!$gameMap.isTiledMap()) {\n        _createTilemap.call(this);\n        return;\n    }\n    this._tilemap = new TiledTilemap($gameMap.tiledData, $gameMap.layers);\n    this._tilemap.horizontalWrap = $gameMap.isLoopHorizontal();\n    this._tilemap.verticalWrap = $gameMap.isLoopVertical();\n    this.loadTileset();\n    this._baseSprite.addChild(this._tilemap);\n};\n\nlet _loadTileset = Spriteset_Map.prototype.loadTileset;\nSpriteset_Map.prototype.loadTileset = function () {\n    if (!$gameMap.isTiledMap()) {\n        _loadTileset.call(this);\n        return;\n    }\n\n    let i = 0;\n    for (let tileset of $gameMap.tiledData.tilesets) {\n        if(tileset.properties && tileset.properties.ignoreLoading) {\n            continue;\n        }\n        if(tileset.image) {\n            let bitmap = ImageManager.loadParserTileset(tileset.image, 0);\n            this._tilemap.bitmaps.push(bitmap);\n            this._tilemap.indexedBitmaps[i] = bitmap;\n        } else {\n            this._tilemap.indexedBitmaps[i] = [];\n            for(let tile = 0; tile < tileset.tilecount; tile++) {\n                if(tileset.tiles[tile]) {\n                    let bitmap = ImageManager.loadParserTileset(tileset.tiles[tile].image, 0);\n                    this._tilemap.bitmaps.push(bitmap);\n                    this._tilemap.indexedBitmaps[i][tile] = bitmap;\n                }\n            }\n        }\n        i++;\n    }\n    this._tilemap.refreshTileset();\n    this._tileset = $gameMap.tiledData.tilesets;\n};\n\nlet _update = Spriteset_Map.prototype.update;\nSpriteset_Map.prototype.update = function () {\n    _update.call(this);\n    //Disabed updateHideOnLevel, since it got moved to the general layer hide functions\n    //this._updateHideOnLevel();\n    this._updateHideOnSpecial();\n    this._tilemap.updateImageLayer();\n};\n\nSpriteset_Map.prototype.updateTileset = function () {\n    if (this._tileset !== $gameMap.tiledData.tilesets) {\n        this.loadTileset();\n    }\n};\n\nSpriteset_Map.prototype._updateHideOnLevel = function () {\n    this._tilemap.hideOnLevel($gameMap.currentMapLevel);\n};\n\nSpriteset_Map.prototype._updateHideOnSpecial = function () {\n    if($gamePlayer && $gameMap) {\n        this._tilemap.hideOnSpecial();\n    }\n};\n","//-----------------------------------------------------------------------------\r\n// TiledManager\r\n//\r\n// The static class that manages TileD data, including extensions.\r\n\r\nfunction TiledManager() {\r\n    throw new Error('This is a static class');\r\n}\r\n\r\nwindow.TiledManager = TiledManager;\r\n\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nlet _listeners = {}\r\nlet _hideFunctions = {}\r\nlet _hideIgnoreFunctions = {\r\n    regions: [],\r\n    collisions: [],\r\n    levelChanges: [],\r\n    tileFlags: []\r\n}\r\nlet _tileFlags = {}\r\nlet _tileFlagIndex = 1;\r\nlet _vehicles = {};\r\nlet _vehiclesByIndex = [];\r\n\r\nlet _autoFunctions = {};\r\n\r\nlet _pluginCommands = {};\r\n\r\nlet _fullVehicleData = {\r\n    bgm: {\r\n        name: '',\r\n        pan: 0,\r\n        pitch: 100,\r\n        volume: 90\r\n    },\r\n    characterIndex: 0,\r\n    characterName:\"\",\r\n    startMapId: 0,\r\n    startX: 0,\r\n    startY: 0\r\n};\r\n\r\nlet _processEncoding = {\r\n\tbase64: function(data) {\r\n\t\tlet decodedData = atob(data);\r\n\t\tlet newData = [];\r\n\t\tfor (let idx = 0; idx < decodedData.length; idx+= 4) {\r\n\t\t\tnewData.push(decodedData.charCodeAt(idx) | ((decodedData.charCodeAt(idx + 1) || 0) << 8) | ((decodedData.charCodeAt(idx + 2) || 0) << 16) | ((decodedData.charCodeAt(idx + 3) || 0) << 24));\r\n\t\t}\r\n\t\treturn newData;\r\n\t}\r\n};\r\n\r\nlet _registeredObjectResolvers = [];\r\n\r\nTiledManager.addListener = function(objectName, event, callback, recursive = true) {\r\n    if(typeof objectName === 'function') {\r\n        objectName = objectName.name\r\n    }\r\n    if(!_listeners[objectName]) {\r\n        _listeners[objectName] = {}\r\n    }\r\n    if(!_listeners[objectName][event]) {\r\n        _listeners[objectName][event] = []\r\n    }\r\n    callback.recursive = !!recursive\r\n    _listeners[objectName][event].push(callback)\r\n}\r\n\r\nTiledManager.triggerListener = function(object, event, options = {}) {\r\n\r\n    // Handle static classes such as managers\r\n    let isStatic = object.constructor.name === \"Function\";\r\n    let objectName = isStatic ? object.name : object.constructor.name;\r\n\r\n    if(!_listeners[objectName] || !_listeners[objectName][event]) {\r\n        return false\r\n    }\r\n\r\n    if (isStatic) {\r\n        _listeners[objectName][event].forEach(callback => {\r\n            if (top || callback.recursive) {\r\n                callback.call(object, options)\r\n            }\r\n        })\r\n    } else {\r\n        let top = true\r\n        let proto = object.__proto__\r\n        while(proto) {\r\n            objectName = proto.constructor.name\r\n            if(_listeners[objectName] && _listeners[objectName][event]) {\r\n                _listeners[objectName][event].forEach(callback => {\r\n                    if(top || callback.recursive) {\r\n                        callback.call(object, options)\r\n                    }\r\n                })\r\n            }\r\n            top = false\r\n            proto = proto.__proto__\r\n        }\r\n    }\r\n}\r\n\r\nTiledManager.addHideFunction = function(id, callback, ignore = []) {\r\n    _hideFunctions[id] = callback\r\n\r\n    ignore.forEach((type) => {\r\n        _hideIgnoreFunctions[type].push(id)\r\n    })\r\n}\r\n\r\nTiledManager.checkLayerHidden = function(layerData, ignore = []) {\r\n    if(typeof ignore === 'string') {\r\n        ignore = _hideIgnoreFunctions[ignore] || []\r\n    }\r\n    let keys = Object.keys(_hideFunctions);\r\n    let data = false;\r\n    for(let idx = 0; idx < keys.length; idx++) {\r\n        if(ignore.indexOf(keys) !== -1) {\r\n            continue;\r\n        }\r\n        if(layerData.properties && layerData.properties.hasOwnProperty(keys[idx])) {\r\n            data = data || _hideFunctions[keys[idx]](layerData);\r\n        }\r\n        if(data) {\r\n            return data;\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\nTiledManager.hasHideProperties = function(layerData) {\r\n    return (layerData.properties && (\r\n        Object.keys(_hideFunctions).filter(key => {\r\n            return layerData.properties.hasOwnProperty(key)\r\n        }).length > 0)\r\n    );\r\n}\r\n\r\nTiledManager.processTiledData = function(parentLayer = false) {\r\n    if(!parentLayer) {\r\n        parentLayer = $gameData.tiledData\r\n    }\r\n    if(!parentLayer) {\r\n        return;\r\n    }\r\n    for(var idx = 0; idx < parentLayer.layers.length; idx++) {\r\n        let layer = parentLayer.layers[idx];\r\n        if(layer.type === 'group') {\r\n\t\t\tTiledManager.processTiledData(layer);\r\n\t\t\tArray.prototype.splice.apply(parentLayer.layers, [idx, 1].concat(layer.layers))\r\n\t\t\tidx+= layer.layers.length - 1;\r\n        } else if(layer.type === 'tilelayer') {\r\n\t\t\tlet encoding = layer.encoding || '';\r\n\t\t\tif(encoding && _processEncoding.hasOwnProperty(encoding)) {\r\n\t\t\t\tlet encFunc = _processEncoding[encoding];\r\n\t\t\t\tif(layer.data) {\r\n\t\t\t\t\tlayer.data = encFunc(layer.data);\r\n\t\t\t\t} else if(layer.chunks) {\r\n\t\t\t\t\tlayer.chunks.forEach(chunk => {\r\n\t\t\t\t\t\tchunk.data = encFunc(chunk.data);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n\r\n        // Trigger listener that a layer has been processed.\r\n        TiledManager.triggerListener(TiledManager, \"tiledlayerdataprocessed\", layer, parentLayer);\r\n    }\r\n    $gameMap.initializeMapProperties();\r\n    $gameMap.initializeInfiniteMap();\r\n}\r\n\r\nTiledManager.extractTileId = function(layerData, i) {\r\n\tif(layerData.data) {\r\n\t\treturn layerData.data[i];\r\n\t} else {\r\n\t\tlet x = i % $gameMap.width();\r\n\t\tlet y = Math.floor(i / $gameMap.width());\r\n\t\tlet offsets = $gameMap.offsets();\r\n\t\tx+= offsets.x;\r\n\t\ty+= offsets.y;\r\n\t\tif(x < layerData.startx || y < layerData.starty || x >= layerData.startx + layerData.width || y >= layerData.starty + layerData.height) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tfor(let chunkIdx = 0; chunkIdx < layerData.chunks.length; chunkIdx++) {\r\n\t\t\tlet chunk = layerData.chunks[chunkIdx];\r\n\t\t\tif(x < chunk.x || y < chunk.y || x >= chunk.x + chunk.width || y >= chunk.y + chunk.height) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\treturn chunk.data[x - chunk.x + (y - chunk.y) * chunk.width];\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n/* TILE FLAGS */\r\n\r\nTiledManager.addFlag = function(...flagIds) {\r\n    flagIds.forEach(flagId => {\r\n        _tileFlags[flagId] = _tileFlagIndex++;\r\n    })\r\n}\r\n\r\nTiledManager.getFlag = function(flagId) {\r\n    return _tileFlags[flagId];\r\n}\r\n\r\nTiledManager.getFlagNames = function() {\r\n    return Object.keys(_tileFlags);\r\n}\r\n\r\nTiledManager.getFlagLocation = function(flagId) {\r\n    let flag = _tileFlags[flagId]\r\n    let bit = (1 << (flag % 16)) & 0xffff;\r\n    let group = Math.floor(flag / 16);\r\n    return [group, bit];\r\n}\r\n\r\nTiledManager.getParameterFlags = function() {\r\n    if(!!pluginParams['Custom Tile Flags']) {\r\n        let tileFlags = JSON.parse(pluginParams['Custom Tile Flags']);\r\n        TiledManager.addFlag.apply(this, tileFlags);\r\n    }\r\n}\r\n\r\n/* VEHICLES */\r\nTiledManager.createVehicle = function(vehicleName, vehicleData = false) {\r\n    if(!vehicleData) {\r\n        vehicleData = Object.assign({}, _fullVehicleData, {\r\n            bgm: Object.assign({}, _fullVehicleData.bgm)\r\n        });\r\n    } else if(vehicleData !== true) {\r\n        vehicleData = Object.assign({}, _fullVehicleData, vehicleData, {\r\n            bgm: Object.assign({}, _fullVehicleData.bgm, vehicleData.bgm)\r\n        });\r\n    }\r\n    let vehicle = new Game_Vehicle(vehicleName, vehicleData);\r\n    _vehicles[vehicleName] = vehicle;\r\n    _vehiclesByIndex.push(vehicleName);\r\n};\r\n\r\nTiledManager.refreshVehicles = function(vehicles = []) {\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            _vehicles[vehicleName].refresh();\r\n        }\r\n    });\r\n};\r\n\r\nTiledManager.getAllVehicles = function(vehicles = []) {\r\n    let returnVehicles = [];\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            returnVehicles.push(_vehicles[vehicleName]);\r\n        }\r\n    });\r\n    return returnVehicles;\r\n};\r\n\r\nTiledManager.getVehicle = function(id) {\r\n    if(isNaN(id)) {\r\n        if(_vehicles[id]) {\r\n            return _vehicles[id];\r\n        }\r\n    } else {\r\n        if(id < _vehiclesByIndex.length) {\r\n            return _vehicles[_vehiclesByIndex[id]];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nTiledManager.updateVehicles = function(vehicles = []) {\r\n    _vehiclesByIndex.forEach(vehicleName => {\r\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\r\n            _vehicles[vehicleName].update();\r\n        }\r\n    });\r\n}\r\n\r\nTiledManager.getParameterVehicles = function() {\r\n    if(!!pluginParams['Custom Vehicles']) {\r\n        let vehicles = JSON.parse(pluginParams['Custom Vehicles']);\r\n        vehicles.forEach(vehicle => {\r\n            let vehicleData = JSON.parse(vehicle);\r\n            TiledManager.createVehicle(vehicleData.vehicleName, vehicleData);\r\n        })\r\n    }\r\n}\r\n\r\nTiledManager.setAutoFunction = function(identifier, functions = {}) {\r\n    _autoFunctions[identifier] = functions;\r\n}\r\n\r\nTiledManager.getAutoFunction = function(identifier) {\r\n    return _autoFunctions[identifier] || false;\r\n}\r\n\r\n/* Tiled Object Handlers */\r\nTiledManager.objectResolvers = {};\r\n\r\n/**\r\n * Registers an object resolver that will pre-process a tiled object.\r\n * The object resolver should return true if it processed the object, so then\r\n * other resolvers won't be called.\r\n * @param {(object, map)=>boolean} resolver\r\n */\r\nTiledManager.registerTiledObjectResolver = function (resolver) {\r\n    _registeredObjectResolvers.push(resolver);\r\n}\r\n\r\n/**\r\n * Object resolver for handling waypoints\r\n * @param {*} object \r\n * @param {*} map \r\n */\r\nTiledManager.objectResolvers.waypoint = function (object, map) {\r\n    if (object.properties && object.properties.waypoint) {\r\n\r\n        let x = object.x / map.tileWidth();\r\n        let y = object.y / map.tileHeight();\r\n        if (pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\r\n            x = Math.floor(x);\r\n            y = Math.floor(y);\r\n        }\r\n\r\n        map._waypoints[object.properties.waypoint] = { x, y }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Object resolver for mapping to an existing event\r\n * @param {*} object \r\n * @param {*} map \r\n */\r\nTiledManager.objectResolvers.eventId = function (object, map) {\r\n    if (object.properties && object.properties.eventId) {\r\n        let event;\r\n        let eventId = parseInt(object.properties.eventId);\r\n        event = map._events[eventId];\r\n\r\n        if (event) {\r\n            let x = object.x / map.tileWidth() - map._offsets.x;\r\n            let y = object.y / map.tileHeight() - map._offsets.y;\r\n            if (pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\r\n                x = Math.floor(x);\r\n                y = Math.floor(y);\r\n            }\r\n            if (map.isHalfTile()) {\r\n                x += 1;\r\n                y += 1;\r\n            }\r\n\r\n            event.locate(x, y);\r\n\r\n            event._tiledProperties = object.properties;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * Object resolver for mapping a vehicle\r\n * @param {*} object \r\n * @param {*} map \r\n */\r\nTiledManager.objectResolvers.vehicle = function (object, map) {\r\n    if (object.properties && object.properties.vehicle) {\r\n        let event = map.vehicle(object.properties.vehicle);\r\n        map._vehicles.push(object.properties.vehicle);\r\n\r\n        if (event) {\r\n            let x = object.x / map.tileWidth() - map._offsets.x;\r\n            let y = object.y / map.tileHeight() - map._offsets.y;\r\n            if (pluginParams[\"Constrain Events to Grid\"].toLowerCase() === \"true\") {\r\n                x = Math.floor(x);\r\n                y = Math.floor(y);\r\n            }\r\n            if (map.isHalfTile()) {\r\n                x += 1;\r\n                y += 1;\r\n            }\r\n\r\n            event.loadSystemSettings();\r\n            event.setLocation(map.mapId(), x, y);\r\n\r\n            event._tiledProperties = object.properties;\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nTiledManager.registerStandardResolvers = function() {\r\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.waypoint);\r\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.eventId);\r\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.vehicle);\r\n}\r\n\r\nTiledManager.processTiledObject = function (object, map) {\r\n    _registeredObjectResolvers.some(r => r(object, map));\r\n}\r\n\r\n/* PLUGIN COMMANDS */\r\n\r\nTiledManager.addPluginCommand = function(command, func) {\r\n    _pluginCommands[command] = func;\r\n}\r\n\r\nTiledManager.pluginCommand = function(command, args) {\r\n    if(_pluginCommands.hasOwnProperty(command)) {\r\n        _pluginCommands[command].call(this, args);\r\n    }\r\n}","export default class TiledMapImage {\r\n    constructor(layer) {\r\n        this.name = layer.name;\r\n        this.x = layer.x;\r\n        this.y = layer.y;\r\n        this.z = 0;\r\n        this.offsetX = layer.offsetx || 0;\r\n        this.offsetY = layer.offsety || 0;\r\n        this.image = layer.image;\r\n        this.opacity = layer.opacity;\r\n        this.autoX = 0;\r\n        this.autoY = 0;\r\n        this.deltaX = 1;\r\n        this.deltaY = 1;\r\n        this.repeatX = false;\r\n        this.repeatY = false;\r\n        this.viewportX = 0;\r\n        this.viewportY = 0;\r\n        this.viewportWidth = 0;\r\n        this.viewportHeight = 0;\r\n        this.viewportDeltaX = 0;\r\n        this.viewportDeltaY = 0;\r\n        this.ignoreLoading = false;\r\n        if (layer.properties) {\r\n            [\r\n                'autoX',\r\n                'autoY',\r\n                'deltaX',\r\n                'deltaY',\r\n                'repeatX',\r\n                'repeatY',\r\n                'viewportX',\r\n                'viewportY',\r\n                'viewportWidth',\r\n                'viewportHeight',\r\n                'viewportDeltaX',\r\n                'viewportDeltaY',\r\n                'hue',\r\n                'ignoreLoading',\r\n            ].forEach((prop => {\r\n                if (typeof layer.properties[prop] !== 'undefined') {\r\n                    this[prop] = layer.properties[prop];\r\n                }\r\n            }));\r\n\r\n            this.z = layer.z || layer.properties.zIndex || this.z;\r\n        }\r\n        this.visible = layer.visible;\r\n    }\r\n\r\n    get baseX() {\r\n        return this.x + this.offsetX;\r\n    }\r\n\r\n    get baseY() {\r\n        return this.y + this.offsetY;\r\n    }\r\n}","export default class TiledMapLayer {\r\n    constructor(layer, gameMap) {\r\n        this.name = layer.name;\r\n    }\r\n}","export default class TiledTileLayer extends PIXI.tilemap.CompositeRectTileLayer {\n    constructor(zIndex, bitmaps, useSquare, texPerChild) {\n        super(zIndex, bitmaps, useSquare, texPerChild)\n    }\n\n    renderWebGL(renderer) {\n        var alpha = this.alpha;\n        var props = $gameMap.getLayerProperties(this.layerId);\n        if(props.transition) {\n            alpha-= props.minAlpha\n            alpha*= (props.transitionPhase / props.transition)\n            alpha+= props.minAlpha\n        }\n        var gl = renderer.gl;\n        var shader = renderer.plugins.tilemap.getShader(this.useSquare);\n        renderer.setObjectRenderer(renderer.plugins.tilemap);\n        renderer.bindShader(shader);\n        this._globalMat = this._globalMat || new PIXI.Matrix();\n        renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\n        shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\n        shader.uniforms.shadowColor = this.shadowColor;\n        shader.uniforms.uAlpha = alpha;\n        if (this.useSquare) {\n            var tempScale = this._tempScale = (this._tempScale || [0, 0]);\n            tempScale[0] = this._globalMat.a >= 0 ? 1 : -1;\n            tempScale[1] = this._globalMat.d < 0 ? 1 : -1;\n            var ps = shader.uniforms.pointScale = tempScale;\n            shader.uniforms.projectionScale = Math.abs(this.worldTransform.a) * renderer.resolution;\n        }\n        var af = shader.uniforms.animationFrame = renderer.plugins.tilemap.tileAnim;\n        var layers = this.children;\n        for (var i = 0; i < layers.length; i++) {\n            layers[i].renderWebGL(renderer, this.useSquare);\n        }\n    }\n}","import TiledTileShader from './TiledTileShader';\r\n\r\nclass TiledTileRenderer extends PIXI.tilemap.TileRenderer {\r\n    onContextChange() {\r\n        var gl = this.renderer.gl;\r\n        var maxTextures = this.maxTextures;\r\n        this.rectShader = new TiledTileShader(gl, maxTextures, false);\r\n        this.squareShader = new TiledTileShader(gl, maxTextures, true);\r\n        this.checkIndexBuffer(2000);\r\n        this.rectShader.indexBuffer = this.indexBuffer;\r\n        this.squareShader.indexBuffer = this.indexBuffer;\r\n        this.vbs = {};\r\n        this.glTextures = [];\r\n        this.boundSprites = [];\r\n        this.initBounds();\r\n    }\r\n}\r\n\r\nPIXI.WebGLRenderer.registerPlugin('tilemap', TiledTileRenderer);\r\n","const GLBuffer = PIXI.glCore.GLBuffer;\nconst VertexArrayObject = PIXI.glCore.VertexArrayObject;\n\nvar squareShaderFrag = `\nvarying vec2 vTextureCoord;\nvarying float vSize;\nvarying float vTextureId;\n\nuniform vec4 shadowColor;\nuniform sampler2D uSamplers[%count%];\nuniform vec2 uSamplerSize[%count%];\nuniform vec2 pointScale;\nuniform float uAlpha;\n\nvoid main(void){\n   float margin = 0.5 / vSize;\n   vec2 pointCoord = (gl_PointCoord - 0.5) * pointScale + 0.5;\n   vec2 clamped = vec2(clamp(pointCoord.x, margin, 1.0 - margin), clamp(pointCoord.y, margin, 1.0 - margin));\n   vec2 textureCoord = pointCoord * vSize + vTextureCoord;\n   float textureId = vTextureId;\n   vec4 color;\n   %forloop%\n   gl_FragColor = color * uAlpha;\n}\n`\n\nvar squareShaderVert = `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec2 aAnim;\nattribute float aTextureId;\nattribute float aSize;\n\nuniform mat3 projectionMatrix;\nuniform vec2 samplerSize;\nuniform vec2 animationFrame;\nuniform float projectionScale;\n\nvarying vec2 vTextureCoord;\nvarying float vSize;\nvarying float vTextureId;\n\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition + aSize * 0.5, 1.0)).xy, 0.0, 1.0);\n   gl_PointSize = aSize * projectionScale;\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\n   vTextureId = aTextureId;\n   vSize = aSize;\n}\n`\nvar rectShaderFrag = `\nvarying vec2 vTextureCoord;\nvarying vec4 vFrame;\nvarying float vTextureId;\nuniform vec4 shadowColor;\nuniform sampler2D uSamplers[%count%];\nuniform vec2 uSamplerSize[%count%];\nuniform float uAlpha;\nvoid main(void){\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\n   float textureId = floor(vTextureId + 0.5);\n   vec4 color;\n   %forloop%\n   gl_FragColor = color * uAlpha;\n}\n`;\n\nvar rectShaderVert = `\nattribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aFrame;\nattribute vec2 aAnim;\nattribute float aTextureId;\nuniform mat3 projectionMatrix;\nuniform vec2 animationFrame;\nvarying vec2 vTextureCoord;\nvarying float vTextureId;\nvarying vec4 vFrame;\nvoid main(void){\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n   vec2 anim = aAnim * animationFrame;\n   vTextureCoord = aTextureCoord + anim;\n   vFrame = aFrame + vec4(anim, anim);\n   vTextureId = aTextureId;\n}\n`;\nexport default class TiledTileShader extends PIXI.tilemap.TilemapShader {\n\n    constructor(gl, maxTextures, useSquare) {\n        let vert = useSquare ? squareShaderVert : rectShaderVert;\n        let frag = useSquare ? squareShaderFrag : rectShaderFrag;\n        super(gl,\n            maxTextures,\n            vert,\n            PIXI.tilemap.shaderGenerator.generateFragmentSrc(maxTextures, frag)\n        );\n        if(useSquare) {\n            this.vertSize = 8;\n            this.vertPerQuad = 1;\n            this.anim = 5;\n            this.textureId = 7;\n        } else {\n            this.vertSize = 11;\n            this.vertPerQuad = 4;\n            this.anim = 8;\n            this.textureId = 10;\n        }\n        this.maxTextures = maxTextures;\n        this.stride = this.vertSize * 4;\n        this.useSquare = useSquare;\n        PIXI.tilemap.shaderGenerator.fillSamplers(this, this.maxTextures);\n    }\n\n    createVao(renderer, vb) {\n        return this.useSquare ? this.createVaoSquare(renderer, vb) : this.createVaoRect(renderer, vb);\n    }\n\n    createVaoRect(renderer, vb) {\n        var gl = renderer.gl;\n        return renderer.createVao()\n            .addIndex(this.indexBuffer)\n            .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\n            .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\n            .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\n            .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, this.anim * 4)\n            .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, this.textureId * 4);\n    }\n\n    createVaoSquare(renderer, vb) {\n        var gl = renderer.gl;\n        return renderer.createVao()\n            .addIndex(this.indexBuffer)\n            .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\n            .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\n            .addAttribute(vb, this.attributes.aSize, gl.FLOAT, false, this.stride, 4 * 4)\n            .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, 5 * 4)\n            .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, 7 * 4);\n    }\n}","import TiledTileLayer from \"../TiledTileLayer\";\r\n\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n/**\r\n * This class handles the tilemap\r\n */\r\nexport default class TiledTilemap extends ShaderTilemap {\r\n    initialize(tiledData, layers) {\r\n        this.indexedBitmaps = [];\r\n        this._tiledData = {};\r\n        this._layers = [];\r\n        this._imageLayers = [];\r\n        this._objectTiles = [];\r\n        this._priorityTiles = [];\r\n        this._priorityTilesCount = 0;\r\n        this.tiledData = tiledData;\r\n        this.layers = layers;\r\n        super.initialize();\r\n        this.setupTiled();\r\n    }\r\n\r\n    get tiledData() {\r\n        return this._tiledData;\r\n    }\r\n\r\n    set tiledData(val) {\r\n        this._tiledData = val;\r\n        this.setupTiled();\r\n    }\r\n\r\n    setupTiled() {\r\n        this._setupSize();\r\n        this._setupAnim();\r\n    }\r\n\r\n    _setupSize() {\r\n        let width = this._width;\r\n        let height = this._height;\r\n        let margin = this._margin;\r\n        let tileCols = Math.ceil(width / this._tileWidth) + 1;\r\n        let tileRows = Math.ceil(height / this._tileHeight) + 1;\r\n        this._tileWidth = this.tiledData.tilewidth;\r\n        this._tileHeight = this.tiledData.tileheight;\r\n        this._layerWidth = tileCols * this._tileWidth;\r\n        this._layerHeight = tileRows * this._tileHeight;\r\n        this._mapWidth = this.tiledData.width;\r\n        this._mapHeight = this.tiledData.height;\r\n    }\r\n\r\n    _setupAnim() {\r\n        this._animFrame = {};\r\n        this._animDuration = {};\r\n    }\r\n\r\n    _createLayers() {\r\n        let id = 0;\r\n        this._needsRepaint = true;\r\n\r\n        let parameters = PluginManager.parameters('ShaderTilemap');\r\n        let useSquareShader = Number(parameters.hasOwnProperty('squareShader') ? parameters['squareShader'] : 1);\r\n\r\n        for (let layerData of this.tiledData.layers) {\r\n            let zIndex = 0;\r\n            if (layerData.type === \"imagelayer\") {\r\n                this._createImageLayer(id);\r\n                id++;\r\n                continue;\r\n            }\r\n            if (layerData.type != \"tilelayer\") {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.zIndex) {\r\n                zIndex = parseInt(layerData.properties.zIndex);\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.collision) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.toLevel) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && !!layerData.properties.regionId) {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            if (!!layerData.properties && layerData.properties.tileFlags === 'hide') {\r\n                id++;\r\n                continue;\r\n            }\r\n\r\n            let layer = new TiledTileLayer(zIndex, [], useSquareShader, 32);\r\n            layer.layerId = id; // @dryami: hack layer index\r\n            layer.spriteId = Sprite._counter++;\r\n            layer.alpha = layerData.opacity;\r\n            this._layers.push(layer);\r\n            this.addChild(layer);\r\n            id++;\r\n        }\r\n\r\n        this._createPriorityTiles();\r\n    }\r\n\r\n    _createPriorityTiles() {\r\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\r\n        let zIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n        if(size > 0) {\r\n            for (let x of Array(size).keys()) {\r\n                let sprite = new Sprite_TiledPriorityTile();\r\n                sprite.z = sprite.zIndex = zIndex;\r\n                sprite.layerId = -1;\r\n                sprite.hide();\r\n                this.addChild(sprite);\r\n                this._priorityTiles.push(sprite);\r\n            }\r\n        }\r\n    }\r\n\r\n    _hackRenderer(renderer) {\r\n        return renderer;\r\n    }\r\n\r\n    refreshTileset() {\r\n        var bitmaps = this.indexedBitmaps.map(function (x) {\r\n            if(Array.isArray(x)) {\r\n                return x.map(function(y) {\r\n                    return y._baseTexture ? new PIXI.Texture(y._baseTexture) : y;\r\n                })\r\n            }\r\n            return x._baseTexture ? new PIXI.Texture(x._baseTexture) : x;\r\n        });\r\n        for (let layer of this._layers) {\r\n            let props = $gameMap.getLayerProperties(layer.layerId);\r\n            let tilesetBitmaps = [];\r\n            if(!props.tilesets) {\r\n                continue;\r\n            }\r\n            props.tilesets.forEach(tilesetId => {\r\n                tilesetBitmaps.push(bitmaps[tilesetId]);\r\n            })\r\n            layer.setBitmaps(tilesetBitmaps);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        this._updateAnim();\r\n    }\r\n\r\n    _updateAnim() {\r\n        let needRefresh = false;\r\n        for (let key in this._animDuration) {\r\n            this._animDuration[key] -= 1;\r\n            if (this._animDuration[key] <= 0) {\r\n                this._animFrame[key] += 1;\r\n                needRefresh = true;\r\n            }\r\n        }\r\n\r\n        if (needRefresh) {\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    _updateLayerPositions(startX, startY) {\r\n        let ox = 0;\r\n        let oy = 0;\r\n        if (this.roundPixels) {\r\n            ox = Math.floor(this.origin.x);\r\n            oy = Math.floor(this.origin.y);\r\n        } else {\r\n            ox = this.origin.x;\r\n            oy = this.origin.y;\r\n        }\r\n\r\n        for (let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            let offsetX = layerData.offsetx || 0;\r\n            let offsetY = layerData.offsety || 0;\r\n            layer.position.x = startX * this._tileWidth - ox + offsetX;\r\n            layer.position.y = startY * this._tileHeight - oy + offsetY;\r\n        }\r\n\r\n        for (let sprite of this._priorityTiles) {\r\n            let layerData = this.tiledData.layers[sprite.layerId];\r\n            let offsetX = layerData ? layerData.offsetx || 0 : 0;\r\n            let offsetY = layerData ? layerData.offsety || 0 : 0;\r\n            sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + sprite.width / 2;\r\n            sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + sprite.height;\r\n        }\r\n    }\r\n\r\n    _paintAllTiles(startX, startY) {\r\n        this._priorityTilesCount = 0;\r\n        for (let layer of this._layers) {\r\n            layer.clear();\r\n            this._paintTiles(layer, startX, startY);\r\n        }\r\n        let id = 0;\r\n        for (let layerData of this.tiledData.layers) {\r\n            if (layerData.type != \"objectgroup\") {\r\n                id++;\r\n                continue;\r\n            }\r\n            this._paintObjectLayers(id, startX, startY);\r\n            id++;\r\n        }\r\n        while (this._priorityTilesCount < this._priorityTiles.length) {\r\n            let sprite = this._priorityTiles[this._priorityTilesCount];\r\n            sprite.hide();\r\n            sprite.layerId = -1;\r\n            this._priorityTilesCount++;\r\n        }\r\n    }\r\n\r\n    _paintTiles(layer, startX, startY) {\r\n        let layerData = this.tiledData.layers[layer.layerId];\r\n\r\n        if (!layerData.visible) {\r\n            return;\r\n        }\r\n\r\n        if (layerData.type == \"tilelayer\") {\r\n            this._paintTilesLayer(layer, startX, startY);\r\n        }\r\n    }\r\n\r\n    _paintObjectLayers(layerId, startX, startY) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        let objects = layerData.objects || [];\r\n\r\n        for (let obj of objects) {\r\n            if (!obj.gid) {\r\n                continue;\r\n            }\r\n            if (!obj.visible) {\r\n                continue;\r\n            }\r\n            let tileId = obj.gid;\r\n            let realTileId = tileId & 0x1FFFFFFF;\r\n            let textureId = this._getTextureId(realTileId);\r\n            let offsets = $gameMap.offsets();\r\n            let dx = obj.x - (startX + offsets.x) * this._tileWidth;\r\n            let dy = obj.y - (startY + offsets.y) * this._tileHeight - obj.height;\r\n            let positionHeight = 0;\r\n            let zIndex = false;\r\n            if(obj.properties) {\r\n                if(obj.properties.positionHeight) {\r\n                    positionHeight = obj.properties.positionHeight;\r\n                }\r\n                if(obj.properties.hasOwnProperty('zIndex')) {\r\n                    zIndex = obj.properties.zIndex;\r\n                }\r\n            }\r\n            this._paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight, zIndex);\r\n        }\r\n    }\r\n\r\n    _paintTilesLayer(layer, startX, startY) {\r\n        let tileCols = Math.ceil(this._width / this._tileWidth) + 1;\r\n        let tileRows = Math.ceil(this._height / this._tileHeight) + 1;\r\n\r\n        for (let y of Array(tileRows).keys()) {\r\n            for (let x of Array(tileCols).keys()) {\r\n                this._paintTile(layer, startX, startY, x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    _paintTile(layer, startX, startY, x, y) {\r\n        let mx = x + startX;\r\n        let my = y + startY;\r\n        if (this.horizontalWrap) {\r\n            mx = mx.mod(this._mapWidth);\r\n        }\r\n        if (this.verticalWrap) {\r\n            my = my.mod(this._mapHeight);\r\n        }\r\n        let tilePosition = mx + my * this._mapWidth;\r\n        let tileId = TiledManager.extractTileId(this.tiledData.layers[layer.layerId], tilePosition);\r\n        let rectLayer = layer.children[0];\r\n        let textureId = 0;\r\n        let props = $gameMap.getLayerProperties(layer.layerId);\r\n\r\n        if (!tileId) {\r\n            return;\r\n        }\r\n\r\n        // TODO: Problem with offsets\r\n        if (mx < 0 || mx >= this._mapWidth || my < 0 || my >= this._mapHeight) {\r\n            return;\r\n        }\r\n\r\n        textureId = this._getTextureId(tileId);\r\n        let tileset = this.tiledData.tilesets[textureId];\r\n        let dx = x * this._tileWidth;\r\n        let dy = y * this._tileHeight;\r\n        let w = tileset.tilewidth;\r\n        let h = tileset.tileheight;\r\n        let tileCols = tileset.columns;\r\n        let rId = this._getAnimTileId(textureId, tileId - tileset.firstgid);\r\n        let ux = (rId % tileCols) * w;\r\n        let uy = Math.floor(rId / tileCols) * h;\r\n\r\n        if (this._isPriorityTile(layer.layerId)) {\r\n            let positionHeight = 0;\r\n            if(this.tiledData.layers[layer.layerId].properties.positionHeight) {\r\n                positionHeight+= this.tiledData.layers[layer.layerId].properties.positionHeight || 0\r\n            }\r\n            if(tileset.tileproperties &&\r\n                tileset.tileproperties[tileId - tileset.firstgid] &&\r\n                tileset.tileproperties[tileId - tileset.firstgid].positionHeight) {\r\n                positionHeight+= tileset.tileproperties[tileId - tileset.firstgid].positionHeight || 0\r\n            }\r\n            this._paintPriorityTile(layer.layerId, textureId, tileId, startX, startY, dx, dy, positionHeight);\r\n            return;\r\n        }\r\n\r\n        if(props.tilesets && props.tilesets.indexOf(textureId) > -1) {\r\n            textureId = props.tilesets.indexOf(textureId);\r\n        }\r\n        \r\n        rectLayer.addRect(textureId, ux, uy, dx, dy, w, h);\r\n    }\r\n\r\n    _paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight = 0, zIndex = false) {\r\n        let tileset = this.tiledData.tilesets[textureId];\r\n        let tileOrientation = (tileId >> 24) & 0xe0;\r\n        let realTileId = tileId & 0x1FFFFFFF;\r\n        var tile = tileset.tiles ? tileset.tiles[realTileId - tileset.firstgid] || {} : {};\r\n        let w = tile.imagewidth || tileset.tilewidth;\r\n        let h = tile.imageheight || tileset.tileheight;\r\n        let tileCols = tileset.columns;\r\n        let rId = this._getAnimTileId(textureId, realTileId - tileset.firstgid);\r\n        let ux = (rId % tileCols) * w;\r\n        let uy = Math.floor(rId / tileCols) * h;\r\n        let sprite = this._priorityTiles[this._priorityTilesCount];\r\n        let layerData = this.tiledData.layers[layerId];\r\n        let offsetX = layerData ? layerData.offsetx || 0 : 0;\r\n        let offsetY = layerData ? layerData.offsety || 0 : 0;\r\n        let ox = 0;\r\n        let oy = 0;\r\n        let flipH = tileOrientation === 0x20 || ((tileOrientation & 0x80) > 0);\r\n        let flipV = tileOrientation === 0x20 || ((tileOrientation & 0x40) > 0);\r\n        if (this.roundPixels) {\r\n            ox = Math.floor(this.origin.x);\r\n            oy = Math.floor(this.origin.y);\r\n        } else {\r\n            ox = this.origin.x;\r\n            oy = this.origin.y;\r\n        }\r\n\r\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\r\n        if(this._priorityTilesCount >= this._priorityTiles.length) {\r\n            if (size > 0) {\r\n                return;\r\n            } else {\r\n                sprite = new Sprite_TiledPriorityTile();\r\n                sprite.z = sprite.zIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n                this.addChild(sprite);\r\n                this._priorityTiles.push(sprite);\r\n            }\r\n        }\r\n\r\n        sprite.layerId = layerId;\r\n        sprite.anchor.x = 0.5;\r\n        sprite.anchor.y = (flipV ? 0.0 : 1.0);\r\n        sprite.origX = dx;\r\n        sprite.origY = dy;\r\n        sprite.scale.x = (flipH ? -1 : 1);\r\n        sprite.scale.y = (flipV ? -1 : 1);\r\n        sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + w / 2;\r\n        sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + h;\r\n        \r\n        let realTextureId = this._getTextureId(realTileId, true);\r\n        if(Array.isArray(this.indexedBitmaps[realTextureId])) {\r\n            var tile = tileset.tiles[realTileId - tileset.firstgid];\r\n            sprite.bitmap = this.indexedBitmaps[realTextureId][realTileId - tileset.firstgid];\r\n            sprite.setFrame(0, 0, tile.imagewidth, tile.imageheight);\r\n        } else {\r\n            sprite.bitmap = this.indexedBitmaps[realTextureId];\r\n            sprite.setFrame(ux, uy, w, h);\r\n        }\r\n        sprite.priority = this._getPriority(layerId);\r\n        sprite.z = sprite.zIndex = (zIndex !== false ? zIndex : this._getZIndex(layerId));\r\n        sprite.positionHeight = positionHeight;\r\n        sprite.show();\r\n\r\n        this._priorityTilesCount += 1;\r\n    }\r\n\r\n    _getTextureId(tileId, ignore = false) {\r\n        let textureId = 0;\r\n        for (let tileset of this.tiledData.tilesets) {\r\n            if (ignore && tileset.properties && tileset.properties.ignoreLoading) {\r\n                continue;\r\n            }\r\n            if (tileId < tileset.firstgid\r\n                || tileId >= tileset.firstgid + tileset.tilecount) {\r\n                textureId++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        return textureId;\r\n    }\r\n\r\n    _getAnimTileId(textureId, tileId) {\r\n        let tilesData = this.tiledData.tilesets[textureId].tiles;\r\n        if (!tilesData) {\r\n            return tileId;\r\n        }\r\n        if (!tilesData[tileId]) {\r\n            return tileId;\r\n        }\r\n        if (!tilesData[tileId].animation) {\r\n            return tileId;\r\n        }\r\n        let animation = tilesData[tileId].animation;\r\n        this._animFrame[tileId] = this._animFrame[tileId] || 0;\r\n        let frame = this._animFrame[tileId];\r\n        this._animFrame[tileId] = !!animation[frame] ? frame : 0;\r\n        frame = this._animFrame[tileId];\r\n        let duration = animation[frame].duration / 1000 * 60;\r\n        this._animDuration[tileId] = this._animDuration[tileId] || duration;\r\n        if (this._animDuration[tileId] <= 0) {\r\n            this._animDuration[tileId] = duration;\r\n        }\r\n        return animation[frame].tileid;\r\n    }\r\n\r\n    _getPriority(layerId) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        if (!layerData.properties) {\r\n            return 0;\r\n        }\r\n        if (!layerData.properties.priority) {\r\n            return 0;\r\n        }\r\n        return parseInt(layerData.properties.priority)\r\n    }\r\n\r\n    _isPriorityTile(layerId) {\r\n        let playerZIndex = parseInt(pluginParams[\"Z - Player\"]);\r\n        let zIndex = this._getZIndex(layerId);\r\n        return this._getPriority(layerId) > 0\r\n            && zIndex === playerZIndex;\r\n    }\r\n\r\n    _getZIndex(layerId) {\r\n        let layerData = this.tiledData.layers[layerId];\r\n        if (!layerData) {\r\n            return 0;\r\n        }\r\n        if (!layerData.properties || !layerData.properties.zIndex) {\r\n            return 0;\r\n        }\r\n        return parseInt(layerData.properties.zIndex);\r\n    }\r\n\r\n    /**\r\n     * Hides a layer based on the level the player is on\r\n     * \r\n     * This method has been deprecated in favor of the more general method.\r\n     */\r\n    hideOnLevel(level) {\r\n        let layerIds = [];\r\n        for (let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            if (layerData.properties && layerData.properties.hasOwnProperty(\"hideOnLevel\")) {\r\n                if (parseInt(layerData.properties.hideOnLevel) !== level) {\r\n                    if(layer.transition) {\r\n                        /* If this layer has a transition, we'll need to tell the layer that\r\n                           it's supposed to be showing. */\r\n                           layer.isShown = true;\r\n                    }\r\n                    this.addChild(layer);\r\n                    continue;\r\n                }\r\n                /* Since the layer is supposed to be hidden, let's first let it transition if\r\n                   it has a transition fadeout. */\r\n                if(layer.transition) {\r\n                    layer.isShown = false;\r\n                    if(layer.minAlpha > 0 || layer.transitionStep > 0) {\r\n                        this.addChild(layer)\r\n                        continue;\r\n                    }\r\n                }\r\n                /* Otherwise remove the layer and hide it */\r\n                layerIds.push(layer.layerId);\r\n                this.removeChild(layer);\r\n            }\r\n        }\r\n        this._priorityTiles.forEach(sprite => {\r\n            if(layerIds.indexOf(sprite.layerId) > -1) {\r\n                sprite.visible = true;\r\n            }\r\n        })\r\n    }\r\n    \r\n    /**\r\n     * Hides layers on certain special conditions\r\n     * \r\n     * This method will analyze each layer, then checks them with certain conditions. If\r\n     * they meet one condition, they will be hidden.\r\n     * \r\n     * It also handles fading in and out layers.\r\n     */\r\n    hideOnSpecial() {\r\n        /* Iterates through each layer */\r\n        for(let layer of this._layers) {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n\t\t\tif(layerData.properties) {\r\n                let hideLayer = TiledManager.checkLayerHidden(layerData);\r\n                \r\n\t\t\t\t/* If the layer has a hide property, run this code.\r\n\t\t\t\t * You don't need to run it for layers that don't have any properties that would\r\n\t\t\t\t   hide this layer. */\r\n\t\t\t\tif (TiledManager.hasHideProperties(layerData)) {\r\n\t\t\t\t\t/* If the layer isn't supposed to be hidden, add the layer to the container */\r\n                    let props = $gameMap.getLayerProperties(layer.layerId);\r\n\t\t\t\t\tif (!hideLayer) {\r\n                        if(props.transition) {\r\n                            /* If this layer has a transition, we'll need to tell the layer that\r\n                               it's supposed to be showing. */\r\n                               props.isShown = true;\r\n                        }\r\n\t\t\t\t\t\tthis.addChild(layer);\r\n\t\t\t\t\t\tcontinue;\r\n                    }\r\n                    /* Since the layer is supposed to be hidden, let's first let it transition if\r\n                       it has a transition fadeout. */\r\n                    if(props.transition) {\r\n                        props.isShown = false;\r\n                        if(props.minAlpha > 0 || props.transitionPhase > 0) {\r\n                            this.addChild(layer)\r\n                            continue;\r\n                        }\r\n                    }\r\n                    /* Otherwise remove the layer and hide it */\r\n\t\t\t\t\tthis.removeChild(layer);\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n    }\r\n\t\r\n    _compareChildOrder(a, b) {\r\n        if((this._layers.indexOf(a) > -1 || this._imageLayers.indexOf(a) > -1) &&\r\n            (this._layers.indexOf(b) > -1 || this._imageLayers.indexOf(b) > -1)) {\r\n            if ((a.z || 0) !== (b.z || 0)) {\r\n                return (a.z || 0) - (b.z || 0);\r\n            } else if ((a.priority || 0) !== (b.priority || 0)) {\r\n                return (a.priority || 0) - (b.priority || 0);\r\n            } else if((a.layerId || 0) !== (b.layerId || 0)) {\r\n                return (a.layerId || 0) - (b.layerId || 0);\r\n            } else {\r\n                return a.spriteId - b.spriteId;\r\n            }\r\n        } else if ((a.z || 0) !== (b.z || 0)) {\r\n            return (a.z || 0) - (b.z || 0);\r\n        } else if (((a.y || 0) + (a.positionHeight || 0)) !== ((b.y || 0) + (b.positionHeight || 0))) {\r\n            return ((a.y || 0) + (a.positionHeight || 0)) - ((b.y || 0) + (b.positionHeight || 0));\r\n        } else if ((a.priority || 0) !== (b.priority || 0)) {\r\n            return (a.priority || 0) - (b.priority || 0);\r\n        } else {\r\n            return a.spriteId - b.spriteId;\r\n        }\r\n    }\r\n\r\n    /* Parallax map stuff */\r\n\r\n    _createImageLayer(id) {\r\n        const imageLayer = this.layers[id];\r\n\r\n        if (imageLayer.ignoreLoading) {\r\n            return;\r\n        }\r\n\r\n        const props = $gameMap.getLayerProperties(id);\r\n\r\n        const repeatX = imageLayer.repeatX;\r\n        const repeatY = imageLayer.repeatY;\r\n        const autoX = imageLayer.autoX;\r\n        const autoY = imageLayer.autoY;\r\n\t\tlet viewportWidth = imageLayer.viewportWidth;\r\n\t\tlet viewportHeight = imageLayer.viewportHeight;\r\n\r\n        let layer;\r\n\r\n        if(!repeatX && !repeatY && !autoX && !autoY) {\r\n            layer = new Sprite_Base();\r\n        } else {\r\n            layer = new TilingSprite();\r\n            layer.move(0, 0, Graphics.width, Graphics.height);\r\n        }\r\n        layer.layerId = id;\r\n        layer.spriteId = Sprite._counter++;\r\n        layer.alpha = imageLayer.opacity;\r\n        layer.bitmap = ImageManager.loadParserParallax(imageLayer.image, imageLayer.hue);\r\n        layer.bitmap.addLoadListener(() => {\r\n            props.imageWidth = layer.bitmap.width;\r\n            props.imageHeight = layer.bitmap.height;\r\n        })\r\n        layer.baseX = imageLayer.baseX;\r\n        layer.baseY = imageLayer.baseY;\r\n        layer.z = imageLayer.z;\r\n        layer.repeatX = repeatX;\r\n        layer.repeatY = repeatY;\r\n        layer.deltaX = imageLayer.deltaX;\r\n        layer.deltaY = imageLayer.deltaY;\r\n        layer.stepAutoX = autoX;\r\n        layer.stepAutoY = autoY;\r\n        layer.autoX = 0;\r\n        layer.autoY = 0;\r\n\t\tif(viewportWidth || viewportHeight) {\r\n\t\t\tviewportWidth = viewportWidth || Graphics.width;\r\n\t\t\tviewportHeight = viewportHeight || Graphics.height;\r\n\t\t\tconst layerMask = new PIXI.Graphics();\r\n\t\t\tlayerMask.baseX = imageLayer.viewportX;\r\n\t\t\tlayerMask.baseY = imageLayer.viewportY;\r\n\t\t\tlayerMask.baseWidth = imageLayer.viewportWidth;\r\n\t\t\tlayerMask.baseHeight = imageLayer.viewportHeight;\r\n\t\t\tlayerMask.deltaX = imageLayer.viewportDeltaX;\r\n\t\t\tlayerMask.deltaY = imageLayer.viewportDeltaY;\r\n\t\t\tlayer.mask = layerMask;\r\n            layer.hasViewport = true;\r\n            console.log(layer, layerMask, imageLayer, this.tiledData.layers[id]);\r\n\t\t}\r\n        this._imageLayers.push(layer);\r\n        this.addChild(layer);\r\n    }\r\n\r\n    updateImageLayer() {\r\n        this._imageLayers.forEach(layer => {\r\n            let layerData = this.tiledData.layers[layer.layerId];\r\n            let props = $gameMap.getLayerProperties(layer.layerId);\r\n            if(TiledManager.hasHideProperties(layerData)) {\r\n                let visibility = TiledManager.checkLayerHidden(layerData);\r\n                if(props.transition) {\r\n                    layer.alpha = (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\r\n                    visibility = props.minAlpha > 0 || props.transitionPhase > 0;\r\n                }\r\n                layer.visible = visibility;\r\n            }\r\n\t\t\tlet offsets = $gameMap.offsets();\r\n\t\t\toffsets.x*= $gameMap.tileWidth();\r\n            offsets.y*= $gameMap.tileHeight();\r\n            let display = {\r\n                x: $gameMap.displayX() * $gameMap.tileWidth(),\r\n                y: $gameMap.displayY() * $gameMap.tileHeight()\r\n            }\r\n            if(!!layer.origin) {\r\n                let autoX = props.autoXFunction ? props.autoXFunction(props.autoX, props.autoY || 0) : 0;\r\n                let autoY = props.autoYFunction ? props.autoYFunction(props.autoX || 0, props.autoY) : 0;\r\n                if(!layer.repeatX) {\r\n                    layer.origin.x = layer.baseX - offsets.x + autoX;\r\n                    layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\r\n                    layer.width = layer.bitmap.width;\r\n                } else {\r\n                    layer.origin.x = layer.baseX - offsets.x + autoX + display.x * layer.deltaX;\r\n                    layer.x = 0;\r\n                    layer.width = Graphics.width;\r\n                }\r\n                if(!layer.repeatY) {\r\n                    layer.origin.y = layer.baseY - offsets.y + autoY;\r\n                    layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\r\n                    layer.height = layer.bitmap.height;\r\n                } else {\r\n                    layer.origin.y = layer.baseY - offsets.y + autoY + display.y * layer.deltaY;\r\n                    layer.y = 0;\r\n                    layer.height = Graphics.height;\r\n                }\r\n            } else {\r\n                layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\r\n                layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\r\n            }\r\n\t\t\tif(layer.hasViewport) {\r\n\t\t\t\tlet viewportX = layer.mask.baseX - offsets.x - display.x * layer.mask.deltaX;\r\n\t\t\t\tlet viewportY = layer.mask.baseY - offsets.y - display.y * layer.mask.deltaY;\r\n\t\t\t\tlayer.mask.clear();\r\n\t\t\t\tlayer.mask.beginFill(0xffffff, 1);\r\n\t\t\t\tlayer.mask.drawRect(viewportX, viewportY, layer.mask.baseWidth, layer.mask.baseHeight);\r\n\t\t\t}\r\n        })\r\n    }\r\n}","//-----------------------------------------------------------------------------\n// TilesetManager\n//\n// The static class that manages the TileD tilesets.\n\nfunction TilesetManager() {\n    throw new Error('This is a static class');\n}\n\nwindow.TilesetManager = TilesetManager;\nTilesetManager.tilesets = {};\n\nlet _getFilename = function(path) {\n    let paths = path.split(\"/\");\n    return paths[paths.length - 1];\n};\n\nlet _getRealPath = function(path) {\n    let pluginParams = PluginManager.parameters(\"YED_Tiled\");\n    return pluginParams[\"Tilesets Location\"] + _getFilename(path);\n};\n\nTilesetManager.getTileset = function(path) {\n    let realPath = _getRealPath(path);\n    return TilesetManager.tilesets[_getFilename(path)];\n};\n\nTilesetManager.loadTileset = function(path, callback = false) {\n    let realPath = _getRealPath(path);\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', './' + realPath);\n    xhr.overrideMimeType('application/json');\n\n    // on success callback\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            let tileset = false;\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\n                tileset = JSON.parse(xhr.responseText);\n                TilesetManager.tilesets[_getFilename(path)] = tileset;\n            }\n            if(callback) {\n                callback(tileset);\n            }\n        }\n    };\n\n    // send request\n    xhr.send();\n};\n","import \"./TilesetManager\";\r\nimport \"./DataManager\";\r\nimport \"./ImageManager\";\r\nimport \"./TiledManager\";\r\nimport \"./Sprite_TiledPriorityTile\";\r\nimport \"./AlphaFilter\";\r\nimport \"./TiledTileRenderer\";\r\nimport \"./Game_Map\";\r\nimport \"./Game_Screen\";\r\nimport \"./Game_CharacterBase\";\r\nimport \"./Game_Actor\";\r\nimport \"./Game_Player\";\r\nimport \"./Game_Vehicle\";\r\nimport \"./Game_Interpreter\";\r\nimport \"./Sprite_Character\";\r\nimport \"./Spriteset_Map\";\r\n\r\n/* INITIALIZES LISTENERS */\r\n\r\n// Add floor damage while on a slippery floor\r\nTiledManager.addListener(Game_Player, 'slipperyfloor', function(options) {\r\n    const d = options.direction\r\n    $gameParty.members().forEach(actor => {\r\n        actor.checkFloorEffect();\r\n    })\r\n    this.moveStraight(d);\r\n})\r\n\r\n/* INITIALIZES HIDE FUNCTIONS */\r\n\r\nTiledManager.addHideFunction('hideOnLevel', function(layerData) {\r\n    /* Hide if player is on certain level */\r\n    let level = $gameMap.currentMapLevel;\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.hideOnLevel) === level) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n});\r\n\r\nTiledManager.addHideFunction('showOnLevel', function(layerData) {\r\n    /* Show if player is on certain level */\r\n    let level = $gameMap.currentMapLevel;\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.showOnLevel) !== level) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n});\r\n\r\nTiledManager.addHideFunction('hideOnRegion', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionId = $gamePlayer.regionId();\r\n    let hideLayer = false;\r\n    if(parseInt(layerData.properties.hideOnRegion) === regionId) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnRegions', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionId = $gamePlayer.regionId();\r\n    let hideLayer = false;\r\n    if(layerData.properties.hideOnRegions.split(',').indexOf(String(regionId)) !== -1) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnAnyRegions', function(layerData) {\r\n    /* Hide if player is on certain region */\r\n    let regionIds = $gamePlayer.regionIds();\r\n    let hideLayer = false;\r\n    let regions = layerData.properties.hideOnRegions.split(',');\r\n    if(regions.filter(region => regionIds.indexOf(region) > -1).length > 0) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n}, ['regions'])\r\n\r\nTiledManager.addHideFunction('hideOnSwitch', function(layerData) {\r\n    /* Hide if switch is on */\r\n    let hideLayer = false;\r\n    if($gameSwitches.value(layerData.properties.hideOnSwitch)) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n})\r\n\r\nTiledManager.addHideFunction('showOnSwitch', function(layerData) {\r\n    /* Show if switch is on */\r\n    let hideLayer = false;\r\n    if(!$gameSwitches.value(layerData.properties.showOnSwitch)) {\r\n        hideLayer = true;\r\n    }\r\n    return hideLayer;\r\n})\r\n\r\n/* INITIALIZES FLAGS */\r\n\r\nTiledManager.addFlag('boat', 'ship', 'airship')\r\nTiledManager.addFlag('ladder', 'bush', 'counter', 'damage')\r\nTiledManager.addFlag('ice', 'autoDown', 'autoLeft', 'autoRight', 'autoUp')\r\nTiledManager.addFlag('heal')\r\n\r\n/* INITIALIZES VEHICLES */\r\n\r\nTiledManager.createVehicle('boat', true)\r\nTiledManager.createVehicle('ship', true)\r\nTiledManager.createVehicle('airship', true)\r\n\r\n/* INITIALIZES AUTO FUNCTIONS */\r\n\r\nTiledManager.setAutoFunction('linear', {\r\n    x: (x, y) => { return x; },\r\n    y: (x, y) => { return y; }\r\n})\r\n\r\nTiledManager.setAutoFunction('sine', {\r\n    x: (x, y) => { return Math.sin(x * Math.PI / 180); },\r\n    y: (x, y) => { return Math.sin(y * Math.PI / 180); }\r\n})\r\n\r\nTiledManager.setAutoFunction('cosine', {\r\n    x: (x, y) => { return Math.cos(x * Math.PI / 180); },\r\n    y: (x, y) => { return Math.cos(y * Math.PI / 180); }\r\n})\r\n\r\nTiledManager.registerStandardResolvers();\r\n\r\n/* INITIALIZES PLUGIN COMMANDS */\r\n\r\nTiledManager.addPluginCommand('TiledTransferPlayer', function(args) {\r\n    let mapId = parseInt(args[0]);\r\n    let waypoint = args[1];\r\n    let direction = args.length > 2 ? args[2] : 0;\r\n    let fadeType = args.length > 3 ? args[3] : 2;\r\n    if(isNaN(direction)) {\r\n        switch(direction.toLowerCase()) {\r\n            case 'down':\r\n                direction = 2;\r\n                break;\r\n            case 'left':\r\n                direction = 4;\r\n                break;\r\n            case 'right':\r\n                direction = 6;\r\n                break;\r\n            case 'up':\r\n                direction = 8;\r\n                break;\r\n            default:\r\n                direction = 0;\r\n                break;\r\n        }\r\n    } else {\r\n        direction = parseInt(direction);\r\n    }\r\n    if(isNaN(fadeType)) {\r\n        // Fix by FrillyWumpus\r\n        switch(fadeType.toLowerCase()) {\r\n            case 'black':\r\n                fadeType = 0;\r\n                break;\r\n            case 'white':\r\n                fadeType = 1;\r\n                break;\r\n            default:\r\n                fadeType = 2;\r\n                break;\r\n        }\r\n    } else {\r\n        fadeType = parseInt(fadeType);\r\n    }\r\n    $gamePlayer.reserveTransfer(mapId, 0, 0, direction, fadeType, waypoint);\r\n    this.setWaitMode('transfer');\r\n})\r\n\r\nTiledManager.addPluginCommand('TiledSetLevel', function (args) {\r\n    $gameMap.currentMapLevel = parseInt(args[0]);\r\n});\r\n\r\n/* LOAD CUSTOM DATA FROM THE PARAMTERS */\r\n\r\nTiledManager.getParameterFlags()\r\nTiledManager.getParameterVehicles()"],"sourceRoot":""}