{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/TilesetManager.js","webpack:///./src/DataManager.js","webpack:///./src/ImageManager.js","webpack:///./src/TiledManager.js","webpack:///./src/Sprite_TiledPriorityTile.js","webpack:///./src/AlphaFilter.js","webpack:///./src/TiledTilemap.js","webpack:///./src/helpers.js","webpack:///./src/TiledTileLayer.js","webpack:///./src/TiledTileShader.js","webpack:///./src/Game_Map.js","webpack:///./src/Game_Screen.js","webpack:///./src/Game_CharacterBase.js","webpack:///./src/Game_Actor.js","webpack:///./src/Game_Player.js","webpack:///./src/Game_Vehicle.js","webpack:///./src/Game_Interpreter.js","webpack:///./src/Sprite_Character.js","webpack:///./src/Spriteset_Map.js","webpack:///./src/ReflectionMask.js","webpack:///./src/Sprite_CharacterReflect.js"],"names":["TiledManager","addListener","Game_Player","options","d","direction","$gameParty","members","forEach","actor","checkFloorEffect","moveStraight","addHideFunction","layerData","level","$gameMap","currentMapLevel","hideLayer","parseInt","properties","hideOnLevel","showOnLevel","regionId","$gamePlayer","hideOnRegion","hideOnRegions","split","indexOf","String","regionIds","regions","filter","region","length","$gameSwitches","value","hideOnSwitch","showOnSwitch","addFlag","setAutoFunction","x","y","Math","sin","PI","cos","registerStandardResolvers","addPluginCommand","args","mapId","waypoint","fadeType","isNaN","toLowerCase","reserveTransfer","setWaitMode","getParameterFlags","initTiledManager","document","removeEventListener","window","createVehicle","getParameterVehicles","readyState","addEventListener","pluginParams","PluginManager","parameters","TilesetManager","Error","tilesets","tilesetLoading","_getFilename","path","paths","_getRealPath","getParam","getTileset","loadTileset","callback","realPath","xhr","XMLHttpRequest","open","overrideMimeType","onreadystatechange","tileset","status","responseText","JSON","parse","send","isReady","unload","DataManager","_tempTiledData","_tiledLoaded","loadMapData","call","loadTiledMapData","unloadTiledMapData","tilesetLoaded","idx","Object","assign","firstgid","processTiledData","triggerListener","tiledLoaded","source","bind","_isMapLoaded","isMapLoaded","defaultLoaded","ImageManager","loadParserTileset","hue","loadEmptyBitmap","shift","filename","slice","join","loadNormalBitmap","loadParserParallax","_listeners","_hideFunctions","_hideIgnoreFunctions","collisions","levelChanges","tileFlags","_tileFlags","_tileFlagIndex","_vehicles","_vehiclesByIndex","_autoFunctions","_pluginCommands","_fullVehicleData","bgm","name","pan","pitch","volume","characterIndex","characterName","startMapId","startX","startY","_processEncoding","base64","data","decodedData","atob","newData","push","charCodeAt","_registeredObjectResolvers","objectName","event","recursive","object","isStatic","constructor","top","proto","__proto__","id","ignore","type","checkLayerHidden","keys","hasOwnProperty","hasHideProperties","key","parentLayer","$gameData","tiledData","layers","layer","Array","prototype","splice","apply","concat","encoding","encFunc","chunks","chunk","extractTileId","i","width","floor","offsets","startx","starty","height","chunkIdx","flagIds","flagId","getFlag","getFlagNames","getFlagLocation","flag","bit","group","vehicleName","vehicleData","vehicle","Game_Vehicle","refreshVehicles","vehicles","refresh","getAllVehicles","returnVehicles","getVehicle","updateVehicles","update","identifier","functions","getAutoFunction","objectResolvers","registerTiledObjectResolver","resolver","map","tileWidth","tileHeight","_waypoints","eventId","_events","_offsets","isHalfTile","locate","_tiledProperties","loadSystemSettings","setLocation","processTiledObject","some","r","command","func","pluginCommand","param","defaultValue","Sprite_TiledPriorityTile","initialize","arguments","create","Sprite_Base","updateVisibility","visibility","layerId","props","getLayerProperties","transition","minAlpha","transitionPhase","opacity","baseAlpha","visible","fragmentSrc","PIXI","filters","AlphaFilter","alpha","glShaderKey","uniforms","uAlpha","Filter","TiledTilemap","indexedBitmaps","_tiledData","_layers","_imageLayers","_objectTiles","_priorityTiles","_priorityTilesCount","setupTiled","_setupSize","_setupAnim","_width","_height","margin","_margin","tileCols","ceil","_tileWidth","tileRows","_tileHeight","tilewidth","tileheight","_layerWidth","_layerHeight","_mapWidth","_mapHeight","_animFrame","_animDuration","_needsRepaint","useSquareShader","Number","zIndex","_createImageLayer","getProperty","_isReflectLayer","TiledTileLayer","spriteId","Sprite","_counter","addChild","_createPriorityTiles","size","sprite","z","hide","renderer","bitmaps","isArray","_baseTexture","Texture","tilesetBitmaps","tilesetId","setBitmaps","_updateAnim","needRefresh","ox","oy","roundPixels","origin","offsetX","offsetx","offsetY","offsety","position","origX","origY","clear","_paintTiles","_paintObjectLayers","_paintTilesLayer","objects","obj","gid","tileId","realTileId","textureId","_getTextureId","dx","dy","positionHeight","_paintPriorityTile","_paintTile","mx","my","horizontalWrap","mod","verticalWrap","tilePosition","rectLayer","children","w","h","columns","rId","_getAnimTileId","ux","uy","_isPriorityTile","tileproperties","addRect","tileOrientation","tile","tiles","imagewidth","imageheight","flipH","flipV","anchor","scale","realTextureId","bitmap","setFrame","priority","_getPriority","_getZIndex","show","ignoreLoading","tilecount","tilesData","animation","frame","duration","tileid","playerZIndex","layerIds","isShown","transitionStep","removeChild","a","b","repeatX","repeatY","deltaX","deltaY","autoX","autoY","viewportX","viewportY","viewportWidth","viewportHeight","viewportDeltaX","viewportDeltaY","TilingSprite","move","Graphics","image","addLoadListener","imageWidth","imageHeight","baseX","baseY","stepAutoX","stepAutoY","layerMask","baseWidth","baseHeight","mask","hasViewport","display","displayX","displayY","autoXFunction","autoYFunction","beginFill","drawRect","val","ShaderTilemap","propertyName","property","find","prop","useSquare","texPerChild","gl","tiledTileShader","TiledTileShader","plugins","tilemap","maxTextures","shader","setObjectRenderer","bindShader","_globalMat","Matrix","_activeRenderTarget","projectionMatrix","copy","append","worldTransform","toArray","shadowColor","tempScale","_tempScale","ps","pointScale","projectionScale","abs","resolution","af","animationFrame","tileAnim","renderWebGL","CompositeRectTileLayer","GLBuffer","glCore","VertexArrayObject","squareShaderFrag","squareShaderVert","rectShaderFrag","rectShaderVert","vert","frag","shaderGenerator","generateFragmentSrc","vertSize","vertPerQuad","anim","stride","fillSamplers","vb","createVao","addIndex","indexBuffer","addAttribute","attributes","aVertexPosition","FLOAT","aTextureCoord","aFrame","aAnim","aTextureId","TilemapShader","defineProperty","Game_Map","get","configurable","varID","_currentMapLevel","$gameVariables","set","setValue","_setup","setup","_tiledInitialized","_levels","_collisionMap","_arrowCollisionMap","_regions","_mapLevelChange","_positionHeightChange","_collisionMapLayers","_arrowCollisionMapLayers","_regionsLayers","_mapLevelChangeLayers","_positionHeightChangeLayers","_tileFlagsLayers","_reflection","_layerProperties","_autoSize","_autoSizeBorder","_camera","focus","isTiledMap","$dataMap","_setupTiled","_refreshList","character","refreshBushDepth","isTiledInitialized","setRefreshDepth","_initializeMapProperties","_initializeInfiniteMap","_setLayerProperties","_initializeMapLevel","_setupCollision","_setupRegion","_setupMapLevelChange","_setupTileFlags","_setupReflection","_setupTiledEvents","autoSize","border","infinite","_setMapSize","minX","minY","maxX","maxY","x1","y1","x2","y2","_cropInfiniteMap","min","max","autoBorder","autoSizeBorder","offset","limit","forward","vertical","o","s","realO","lineEmpty","empty","o2","coords","autoFunctions","layerProperties","minimumOpacity","autoSpeedX","funcX","autoFunctionX","autoFunction","tFuncX","both","Function","autoSpeedY","funcY","autoFunctionY","tFuncY","_getLayerTilesets","_getTilesetId","_initializeMapLevelData","dataTypes","defaultData","dataType","typeData","_setupCollisionFull","_setupCollisionArrow","halfWidth","halfHeight","collision","realX","ids","_getTileset","tileData","collisionUpLeft","collisionUpRight","collisionDownLeft","collisionDownRight","arrowImpassable","arrowCollisionMap","realBit","arrowImpassableDown","arrowImpassableLeft","arrowImpassableRight","arrowImpassableUp","regionMap","regionOffset","levelChangeMap","toLevel","_setupPositionHeightChange","positionHeightChangeMap","floorHeight","tileFlagMap","_getTileFlags","_combineFlags","flags","flagNames","toUpperCase","target","reflectionCast","reflectionMask","reflectionOpacity","reflectionOffset","rect","isOnReflection","mapX","_realX","mapY","_realY","reflection","inX","inY","getReflections","result","xBegin","yBegin","xEnd","yEnd","_regionId","allIds","index","regionLayer","regionValue","main","regionValues","hideData","getMapLevels","levels","sort","_checkPassage","checkPassage","render","arrows","arrowLayer","arrowValue","renderPassage","getPassageLayers","_isPassable","isPassable","collisionMap","collisionLayer","collisionValue","renderIsPassable","getIsPassableLayers","checkMapLevelChanging","mapLevelChange","mapLevelChangeLayer","mapLevelChangeValue","oldValue","oldLevel","newLevel","checkPositionHeight","positionHeightChange","positionHeightChangeLayer","positionHeightChangeValue","getTileFlags","tileFlagsLayer","tileFlagsValue","renderTileFlags","getTileFlagLayers","checkHasTileFlag","renderHasTileFlag","_isBoatPassable","isBoatPassable","renderIsBoatPassable","_isShipPassable","isShipPassable","renderIsShipPassable","_isAirshipLandOk","isAirshipLandOk","renderIsAirshipLandOk","_isLadder","isLadder","isValid","renderIsLadder","_isBush","isBush","renderIsBush","_isCounter","isCounter","renderIsCounter","_isDamageFloor","isDamageFloor","renderIsDamageFloor","isSlipperyFloor","renderIsSlipperyFloor","_isHealFloor","isHealFloor","getAllLayerProperties","ignoreHidden","getTileProperties","tileProperties","_createVehicles","createVehicles","_refreshVehicles","refereshVehicles","getNames","_vehicle","_boat","boat","_ship","ship","_airship","airship","_updateVehicles","_update","sceneActive","setLayerProperties","autoDuration","_battleback1Name","battleback1Name","tileProps","battleback","_battleback2Name","battleback2Name","Game_Screen","startFlashForHeal","startFlash","_initMembers","Game_CharacterBase","initMembers","reflections","screenZ","_priorityType","_distancePerFrame","distancePerFrame","distance","_refreshBushDepth","_bushDepth","_updateMove","updateMove","hori","_x","_y","isMoving","newLocationHeight","_locationHeight","updateReflection","locationHeight","_isCollideWithVehicles","isCollidedWithVehicles","hasCollision","posNt","updateScroll","lastScrolledX","lastScrolledY","scrolledX","scrolledY","centerY","scrollDown","centerX","scrollLeft","scrollRight","scrollUp","_checkFloorEffect","Game_Actor","isOnHealFloor","executeFloorHeal","heal","basicFloorHeal","fdr","maxFloorHeal","gainHp","performMapHeal","_getFloorHPCalculation","typeName","floorHP","actualHP","hp","round","pop","basicFloorDamage","actualDamage","actualHeal","mhp","inBattle","$gameScreen","_newWaypoint","_checkEventTriggerHere","checkEventTriggerHere","triggers","_checkMapLevelChangingHere","isInAirship","_getOnVehicle","getOnVehicle","roundXWithDirection","roundYWithDirection","pos","_vehicleType","isInVehicle","_vehicleGettingOn","forceMoveForward","gatherFollowers","_gamePlayerTriggerTouchActionD2","triggerTouchActionD2","TouchInput","isTriggered","isInBoat","isInShip","getOffVehicle","checkEventTriggerThere","setupStartingEvent","_isInVehicle","_reserveTransfer","performTransfer","isTransferring","setDirection","_newDirection","_newMapId","_needsMapReload","newX","_newX","newY","_newY","clearTransferInfo","_clearTransferInfo","_initialize","_initMoveSpeed","initMoveSpeed","moveSpeed","setMoveSpeed","_isMapPassable","isMapPassable","isBoat","isShip","isAirship","tileFlag","$dataSystem","_mapId","setPosition","setImage","_resetDirection","resetDirection","getOff","_driving","setWalkAnime","setStepAnime","$gameSystem","replayWalkingBgm","_pluginCommand","Game_Interpreter","Sprite_Character","_character","Spriteset_Battle","_parallaxContainers","_createTilemap","Spriteset_Map","createTilemap","_tilemap","isLoopHorizontal","isLoopVertical","_baseSprite","_reflectSurfaceSprite","createReflectionMask","_loadTileset","refreshTileset","_tileset","_updateHideOnSpecial","_updateReflectSurface","updateImageLayer","updateTileset","_updateHideOnLevel","hideOnSpecial","_isReflectSurface","reflectionSurface","newRectMask","maskId","_createCharacters","createCharacters","events","Sprite_CharacterReflect","_characterSprites","followers","reverseEach","follower","reflectMaskList","mapWidth","mapHeight","maskRect","endFill","maskTexture","RenderTexture","maskSprite","_renderer","updateReflect","screenX","screenY"],"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","file":"YED_Tiled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import \"./TilesetManager\";\nimport \"./DataManager\";\nimport \"./ImageManager\";\nimport \"./TiledManager\";\nimport \"./Sprite_TiledPriorityTile\";\nimport \"./AlphaFilter\";\nimport { TiledTilemap } from \"./TiledTilemap\";\nimport \"./Game_Map\";\nimport \"./Game_Screen\";\nimport \"./Game_CharacterBase\";\nimport \"./Game_Actor\";\nimport \"./Game_Player\";\nimport \"./Game_Vehicle\";\nimport \"./Game_Interpreter\";\nimport \"./Sprite_Character\";\nimport \"./Spriteset_Map\";\n\n/* INITIALIZES LISTENERS */\n\n// Add floor damage while on a slippery floor\nTiledManager.addListener(Game_Player, 'slipperyfloor', function(options) {\n    const d = options.direction\n    $gameParty.members().forEach(actor => {\n        actor.checkFloorEffect();\n    })\n    this.moveStraight(d);\n})\n\n/* INITIALIZES HIDE FUNCTIONS */\n\nTiledManager.addHideFunction('hideOnLevel', function(layerData) {\n    /* Hide if player is on certain level */\n    let level = $gameMap.currentMapLevel;\n    let hideLayer = false;\n    if(parseInt(layerData.properties.hideOnLevel) === level) {\n        hideLayer = true;\n    }\n    return hideLayer;\n});\n\nTiledManager.addHideFunction('showOnLevel', function(layerData) {\n    /* Show if player is on certain level */\n    let level = $gameMap.currentMapLevel;\n    let hideLayer = false;\n    if(parseInt(layerData.properties.showOnLevel) !== level) {\n        hideLayer = true;\n    }\n    return hideLayer;\n});\n\nTiledManager.addHideFunction('hideOnRegion', function(layerData) {\n    /* Hide if player is on certain region */\n    let regionId = $gamePlayer.regionId();\n    let hideLayer = false;\n    if(parseInt(layerData.properties.hideOnRegion) === regionId) {\n        hideLayer = true;\n    }\n    return hideLayer;\n}, ['regions'])\n\nTiledManager.addHideFunction('hideOnRegions', function(layerData) {\n    /* Hide if player is on certain region */\n    let regionId = $gamePlayer.regionId();\n    let hideLayer = false;\n    if(layerData.properties.hideOnRegions.split(',').indexOf(String(regionId)) !== -1) {\n        hideLayer = true;\n    }\n    return hideLayer;\n}, ['regions'])\n\nTiledManager.addHideFunction('hideOnAnyRegions', function(layerData) {\n    /* Hide if player is on certain region */\n    let regionIds = $gamePlayer.regionIds();\n    let hideLayer = false;\n    let regions = layerData.properties.hideOnRegions.split(',');\n    if(regions.filter(region => regionIds.indexOf(region) > -1).length > 0) {\n        hideLayer = true;\n    }\n    return hideLayer;\n}, ['regions'])\n\nTiledManager.addHideFunction('hideOnSwitch', function(layerData) {\n    /* Hide if switch is on */\n    let hideLayer = false;\n    if($gameSwitches.value(layerData.properties.hideOnSwitch)) {\n        hideLayer = true;\n    }\n    return hideLayer;\n})\n\nTiledManager.addHideFunction('showOnSwitch', function(layerData) {\n    /* Show if switch is on */\n    let hideLayer = false;\n    if(!$gameSwitches.value(layerData.properties.showOnSwitch)) {\n        hideLayer = true;\n    }\n    return hideLayer;\n})\n\n/* INITIALIZES FLAGS */\n\nTiledManager.addFlag('boat', 'ship', 'airship')\nTiledManager.addFlag('ladder', 'bush', 'counter', 'damage')\nTiledManager.addFlag('ice', 'autoDown', 'autoLeft', 'autoRight', 'autoUp')\nTiledManager.addFlag('heal')\n\n/* INITIALIZES AUTO FUNCTIONS */\n\nTiledManager.setAutoFunction('linear', {\n    x: (x, y) => { return x; },\n    y: (x, y) => { return y; }\n})\n\nTiledManager.setAutoFunction('sine', {\n    x: (x, y) => { return Math.sin(x * Math.PI / 180); },\n    y: (x, y) => { return Math.sin(y * Math.PI / 180); }\n})\n\nTiledManager.setAutoFunction('cosine', {\n    x: (x, y) => { return Math.cos(x * Math.PI / 180); },\n    y: (x, y) => { return Math.cos(y * Math.PI / 180); }\n})\n\nTiledManager.registerStandardResolvers();\n\n/* INITIALIZES PLUGIN COMMANDS */\n\nTiledManager.addPluginCommand('TiledTransferPlayer', function(args) {\n    let mapId = parseInt(args[0]);\n    let waypoint = args[1];\n    let direction = args.length > 2 ? args[2] : 0;\n    let fadeType = args.length > 3 ? args[3] : 2;\n    if(isNaN(direction)) {\n        switch(direction.toLowerCase()) {\n            case 'down':\n                direction = 2;\n                break;\n            case 'left':\n                direction = 4;\n                break;\n            case 'right':\n                direction = 6;\n                break;\n            case 'up':\n                direction = 8;\n                break;\n            default:\n                direction = 0;\n                break;\n        }\n    } else {\n        direction = parseInt(direction);\n    }\n    if(isNaN(fadeType)) {\n        // Fix by FrillyWumpus\n        switch(fadeType.toLowerCase()) {\n            case 'black':\n                fadeType = 0;\n                break;\n            case 'white':\n                fadeType = 1;\n                break;\n            default:\n                fadeType = 2;\n                break;\n        }\n    } else {\n        fadeType = parseInt(fadeType);\n    }\n    $gamePlayer.reserveTransfer(mapId, 0, 0, direction, fadeType, waypoint);\n    this.setWaitMode('transfer');\n})\n\nTiledManager.addPluginCommand('TiledSetLevel', function (args) {\n    $gameMap.currentMapLevel = parseInt(args[0]);\n});\n\n/* LOAD CUSTOM DATA FROM THE PARAMETERS */\n\nTiledManager.getParameterFlags()\n\n/* INITIALIZES VEHICLES (HAS TO BE RUN AFTER CONTENT IS READY) */\n\nconst initTiledManager = () => {\n    document.removeEventListener('DOMContentLoaded', initTiledManager);\n    window.removeEventListener('load', initTiledManager);\n    TiledManager.createVehicle('boat', true);\n    TiledManager.createVehicle('ship', true);\n    TiledManager.createVehicle('airship', true);\n    TiledManager.getParameterVehicles()\n}\n\nif (document.readyState === 'complete') {\n    initTiledManager();\n} else {\n    document.addEventListener('DOMContentLoaded', initTiledManager);\n    window.addEventListener('load', initTiledManager);\n}","const pluginParams = PluginManager.parameters(\"YED_Tiled\");\n//-----------------------------------------------------------------------------\n// TilesetManager\n//\n// The static class that manages the TileD tilesets.\n\nfunction TilesetManager() {\n    throw new Error('This is a static class');\n}\n\nwindow.TilesetManager = TilesetManager;\nTilesetManager.tilesets = {};\n\nlet tilesetLoading = 0;\n\nconst _getFilename = (path) => {\n    let paths = path.split(\"/\");\n    return paths[paths.length - 1];\n};\n\nconst _getRealPath = (path) => {\n    return TiledManager.getParam('Tilesets Location', 'tilesets/') + _getFilename(path);\n};\n\nTilesetManager.getTileset = function(path) {\n    return TilesetManager.tilesets[_getFilename(path)];\n};\n\nTilesetManager.loadTileset = function(path, callback = false) {\n    if (TilesetManager.tilesets[_getFilename(path)]) {\n        if (callback) {\n            callback(TilesetManager.tilesets[_getFilename(path)]);\n        }\n    }\n    let realPath = _getRealPath(path);\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', './' + realPath);\n    xhr.overrideMimeType('application/json');\n\n    tilesetLoading++;\n\n    // on success callback\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            tilesetLoading--;\n            let tileset = false;\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\n                tileset = JSON.parse(xhr.responseText);\n                TilesetManager.tilesets[_getFilename(path)] = tileset;\n            }\n            if(callback) {\n                callback(tileset);\n            }\n        }\n    };\n\n    // send request\n    xhr.send();\n};\n\nTilesetManager.isReady = () => {\n    return !tilesetLoading;\n}\n\nTilesetManager.unload = () => {\n    TilesetManager.tilesets = {};\n}\n","const pluginParams = PluginManager.parameters(\"YED_Tiled\");\nDataManager._tempTiledData = null;\nDataManager._tiledLoaded = false;\n\nconst loadMapData = DataManager.loadMapData;\n\n\nDataManager.loadMapData = function (mapId) {\n    loadMapData.call(this, mapId);\n    if (mapId > 0) {\n        this.loadTiledMapData(mapId);\n    } else {\n        this.unloadTiledMapData();\n    }\n};\n\nconst tilesetLoaded = (idx, tileset) => {\n    DataManager._tempTiledData.tilesets[idx] = Object.assign({}, tileset, {firstgid: DataManager._tempTiledData.tilesets[idx].firstgid});\n};\n\nDataManager.loadTiledMapData = function (mapId) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', \"./\" + TiledManager.getParam('Maps Location', 'maps/') + \"Map\" + mapId + \".json\");\n    xhr.overrideMimeType('application/json');\n\n    // on success callback\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200 || xhr.responseText !== \"\") {\n                DataManager._tempTiledData = JSON.parse(xhr.responseText);\n                TiledManager.processTiledData(DataManager._tempTiledData);\n                TiledManager.triggerListener(TiledManager, \"tiledmapdataprocessed\", DataManager._tempTiledData, mapId);\n            }\n            let tiledLoaded = true;\n            if(DataManager._tempTiledData && DataManager._tempTiledData.tilesets && DataManager._tempTiledData.tilesets.length > 0) {\n                for(var idx = 0; idx < DataManager._tempTiledData.tilesets.length; idx++) {\n                    let tileset = DataManager._tempTiledData.tilesets[idx];\n                    if(tileset.source) {\n                        TilesetManager.loadTileset(tileset.source, tilesetLoaded.bind(null, idx));\n                    }\n                }\n            }\n            DataManager._tiledLoaded = tiledLoaded;\n        }\n    };\n\n    // set data to null and send request\n    this.unloadTiledMapData();\n    xhr.send();\n};\n\nDataManager.unloadTiledMapData = function () {\n    DataManager._tempTiledData = null;\n    DataManager._tiledLoaded = false;\n\n    if ((pluginParams[\"Unload tilesets on map switch\"] || 'true').toLowerCase() === \"true\") {\n        TilesetManager.unload();\n    }\n};\n\nlet _isMapLoaded = DataManager.isMapLoaded;\nDataManager.isMapLoaded = function() {\n    let defaultLoaded = _isMapLoaded.call(this);\n    let tiledLoaded = DataManager._tiledLoaded;\n    let tilesetLoaded = TilesetManager.isReady();\n\n    return defaultLoaded && tiledLoaded && tilesetLoaded;\n};","ImageManager.loadParserTileset = function (path, hue) {\r\n    if (!path) {\r\n        return this.loadEmptyBitmap();\r\n    }\r\n    let paths = path.split(\"/\");\r\n    while(paths[0] === '..') {\r\n        paths.shift();\r\n    }\r\n    let filename = paths[paths.length - 1];\r\n    let realPath = \"img/tilesets/\" + filename;\r\n    if(paths[0] === 'img') {\r\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\r\n    }\r\n\r\n    return this.loadNormalBitmap(realPath, hue);\r\n};\r\n\r\nImageManager.loadParserParallax = function (path, hue) {\r\n    if (!path) {\r\n        return this.loadEmptyBitmap();\r\n    }\r\n    let paths = path.split(\"/\");\r\n    while(paths[0] === '..') {\r\n        paths.shift();\r\n    }\r\n    let filename = paths[paths.length - 1];\r\n    let realPath = \"img/parallaxes/\" + filename;\r\n    if(paths[0] === 'img') {\r\n        realPath = paths.slice(0, -1).join('/') + '/' + filename;\r\n    }\r\n\r\n    return this.loadNormalBitmap(realPath, hue);\r\n};","//-----------------------------------------------------------------------------\n// TiledManager\n//\n// The static class that manages TileD data, including extensions.\n\nfunction TiledManager() {\n    throw new Error('This is a static class');\n}\n\nwindow.TiledManager = TiledManager;\n\nconst pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nlet _listeners = {}\nlet _hideFunctions = {}\nlet _hideIgnoreFunctions = {\n    regions: [],\n    collisions: [],\n    levelChanges: [],\n    tileFlags: []\n}\nlet _tileFlags = {}\nlet _tileFlagIndex = 1;\nlet _vehicles = {};\nlet _vehiclesByIndex = [];\n\nlet _autoFunctions = {};\n\nlet _pluginCommands = {};\n\nlet _fullVehicleData = {\n    bgm: {\n        name: '',\n        pan: 0,\n        pitch: 100,\n        volume: 90\n    },\n    characterIndex: 0,\n    characterName:\"\",\n    startMapId: 0,\n    startX: 0,\n    startY: 0\n};\n\nlet _processEncoding = {\n\tbase64: function(data) {\n\t\tlet decodedData = atob(data);\n\t\tlet newData = [];\n\t\tfor (let idx = 0; idx < decodedData.length; idx+= 4) {\n\t\t\tnewData.push(decodedData.charCodeAt(idx) | ((decodedData.charCodeAt(idx + 1) || 0) << 8) | ((decodedData.charCodeAt(idx + 2) || 0) << 16) | ((decodedData.charCodeAt(idx + 3) || 0) << 24));\n\t\t}\n\t\treturn newData;\n\t}\n};\n\nlet _registeredObjectResolvers = [];\n\nTiledManager.addListener = function(objectName, event, callback, recursive = true) {\n    if(typeof objectName === 'function') {\n        objectName = objectName.name\n    }\n    if(!_listeners[objectName]) {\n        _listeners[objectName] = {}\n    }\n    if(!_listeners[objectName][event]) {\n        _listeners[objectName][event] = []\n    }\n    callback.recursive = !!recursive\n    _listeners[objectName][event].push(callback)\n}\n\nTiledManager.triggerListener = function(object, event, options = {}) {\n\n    // Handle static classes such as managers\n    let isStatic = object.constructor.name === \"Function\";\n    let objectName = isStatic ? object.name : object.constructor.name;\n\n    if(!_listeners[objectName] || !_listeners[objectName][event]) {\n        return false\n    }\n\n    if (isStatic) {\n        _listeners[objectName][event].forEach(callback => {\n            if (top || callback.recursive) {\n                callback.call(object, options)\n            }\n        })\n    } else {\n        let top = true\n        let proto = object.__proto__\n        while(proto) {\n            objectName = proto.constructor.name\n            if(_listeners[objectName] && _listeners[objectName][event]) {\n                _listeners[objectName][event].forEach(callback => {\n                    if(top || callback.recursive) {\n                        callback.call(object, options)\n                    }\n                })\n            }\n            top = false\n            proto = proto.__proto__\n        }\n    }\n}\n\nTiledManager.addHideFunction = function(id, callback, ignore = []) {\n    _hideFunctions[id] = callback\n\n    ignore.forEach((type) => {\n        _hideIgnoreFunctions[type].push(id)\n    })\n}\n\nTiledManager.checkLayerHidden = function(layerData, ignore = []) {\n    if(typeof ignore === 'string') {\n        ignore = _hideIgnoreFunctions[ignore] || []\n    }\n    let keys = Object.keys(_hideFunctions);\n    let data = false;\n    for(let idx = 0; idx < keys.length; idx++) {\n        if(ignore.indexOf(keys) !== -1) {\n            continue;\n        }\n        if(layerData.properties && layerData.properties.hasOwnProperty(keys[idx])) {\n            data = data || _hideFunctions[keys[idx]](layerData);\n        }\n        if(data) {\n            return data;\n        }\n    }\n    return data;\n}\n\nTiledManager.hasHideProperties = function(layerData) {\n    return (layerData.properties && (\n        Object.keys(_hideFunctions).filter(key => {\n            return layerData.properties.hasOwnProperty(key)\n        }).length > 0)\n    );\n}\n\nTiledManager.processTiledData = function(parentLayer = false) {\n    if(!parentLayer) {\n        parentLayer = $gameData.tiledData\n    }\n    if(!parentLayer) {\n        return;\n    }\n    for(var idx = 0; idx < parentLayer.layers.length; idx++) {\n        let layer = parentLayer.layers[idx];\n        if(layer.type === 'group') {\n\t\t\tTiledManager.processTiledData(layer);\n\t\t\tArray.prototype.splice.apply(parentLayer.layers, [idx, 1].concat(layer.layers))\n\t\t\tidx+= layer.layers.length - 1;\n        } else if(layer.type === 'tilelayer') {\n\t\t\tlet encoding = layer.encoding || '';\n\t\t\tif(encoding && _processEncoding.hasOwnProperty(encoding)) {\n\t\t\t\tlet encFunc = _processEncoding[encoding];\n\t\t\t\tif(layer.data) {\n\t\t\t\t\tlayer.data = encFunc(layer.data);\n\t\t\t\t} else if(layer.chunks) {\n\t\t\t\t\tlayer.chunks.forEach(chunk => {\n\t\t\t\t\t\tchunk.data = encFunc(chunk.data);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n        }\n\n        // Trigger listener that a layer has been processed.\n        TiledManager.triggerListener(TiledManager, \"tiledlayerdataprocessed\", layer, parentLayer);\n    }\n}\n\nTiledManager.extractTileId = function(layerData, i) {\n\tif(layerData.data) {\n\t\treturn layerData.data[i];\n\t} else {\n\t\tlet x = i % $gameMap.width();\n\t\tlet y = Math.floor(i / $gameMap.width());\n\t\tlet offsets = $gameMap.offsets();\n\t\tx+= offsets.x;\n\t\ty+= offsets.y;\n\t\tif(x < layerData.startx || y < layerData.starty || x >= layerData.startx + layerData.width || y >= layerData.starty + layerData.height) {\n\t\t\treturn 0;\n\t\t}\n\t\tfor(let chunkIdx = 0; chunkIdx < layerData.chunks.length; chunkIdx++) {\n\t\t\tlet chunk = layerData.chunks[chunkIdx];\n\t\t\tif(x < chunk.x || y < chunk.y || x >= chunk.x + chunk.width || y >= chunk.y + chunk.height) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn chunk.data[x - chunk.x + (y - chunk.y) * chunk.width];\n\t\t}\n\t\treturn 0;\n\t}\n}\n\n/* TILE FLAGS */\n\nTiledManager.addFlag = function(...flagIds) {\n    flagIds.forEach(flagId => {\n        _tileFlags[flagId] = _tileFlagIndex++;\n    })\n}\n\nTiledManager.getFlag = function(flagId) {\n    return _tileFlags[flagId];\n}\n\nTiledManager.getFlagNames = function() {\n    return Object.keys(_tileFlags);\n}\n\nTiledManager.getFlagLocation = function(flagId) {\n    let flag = _tileFlags[flagId]\n    let bit = (1 << (flag % 16)) & 0xffff;\n    let group = Math.floor(flag / 16);\n    return [group, bit];\n}\n\nTiledManager.getParameterFlags = function() {\n    if(!!pluginParams['Custom Tile Flags']) {\n        let tileFlags = JSON.parse(pluginParams['Custom Tile Flags']);\n        TiledManager.addFlag.apply(this, tileFlags);\n    }\n}\n\n/* VEHICLES */\nTiledManager.createVehicle = function(vehicleName, vehicleData = false) {\n    if(!vehicleData) {\n        vehicleData = Object.assign({}, _fullVehicleData, {\n            bgm: Object.assign({}, _fullVehicleData.bgm)\n        });\n    } else if(vehicleData !== true) {\n        vehicleData = Object.assign({}, _fullVehicleData, vehicleData, {\n            bgm: Object.assign({}, _fullVehicleData.bgm, vehicleData.bgm)\n        });\n    }\n    let vehicle = new Game_Vehicle(vehicleName, vehicleData);\n    _vehicles[vehicleName] = vehicle;\n    _vehiclesByIndex.push(vehicleName);\n};\n\nTiledManager.refreshVehicles = function(vehicles = []) {\n    _vehiclesByIndex.forEach(vehicleName => {\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\n            _vehicles[vehicleName].refresh();\n        }\n    });\n};\n\nTiledManager.getAllVehicles = function(vehicles = []) {\n    let returnVehicles = [];\n    _vehiclesByIndex.forEach(vehicleName => {\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\n            returnVehicles.push(_vehicles[vehicleName]);\n        }\n    });\n    return returnVehicles;\n};\n\nTiledManager.getVehicle = function(id) {\n    if(isNaN(id)) {\n        if(_vehicles[id]) {\n            return _vehicles[id];\n        }\n    } else {\n        if(id < _vehiclesByIndex.length) {\n            return _vehicles[_vehiclesByIndex[id]];\n        }\n    }\n    return null;\n}\n\nTiledManager.updateVehicles = function(vehicles = []) {\n    _vehiclesByIndex.forEach(vehicleName => {\n        if(vehicles.length === 0 || vehicles.indexOf(vehicleName) > -1) {\n            _vehicles[vehicleName].update();\n        }\n    });\n}\n\nTiledManager.getParameterVehicles = function() {\n    if(!!pluginParams['Custom Vehicles']) {\n        let vehicles = JSON.parse(pluginParams['Custom Vehicles']);\n        vehicles.forEach(vehicle => {\n            let vehicleData = JSON.parse(vehicle);\n            TiledManager.createVehicle(vehicleData.vehicleName, vehicleData);\n        })\n    }\n}\n\nTiledManager.setAutoFunction = function(identifier, functions = {}) {\n    _autoFunctions[identifier] = functions;\n}\n\nTiledManager.getAutoFunction = function(identifier) {\n    return _autoFunctions[identifier] || false;\n}\n\n/* Tiled Object Handlers */\nTiledManager.objectResolvers = {};\n\n/**\n * Registers an object resolver that will pre-process a tiled object.\n * The object resolver should return true if it processed the object, so then\n * other resolvers won't be called.\n * @param {(object, map)=>boolean} resolver\n */\nTiledManager.registerTiledObjectResolver = function (resolver) {\n    _registeredObjectResolvers.push(resolver);\n}\n\n/**\n * Object resolver for handling waypoints\n * @param {*} object \n * @param {*} map \n */\nTiledManager.objectResolvers.waypoint = function (object, map) {\n    if (object.properties && object.properties.waypoint) {\n\n        let x = object.x / map.tileWidth();\n        let y = object.y / map.tileHeight();\n        if (TiledManager.getParam('Constrain Events to Grid', 'true').toLowerCase() === 'true') {\n            x = Math.floor(x);\n            y = Math.floor(y);\n        }\n\n        map._waypoints[object.properties.waypoint] = { x, y }\n        return true;\n    }\n    return false;\n}\n\n/**\n * Object resolver for mapping to an existing event\n * @param {*} object \n * @param {*} map \n */\nTiledManager.objectResolvers.eventId = function (object, map) {\n    if (object.properties && object.properties.eventId) {\n        let event;\n        let eventId = parseInt(object.properties.eventId);\n        event = map._events[eventId];\n\n        if (event) {\n            let x = object.x / map.tileWidth() - map._offsets.x;\n            let y = object.y / map.tileHeight() - map._offsets.y;\n            if (TiledManager.getParam('Constrain Events to Grid', 'true').toLowerCase() === 'true') {\n                x = Math.floor(x);\n                y = Math.floor(y);\n            }\n            if (map.isHalfTile()) {\n                x += 1;\n                y += 1;\n            }\n\n            event.locate(x, y);\n\n            event._tiledProperties = object.properties;\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/**\n * Object resolver for mapping a vehicle\n * @param {*} object \n * @param {*} map \n */\nTiledManager.objectResolvers.vehicle = function (object, map) {\n    if (object.properties && object.properties.eventId) {\n        let event = map.vehicle(object.properties.vehicle);\n        map._vehicles.push(object.properties.vehicle);\n\n        if (event) {\n            let x = object.x / map.tileWidth() - map._offsets.x;\n            let y = object.y / map.tileHeight() - map._offsets.y;\n            if (TiledManager.getParam('Constrain Events to Grid', 'true').toLowerCase() === 'true') {\n                x = Math.floor(x);\n                y = Math.floor(y);\n            }\n            if (map.isHalfTile()) {\n                x += 1;\n                y += 1;\n            }\n\n            event.loadSystemSettings();\n            event.setLocation(this.mapId(), x, y);\n\n            event._tiledProperties = object.properties;\n            return true;\n        }\n    }\n\n    return false;\n}\n\nTiledManager.registerStandardResolvers = function() {\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.waypoint);\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.eventId);\n    TiledManager.registerTiledObjectResolver(TiledManager.objectResolvers.vehicle);\n}\n\nTiledManager.processTiledObject = function (object, map) {\n    _registeredObjectResolvers.some(r => r(object, map));\n}\n\n/* PLUGIN COMMANDS */\n\nTiledManager.addPluginCommand = function(command, func) {\n    _pluginCommands[command] = func;\n}\n\nTiledManager.pluginCommand = function(command, args) {\n    if(_pluginCommands.hasOwnProperty(command)) {\n        _pluginCommands[command].call(this, args);\n    }\n}\n\n/* PARAMETER CHECKS */\n\nTiledManager.getParam = (param, defaultValue = '') => {\n    if (Object.prototype.hasOwnProperty.call(pluginParams, param)) {\n        return pluginParams[param];\n    }\n    return defaultValue;\n}","//-----------------------------------------------------------------------------\r\n// Sprite_TiledPriorityTile\r\n//\r\n// The sprite for displaying a priority tile.\r\n\r\nfunction Sprite_TiledPriorityTile() {\r\n    this.initialize.apply(this, arguments);\r\n}\r\n\r\nSprite_TiledPriorityTile.prototype = Object.create(Sprite_Base.prototype);\r\nSprite_TiledPriorityTile.prototype.constructor = Sprite_TiledPriorityTile;\r\n\r\nwindow.Sprite_TiledPriorityTile = Sprite_TiledPriorityTile;\r\n\r\nSprite_TiledPriorityTile.prototype.updateVisibility = function() {\r\n    let visibility = false;\r\n    if(this.layerId > -1) {\r\n        visibility = true;\r\n        let props = $gameMap.getLayerProperties(this.layerId);\r\n        if(props.transition) {\r\n            visibility = props.minAlpha > 0 || props.transitionPhase > 0;\r\n            this.opacity = 255 * (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\r\n        } else {\r\n            let layer = $gameMap.tiledData.layers[this.layerId];\r\n            visibility = !TiledManager.checkLayerHidden(layer);\r\n        }\r\n    }\r\n    this.visible = visibility;\r\n};\r\n","/* A fallback implementation of AlphaFilter */\r\n\r\nconst fragmentSrc = 'varying vec2 vTextureCoord;' +\r\n'uniform sampler2D uSampler;' +\r\n'uniform float uAlpha;' +\r\n'void main(void)' +\r\n'{' +\r\n'   gl_FragColor = texture2D(uSampler, vTextureCoord) * uAlpha;' +\r\n'}';\r\n\r\nif(!PIXI.filters.AlphaFilter) {\r\n    class AlphaFilter extends PIXI.Filter\r\n    {\r\n        /**\r\n         * @param {number} [alpha=1] Amount of alpha from 0 to 1, where 0 is transparent\r\n         */\r\n        constructor(alpha = 1.0)\r\n        {\r\n            super(\r\n                // vertex shader\r\n                null,\r\n                // fragment shader\r\n               fragmentSrc\r\n            );\r\n            this.alpha = alpha;\r\n            this.glShaderKey = 'alpha';\r\n        }\r\n        /**\r\n         * Coefficient for alpha multiplication\r\n         *\r\n         * @member {number}\r\n         * @default 1\r\n         */\r\n        get alpha()\r\n        {\r\n            return this.uniforms.uAlpha;\r\n        }\r\n        set alpha(value) // eslint-disable-line require-jsdoc\r\n        {\r\n            this.uniforms.uAlpha = value;\r\n        }\r\n    }\r\n    PIXI.filters.AlphaFilter = AlphaFilter;\r\n}","import { getProperty } from './helpers'\nimport TiledTileLayer from \"./TiledTileLayer\";\n\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\n/**\n * This class handles the tilemap\n */\nexport class TiledTilemap extends ShaderTilemap {\n    initialize(tiledData) {\n        this.indexedBitmaps = [];\n        this._tiledData = {};\n        this._layers = [];\n        this._imageLayers = [];\n        this._objectTiles = [];\n        this._priorityTiles = [];\n        this._priorityTilesCount = 0;\n        this.tiledData = tiledData;\n        super.initialize();\n        this.setupTiled();\n    }\n\n    get tiledData() {\n        return this._tiledData;\n    }\n\n    set tiledData(val) {\n        this._tiledData = val;\n        this.setupTiled();\n    }\n\n    setupTiled() {\n        this._setupSize();\n        this._setupAnim();\n    }\n\n    _setupSize() {\n        let width = this._width;\n        let height = this._height;\n        let margin = this._margin;\n        let tileCols = Math.ceil(width / this._tileWidth) + 1;\n        let tileRows = Math.ceil(height / this._tileHeight) + 1;\n        this._tileWidth = this.tiledData.tilewidth;\n        this._tileHeight = this.tiledData.tileheight;\n        this._layerWidth = tileCols * this._tileWidth;\n        this._layerHeight = tileRows * this._tileHeight;\n        this._mapWidth = this.tiledData.width;\n        this._mapHeight = this.tiledData.height;\n    }\n\n    _setupAnim() {\n        this._animFrame = {};\n        this._animDuration = {};\n    }\n\n    _createLayers() {\n        let id = 0;\n        this._needsRepaint = true;\n\n        let parameters = PluginManager.parameters('ShaderTilemap');\n        let useSquareShader = Number(parameters.hasOwnProperty('squareShader') ? parameters['squareShader'] : 1);\n\n        for (let layerData of this.tiledData.layers) {\n            let zIndex = 0;\n            const properties = layerData.properties;\n\n            if (layerData.type === \"imagelayer\") {\n                this._createImageLayer(layerData, id);\n                id++;\n                continue;\n            }\n            if (layerData.type != \"tilelayer\") {\n                id++;\n                continue;\n            }\n\n            if (!!getProperty(properties, 'zIndex')) {\n                zIndex = parseInt(getProperty(properties, 'zIndex'));\n            }\n\n            if (!!getProperty(properties, 'collision')) {\n                id++;\n                continue;\n            }\n\n            if (!!getProperty(properties, 'toLevel')) {\n                id++;\n                continue;\n            }\n\n            if (!!getProperty(properties, 'regionId')) {\n                id++;\n                continue;\n            }\n\n            if (getProperty(properties, 'tileFlags') === 'hide') {\n                id++;\n                continue;\n            }\n\n            if (this._isReflectLayer(layerData)) {\n                id++;\n                continue;\n            }\n\n            let layer = new TiledTileLayer(zIndex, [], useSquareShader, 32);\n            layer.layerId = id; // @dryami: hack layer index\n            layer.spriteId = Sprite._counter++;\n            layer.alpha = layerData.opacity;\n            this._layers.push(layer);\n            this.addChild(layer);\n            id++;\n        }\n\n        this._createPriorityTiles();\n    }\n\n    _createPriorityTiles() {\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\n        let zIndex = parseInt(pluginParams[\"Z - Player\"]);\n        if(size > 0) {\n            for (let x of Array(size).keys()) {\n                let sprite = new Sprite_TiledPriorityTile();\n                sprite.z = sprite.zIndex = zIndex;\n                sprite.layerId = -1;\n                sprite.hide();\n                this.addChild(sprite);\n                this._priorityTiles.push(sprite);\n            }\n        }\n    }\n\n    _isReflectLayer(layerData) {\n        const properties = layerData.properties;\n        return !!properties && (\n            getProperty(properties, 'reflectionSurface')\n            || getProperty(properties, 'reflectionCast')\n        );\n    }\n\n    _hackRenderer(renderer) {\n        return renderer;\n    }\n\n    refreshTileset() {\n        var bitmaps = this.indexedBitmaps.map(function (x) {\n            if(Array.isArray(x)) {\n                return x.map(function(y) {\n                    return y._baseTexture ? new PIXI.Texture(y._baseTexture) : y;\n                })\n            }\n            return x._baseTexture ? new PIXI.Texture(x._baseTexture) : x;\n        });\n        for (let layer of this._layers) {\n            let props = $gameMap.getLayerProperties(layer.layerId);\n            let tilesetBitmaps = [];\n            if(!props.tilesets) {\n                continue;\n            }\n            props.tilesets.forEach(tilesetId => {\n                tilesetBitmaps.push(bitmaps[tilesetId]);\n            })\n            layer.setBitmaps(tilesetBitmaps);\n        }\n    }\n\n    update() {\n        super.update();\n        this._updateAnim();\n    }\n\n    _updateAnim() {\n        let needRefresh = false;\n        for (let key in this._animDuration) {\n            this._animDuration[key] -= 1;\n            if (this._animDuration[key] <= 0) {\n                this._animFrame[key] += 1;\n                needRefresh = true;\n            }\n        }\n\n        if (needRefresh) {\n            this.refresh();\n        }\n    }\n\n    _updateLayerPositions(startX, startY) {\n        let ox = 0;\n        let oy = 0;\n        if (this.roundPixels) {\n            ox = Math.floor(this.origin.x);\n            oy = Math.floor(this.origin.y);\n        } else {\n            ox = this.origin.x;\n            oy = this.origin.y;\n        }\n\n        for (let layer of this._layers) {\n            let layerData = this.tiledData.layers[layer.layerId];\n            let offsetX = layerData.offsetx || 0;\n            let offsetY = layerData.offsety || 0;\n            layer.position.x = startX * this._tileWidth - ox + offsetX;\n            layer.position.y = startY * this._tileHeight - oy + offsetY;\n        }\n\n        for (let sprite of this._priorityTiles) {\n            let layerData = this.tiledData.layers[sprite.layerId];\n            let offsetX = layerData ? layerData.offsetx || 0 : 0;\n            let offsetY = layerData ? layerData.offsety || 0 : 0;\n            sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + sprite.width / 2;\n            sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + sprite.height;\n        }\n    }\n\n    _paintAllTiles(startX, startY) {\n        this._priorityTilesCount = 0;\n        for (let layer of this._layers) {\n            layer.clear();\n            this._paintTiles(layer, startX, startY);\n        }\n        let id = 0;\n        for (let layerData of this.tiledData.layers) {\n            if (layerData.type != \"objectgroup\") {\n                id++;\n                continue;\n            }\n            this._paintObjectLayers(id, startX, startY);\n            id++;\n        }\n        while (this._priorityTilesCount < this._priorityTiles.length) {\n            let sprite = this._priorityTiles[this._priorityTilesCount];\n            sprite.hide();\n            sprite.layerId = -1;\n            this._priorityTilesCount++;\n        }\n    }\n\n    _paintTiles(layer, startX, startY) {\n        let layerData = this.tiledData.layers[layer.layerId];\n\n        if (!layerData.visible) {\n            return;\n        }\n\n        if (layerData.type == \"tilelayer\") {\n            this._paintTilesLayer(layer, startX, startY);\n        }\n    }\n\n    _paintObjectLayers(layerId, startX, startY) {\n        let layerData = this.tiledData.layers[layerId];\n        let objects = layerData.objects || [];\n\n        for (let obj of objects) {\n            if (!obj.gid) {\n                continue;\n            }\n            if (!obj.visible) {\n                continue;\n            }\n            let tileId = obj.gid;\n            let realTileId = tileId & 0x1FFFFFFF;\n            let textureId = this._getTextureId(realTileId);\n            let offsets = $gameMap.offsets();\n            let dx = obj.x - (startX + offsets.x) * this._tileWidth;\n            let dy = obj.y - (startY + offsets.y) * this._tileHeight - obj.height;\n            let positionHeight = 0;\n            let zIndex = false;\n            if(obj.properties) {\n                if(obj.properties.positionHeight) {\n                    positionHeight = obj.properties.positionHeight;\n                }\n                if(obj.properties.hasOwnProperty('zIndex')) {\n                    zIndex = obj.properties.zIndex;\n                }\n            }\n            this._paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight, zIndex);\n        }\n    }\n\n    _paintTilesLayer(layer, startX, startY) {\n        let tileCols = Math.ceil(this._width / this._tileWidth) + 1;\n        let tileRows = Math.ceil(this._height / this._tileHeight) + 1;\n\n        for (let y of Array(tileRows).keys()) {\n            for (let x of Array(tileCols).keys()) {\n                this._paintTile(layer, startX, startY, x, y);\n            }\n        }\n    }\n\n    _paintTile(layer, startX, startY, x, y) {\n        let mx = x + startX;\n        let my = y + startY;\n        if (this.horizontalWrap) {\n            mx = mx.mod(this._mapWidth);\n        }\n        if (this.verticalWrap) {\n            my = my.mod(this._mapHeight);\n        }\n        let tilePosition = mx + my * this._mapWidth;\n        let tileId = TiledManager.extractTileId(this.tiledData.layers[layer.layerId], tilePosition);\n        let rectLayer = layer.children[0];\n        let textureId = 0;\n        let props = $gameMap.getLayerProperties(layer.layerId);\n\n        if (!tileId) {\n            return;\n        }\n\n        // TODO: Problem with offsets\n        if (mx < 0 || mx >= this._mapWidth || my < 0 || my >= this._mapHeight) {\n            return;\n        }\n\n        textureId = this._getTextureId(tileId);\n        let tileset = this.tiledData.tilesets[textureId];\n        let dx = x * this._tileWidth;\n        let dy = y * this._tileHeight;\n        let w = tileset.tilewidth;\n        let h = tileset.tileheight;\n        let tileCols = tileset.columns;\n        let rId = this._getAnimTileId(textureId, tileId - tileset.firstgid);\n        let ux = (rId % tileCols) * w;\n        let uy = Math.floor(rId / tileCols) * h;\n\n        if (this._isPriorityTile(layer.layerId)) {\n            let positionHeight = 0;\n            if(this.tiledData.layers[layer.layerId].properties.positionHeight) {\n                positionHeight+= this.tiledData.layers[layer.layerId].properties.positionHeight || 0\n            }\n            if(tileset.tileproperties &&\n                tileset.tileproperties[tileId - tileset.firstgid] &&\n                tileset.tileproperties[tileId - tileset.firstgid].positionHeight) {\n                positionHeight+= tileset.tileproperties[tileId - tileset.firstgid].positionHeight || 0\n            }\n            this._paintPriorityTile(layer.layerId, textureId, tileId, startX, startY, dx, dy, positionHeight);\n            return;\n        }\n\n        if(props.tilesets && props.tilesets.indexOf(textureId) > -1) {\n            textureId = props.tilesets.indexOf(textureId);\n        }\n        \n        rectLayer.addRect(textureId, ux, uy, dx, dy, w, h);\n    }\n\n    _paintPriorityTile(layerId, textureId, tileId, startX, startY, dx, dy, positionHeight = 0, zIndex = false) {\n        let tileset = this.tiledData.tilesets[textureId];\n        let tileOrientation = (tileId >> 24) & 0xe0;\n        let realTileId = tileId & 0x1FFFFFFF;\n        var tile = tileset.tiles ? tileset.tiles[realTileId - tileset.firstgid] || {} : {};\n        let w = tile.imagewidth || tileset.tilewidth;\n        let h = tile.imageheight || tileset.tileheight;\n        let tileCols = tileset.columns;\n        let rId = this._getAnimTileId(textureId, realTileId - tileset.firstgid);\n        let ux = (rId % tileCols) * w;\n        let uy = Math.floor(rId / tileCols) * h;\n        let sprite = this._priorityTiles[this._priorityTilesCount];\n        let layerData = this.tiledData.layers[layerId];\n        let offsetX = layerData ? layerData.offsetx || 0 : 0;\n        let offsetY = layerData ? layerData.offsety || 0 : 0;\n        let ox = 0;\n        let oy = 0;\n        let flipH = tileOrientation === 0x20 || ((tileOrientation & 0x80) > 0);\n        let flipV = tileOrientation === 0x20 || ((tileOrientation & 0x40) > 0);\n        if (this.roundPixels) {\n            ox = Math.floor(this.origin.x);\n            oy = Math.floor(this.origin.y);\n        } else {\n            ox = this.origin.x;\n            oy = this.origin.y;\n        }\n\n        let size = parseInt(pluginParams[\"Priority Tiles Limit\"]);\n        if(this._priorityTilesCount >= this._priorityTiles.length) {\n            if (size > 0) {\n                return;\n            } else {\n                sprite = new Sprite_TiledPriorityTile();\n                sprite.z = sprite.zIndex = parseInt(pluginParams[\"Z - Player\"]);\n                this.addChild(sprite);\n                this._priorityTiles.push(sprite);\n            }\n        }\n\n        sprite.layerId = layerId;\n        sprite.anchor.x = 0.5;\n        sprite.anchor.y = (flipV ? 0.0 : 1.0);\n        sprite.origX = dx;\n        sprite.origY = dy;\n        sprite.scale.x = (flipH ? -1 : 1);\n        sprite.scale.y = (flipV ? -1 : 1);\n        sprite.x = sprite.origX + startX * this._tileWidth - ox + offsetX + w / 2;\n        sprite.y = sprite.origY + startY * this._tileHeight - oy + offsetY + h;\n        \n        let realTextureId = this._getTextureId(realTileId, true);\n        if(Array.isArray(this.indexedBitmaps[realTextureId])) {\n            var tile = tileset.tiles[realTileId - tileset.firstgid];\n            sprite.bitmap = this.indexedBitmaps[realTextureId][realTileId - tileset.firstgid];\n            sprite.setFrame(0, 0, tile.imagewidth, tile.imageheight);\n        } else {\n            sprite.bitmap = this.indexedBitmaps[realTextureId];\n            sprite.setFrame(ux, uy, w, h);\n        }\n        sprite.priority = this._getPriority(layerId);\n        sprite.z = sprite.zIndex = (zIndex !== false ? zIndex : this._getZIndex(layerId));\n        sprite.positionHeight = positionHeight;\n        sprite.show();\n\n        this._priorityTilesCount += 1;\n    }\n\n    _getTextureId(tileId, ignore = false) {\n        let textureId = 0;\n        for (let tileset of this.tiledData.tilesets) {\n            if (ignore && tileset.properties && tileset.properties.ignoreLoading) {\n                continue;\n            }\n            if (tileId < tileset.firstgid\n                || tileId >= tileset.firstgid + tileset.tilecount) {\n                textureId++;\n                continue;\n            }\n            break;\n        }\n        return textureId;\n    }\n\n    _getAnimTileId(textureId, tileId) {\n        let tilesData = this.tiledData.tilesets[textureId].tiles;\n        if (!tilesData) {\n            return tileId;\n        }\n        if (!tilesData[tileId]) {\n            return tileId;\n        }\n        if (!tilesData[tileId].animation) {\n            return tileId;\n        }\n        let animation = tilesData[tileId].animation;\n        this._animFrame[tileId] = this._animFrame[tileId] || 0;\n        let frame = this._animFrame[tileId];\n        this._animFrame[tileId] = !!animation[frame] ? frame : 0;\n        frame = this._animFrame[tileId];\n        let duration = animation[frame].duration / 1000 * 60;\n        this._animDuration[tileId] = this._animDuration[tileId] || duration;\n        if (this._animDuration[tileId] <= 0) {\n            this._animDuration[tileId] = duration;\n        }\n        return animation[frame].tileid;\n    }\n\n    _getPriority(layerId) {\n        let layerData = this.tiledData.layers[layerId];\n        if (!layerData.properties) {\n            return 0;\n        }\n        if (!layerData.properties.priority) {\n            return 0;\n        }\n        return parseInt(layerData.properties.priority)\n    }\n\n    _isPriorityTile(layerId) {\n        let playerZIndex = parseInt(pluginParams[\"Z - Player\"]);\n        let zIndex = this._getZIndex(layerId);\n        return this._getPriority(layerId) > 0\n            && zIndex === playerZIndex;\n    }\n\n    _getZIndex(layerId) {\n        let layerData = this.tiledData.layers[layerId];\n        if (!layerData) {\n            return 0;\n        }\n        if (!layerData.properties || !layerData.properties.zIndex) {\n            return 0;\n        }\n        return parseInt(layerData.properties.zIndex);\n    }\n\n    /**\n     * Hides a layer based on the level the player is on\n     * \n     * This method has been deprecated in favor of the more general method.\n     */\n    hideOnLevel(level) {\n        let layerIds = [];\n        for (let layer of this._layers) {\n            let layerData = this.tiledData.layers[layer.layerId];\n            if (layerData.properties && layerData.properties.hasOwnProperty(\"hideOnLevel\")) {\n                if (parseInt(layerData.properties.hideOnLevel) !== level) {\n                    if(layer.transition) {\n                        /* If this layer has a transition, we'll need to tell the layer that\n                           it's supposed to be showing. */\n                           layer.isShown = true;\n                    }\n                    this.addChild(layer);\n                    continue;\n                }\n                /* Since the layer is supposed to be hidden, let's first let it transition if\n                   it has a transition fadeout. */\n                if(layer.transition) {\n                    layer.isShown = false;\n                    if(layer.minAlpha > 0 || layer.transitionStep > 0) {\n                        this.addChild(layer)\n                        continue;\n                    }\n                }\n                /* Otherwise remove the layer and hide it */\n                layerIds.push(layer.layerId);\n                this.removeChild(layer);\n            }\n        }\n        this._priorityTiles.forEach(sprite => {\n            if(layerIds.indexOf(sprite.layerId) > -1) {\n                sprite.visible = true;\n            }\n        })\n    }\n    \n    /**\n     * Hides layers on certain special conditions\n     * \n     * This method will analyze each layer, then checks them with certain conditions. If\n     * they meet one condition, they will be hidden.\n     * \n     * It also handles fading in and out layers.\n     */\n    hideOnSpecial() {\n        /* Iterates through each layer */\n        for(let layer of this._layers) {\n            let layerData = this.tiledData.layers[layer.layerId];\n\t\t\tif(layerData.properties) {\n                let hideLayer = TiledManager.checkLayerHidden(layerData);\n                \n\t\t\t\t/* If the layer has a hide property, run this code.\n\t\t\t\t * You don't need to run it for layers that don't have any properties that would\n\t\t\t\t   hide this layer. */\n\t\t\t\tif (TiledManager.hasHideProperties(layerData)) {\n\t\t\t\t\t/* If the layer isn't supposed to be hidden, add the layer to the container */\n                    let props = $gameMap.getLayerProperties(layer.layerId);\n\t\t\t\t\tif (!hideLayer) {\n                        if(props.transition) {\n                            /* If this layer has a transition, we'll need to tell the layer that\n                               it's supposed to be showing. */\n                               props.isShown = true;\n                        }\n\t\t\t\t\t\tthis.addChild(layer);\n\t\t\t\t\t\tcontinue;\n                    }\n                    /* Since the layer is supposed to be hidden, let's first let it transition if\n                       it has a transition fadeout. */\n                    if(props.transition) {\n                        props.isShown = false;\n                        if(props.minAlpha > 0 || props.transitionPhase > 0) {\n                            this.addChild(layer)\n                            continue;\n                        }\n                    }\n                    /* Otherwise remove the layer and hide it */\n\t\t\t\t\tthis.removeChild(layer);\n\t\t\t\t}\n\t\t\t}\n        }\n    }\n\t\n    _compareChildOrder(a, b) {\n        if((this._layers.indexOf(a) > -1 || this._imageLayers.indexOf(a) > -1) &&\n            (this._layers.indexOf(b) > -1 || this._imageLayers.indexOf(b) > -1)) {\n            if ((a.z || 0) !== (b.z || 0)) {\n                return (a.z || 0) - (b.z || 0);\n            } else if ((a.priority || 0) !== (b.priority || 0)) {\n                return (a.priority || 0) - (b.priority || 0);\n            } else if((a.layerId || 0) !== (b.layerId || 0)) {\n                return (a.layerId || 0) - (b.layerId || 0);\n            } else {\n                return a.spriteId - b.spriteId;\n            }\n        } else if ((a.z || 0) !== (b.z || 0)) {\n            return (a.z || 0) - (b.z || 0);\n        } else if (((a.y || 0) + (a.positionHeight || 0)) !== ((b.y || 0) + (b.positionHeight || 0))) {\n            return ((a.y || 0) + (a.positionHeight || 0)) - ((b.y || 0) + (b.positionHeight || 0));\n        } else if ((a.priority || 0) !== (b.priority || 0)) {\n            return (a.priority || 0) - (b.priority || 0);\n        } else {\n            return a.spriteId - b.spriteId;\n        }\n    }\n\n    /* Parallax map stuff */\n\n    _createImageLayer(layerData, id) {\n        let zIndex = 0;\n        let repeatX = false;\n        let repeatY = false;\n        let deltaX = 1;\n        let deltaY = 1;\n        let autoX = 0;\n        let autoY = 0;\n        let hue = 0;\n\t\tlet viewportX = 0;\n\t\tlet viewportY = 0;\n\t\tlet viewportWidth = 0;\n\t\tlet viewportHeight = 0;\n\t\tlet viewportDeltaX = 0;\n\t\tlet viewportDeltaY = 0;\n\n        let props = $gameMap.getLayerProperties(id);\n\n        if(!!layerData.properties) {\n            if(!!layerData.properties.ignoreLoading) {\n                return;\n            }\n            if (!!layerData.properties.zIndex) {\n                zIndex = parseInt(layerData.properties.zIndex);\n            }\n            if(layerData.properties.hasOwnProperty('repeatX')) {\n                repeatX = !!layerData.properties.repeatX;\n            }\n            if(layerData.properties.hasOwnProperty('repeatY')) {\n                repeatY = !!layerData.properties.repeatY;\n            }\n            if(layerData.properties.hasOwnProperty('deltaX')) {\n                deltaX = layerData.properties.deltaX;\n            }\n            if(layerData.properties.hasOwnProperty('deltaY')) {\n                deltaY = layerData.properties.deltaY;\n            }\n            if(!!layerData.properties.autoX) {\n                autoX = layerData.properties.autoX;\n            }\n            if(!!layerData.properties.autoY) {\n                autoY = layerData.properties.autoY;\n            }\n            if(!!layerData.properties.hue) {\n                hue = parseInt(layerData.properties.hue)\n            }\n\t\t\tif(layerData.properties.hasOwnProperty('viewportX')) {\n\t\t\t\tviewportX = layerData.properties.viewportX;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportY')) {\n\t\t\t\tviewportY = layerData.properties.viewportY;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportWidth')) {\n\t\t\t\tviewportWidth = layerData.properties.viewportWidth;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportHeight')) {\n\t\t\t\tviewportHeight = layerData.properties.viewportHeight;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaX')) {\n\t\t\t\tviewportDeltaX = layerData.properties.viewportDeltaX;\n\t\t\t}\n\t\t\tif(layerData.properties.hasOwnProperty('viewportDeltaY')) {\n\t\t\t\tviewportDeltaY = layerData.properties.viewportDeltaY;\n\t\t\t}\n        }\n\n        let layer;\n\n        if(!repeatX && !repeatY && !autoX && !autoY) {\n            layer = new Sprite_Base();\n        } else {\n            layer = new TilingSprite();\n            layer.move(0, 0, Graphics.width, Graphics.height);\n        }\n        layer.layerId = id;\n        layer.spriteId = Sprite._counter++;\n        layer.alpha = layerData.opacity;\n        layer.bitmap = ImageManager.loadParserParallax(layerData.image, hue);\n        layer.bitmap.addLoadListener(() => {\n            props.imageWidth = layer.bitmap.width;\n            props.imageHeight = layer.bitmap.height;\n        })\n        layer.baseX = layerData.x + (layerData.offsetx || 0);\n        layer.baseY = layerData.y + (layerData.offsety || 0);\n        layer.z = layer.zIndex = zIndex;\n        layer.repeatX = repeatX;\n        layer.repeatY = repeatY;\n        layer.deltaX = deltaX;\n        layer.deltaY = deltaY;\n        layer.stepAutoX = autoX;\n        layer.stepAutoY = autoY;\n        layer.autoX = 0;\n        layer.autoY = 0;\n\t\tif(viewportWidth || viewportHeight) {\n\t\t\tviewportWidth = viewportWidth || Graphics.width;\n\t\t\tviewportHeight = viewportHeight || Graphics.height;\n\t\t\tlet layerMask = new PIXI.Graphics();\n\t\t\tlayerMask.baseX = viewportX;\n\t\t\tlayerMask.baseY = viewportY;\n\t\t\tlayerMask.baseWidth = viewportWidth;\n\t\t\tlayerMask.baseHeight = viewportHeight;\n\t\t\tlayerMask.deltaX = viewportDeltaX;\n\t\t\tlayerMask.deltaY = viewportDeltaY;\n\t\t\tlayer.mask = layerMask;\n\t\t\tlayer.hasViewport = true;\n\t\t}\n        this._imageLayers.push(layer);\n        this.addChild(layer);\n    }\n\n    updateImageLayer() {\n        this._imageLayers.forEach(layer => {\n            let layerData = this.tiledData.layers[layer.layerId];\n            let props = $gameMap.getLayerProperties(layer.layerId);\n            if(TiledManager.hasHideProperties(layerData)) {\n                let visibility = TiledManager.checkLayerHidden(layerData);\n                if(props.transition) {\n                    layer.alpha = (((props.baseAlpha - props.minAlpha) * (props.transitionPhase / props.transition)) + props.minAlpha);\n                    visibility = props.minAlpha > 0 || props.transitionPhase > 0;\n                }\n                layer.visible = visibility;\n            }\n\t\t\tlet offsets = $gameMap.offsets();\n\t\t\toffsets.x*= $gameMap.tileWidth();\n            offsets.y*= $gameMap.tileHeight();\n            let display = {\n                x: $gameMap.displayX() * $gameMap.tileWidth() - offsets.x,\n                y: $gameMap.displayY() * $gameMap.tileHeight() - offsets.y\n            }\n            if(!!layer.origin) {\n                let autoX = props.autoXFunction ? props.autoXFunction(props.autoX, props.autoY || 0) : 0;\n                let autoY = props.autoYFunction ? props.autoYFunction(props.autoX || 0, props.autoY) : 0;\n                if(!layer.repeatX) {\n                    layer.origin.x = layer.baseX - offsets.x + autoX;\n                    layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\n                    layer.width = layer.bitmap.width;\n                } else {\n                    layer.origin.x = layer.baseX - offsets.x + autoX + display.x * layer.deltaX;\n                    layer.x = 0;\n                    layer.width = Graphics.width;\n                }\n                if(!layer.repeatY) {\n                    layer.origin.y = layer.baseY - offsets.y + autoY;\n                    layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\n                    layer.height = layer.bitmap.height;\n                } else {\n                    layer.origin.y = layer.baseY - offsets.y + autoY + display.y * layer.deltaY;\n                    layer.y = 0;\n                    layer.height = Graphics.height;\n                }\n            } else {\n                layer.x = layer.baseX - offsets.x - display.x * layer.deltaX;\n                layer.y = layer.baseY - offsets.y - display.y * layer.deltaY;\n            }\n\t\t\tif(layer.hasViewport) {\n\t\t\t\tlet viewportX = layer.mask.baseX - offsets.x - display.x * layer.mask.deltaX;\n\t\t\t\tlet viewportY = layer.mask.baseY - offsets.y - display.y * layer.mask.deltaY;\n\t\t\t\tlayer.mask.clear();\n\t\t\t\tlayer.mask.beginFill(0xffffff, 1);\n\t\t\t\tlayer.mask.drawRect(viewportX, viewportY, layer.mask.baseWidth, layer.mask.baseHeight);\n\t\t\t}\n        })\n    }\n}","export const getProperty = (properties, propertyName) => {\r\n    if (!properties) {\r\n        return null\r\n    }\r\n    const property = Object.keys(properties).find((prop) => prop.name === propertyName);\r\n    return property ? properties[property].value : null\r\n}","import TiledTileShader from \"./TiledTileShader\";\r\n\r\nexport default class TiledTileLayer extends PIXI.tilemap.CompositeRectTileLayer {\r\n    constructor(zIndex, bitmaps, useSquare, texPerChild) {\r\n        super(zIndex, bitmaps, useSquare, texPerChild)\r\n    }\r\n\r\n    renderWebGL(renderer) {\r\n        var gl = renderer.gl;\r\n        if(!this.tiledTileShader) {\r\n            this.tiledTileShader = new TiledTileShader(gl, renderer.plugins.tilemap.maxTextures, this.useSquare)\r\n        }\r\n        var alpha = this.alpha;\r\n        var props = $gameMap.getLayerProperties(this.layerId);\r\n        if(props.transition) {\r\n            alpha-= props.minAlpha\r\n            alpha*= (props.transitionPhase / props.transition)\r\n            alpha+= props.minAlpha\r\n        }\r\n        //var shader = renderer.plugins.tilemap.getShader(this.useSquare);\r\n        var shader = this.tiledTileShader;\r\n        renderer.setObjectRenderer(renderer.plugins.tilemap);\r\n        renderer.bindShader(shader);\r\n        this._globalMat = this._globalMat || new PIXI.Matrix();\r\n        renderer._activeRenderTarget.projectionMatrix.copy(this._globalMat).append(this.worldTransform);\r\n        shader.uniforms.projectionMatrix = this._globalMat.toArray(true);\r\n        shader.uniforms.shadowColor = this.shadowColor;\r\n        shader.uniforms.alpha = alpha;\r\n        if (this.useSquare) {\r\n            var tempScale = this._tempScale = (this._tempScale || [0, 0]);\r\n            tempScale[0] = this._globalMat.a >= 0 ? 1 : -1;\r\n            tempScale[1] = this._globalMat.d < 0 ? 1 : -1;\r\n            var ps = shader.uniforms.pointScale = tempScale;\r\n            shader.uniforms.projectionScale = Math.abs(this.worldTransform.a) * renderer.resolution;\r\n        }\r\n        var af = shader.uniforms.animationFrame = renderer.plugins.tilemap.tileAnim;\r\n        var layers = this.children;\r\n        for (var i = 0; i < layers.length; i++) {\r\n            layers[i].renderWebGL(renderer, this.useSquare);\r\n        }\r\n    }\r\n}","const GLBuffer = PIXI.glCore.GLBuffer;\r\nconst VertexArrayObject = PIXI.glCore.VertexArrayObject;\r\n\r\nvar squareShaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying float vSize;\r\nvarying float vTextureId;\r\n\r\nuniform vec4 shadowColor;\r\nuniform sampler2D uSamplers[%count%];\r\nuniform vec2 uSamplerSize[%count%];\r\nuniform vec2 pointScale;\r\nuniform float alpha;\r\n\r\nvoid main(void){\r\n   float margin = 0.5 / vSize;\r\n   vec2 pointCoord = (gl_PointCoord - 0.5) * pointScale + 0.5;\r\n   vec2 clamped = vec2(clamp(pointCoord.x, margin, 1.0 - margin), clamp(pointCoord.y, margin, 1.0 - margin));\r\n   vec2 textureCoord = pointCoord * vSize + vTextureCoord;\r\n   float textureId = vTextureId;\r\n   vec4 color;\r\n   %forloop%\r\n   gl_FragColor = color * alpha;\r\n}\r\n`\r\n\r\nvar squareShaderVert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec2 aAnim;\r\nattribute float aTextureId;\r\nattribute float aSize;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform vec2 samplerSize;\r\nuniform vec2 animationFrame;\r\nuniform float projectionScale;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vSize;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition + aSize * 0.5, 1.0)).xy, 0.0, 1.0);\r\n   gl_PointSize = aSize * projectionScale;\r\n   vTextureCoord = aTextureCoord + aAnim * animationFrame;\r\n   vTextureId = aTextureId;\r\n   vSize = aSize;\r\n}\r\n`\r\nvar rectShaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vFrame;\r\nvarying float vTextureId;\r\nuniform vec4 shadowColor;\r\nuniform sampler2D uSamplers[%count%];\r\nuniform vec2 uSamplerSize[%count%];\r\nuniform float alpha;\r\nvoid main(void){\r\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\r\n   float textureId = floor(vTextureId + 0.5);\r\n   vec4 color;\r\n   %forloop%\r\n   gl_FragColor = color * alpha;\r\n}\r\n`;\r\n\r\nvar rectShaderVert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aFrame;\r\nattribute vec2 aAnim;\r\nattribute float aTextureId;\r\nuniform mat3 projectionMatrix;\r\nuniform vec2 animationFrame;\r\nvarying vec2 vTextureCoord;\r\nvarying float vTextureId;\r\nvarying vec4 vFrame;\r\nvoid main(void){\r\n   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n   vec2 anim = aAnim * animationFrame;\r\n   vTextureCoord = aTextureCoord + anim;\r\n   vFrame = aFrame + vec4(anim, anim);\r\n   vTextureId = aTextureId;\r\n}\r\n`;\r\nexport default class TiledTileShader extends PIXI.tilemap.TilemapShader {\r\n\r\n    constructor(gl, maxTextures, useSquare) {\r\n        let vert = useSquare ? squareShaderVert : rectShaderVert;\r\n        let frag = useSquare ? squareShaderFrag : rectShaderFrag;\r\n        super(gl,\r\n            maxTextures,\r\n            vert,\r\n            PIXI.tilemap.shaderGenerator.generateFragmentSrc(maxTextures, frag)\r\n        );\r\n        if(useSquare) {\r\n            this.vertSize = 8;\r\n            this.vertPerQuad = 1;\r\n            this.anim = 5;\r\n            this.textureId = 7;\r\n        } else {\r\n            this.vertSize = 11;\r\n            this.vertPerQuad = 4;\r\n            this.anim = 8;\r\n            this.textureId = 10;\r\n        }\r\n        this.maxTextures = maxTextures;\r\n        this.stride = this.vertSize * 4;\r\n        PIXI.tilemap.shaderGenerator.fillSamplers(this, this.maxTextures);\r\n    }\r\n\r\n    createVao(renderer, vb) {\r\n        var gl = renderer.gl;\r\n        return renderer.createVao()\r\n            .addIndex(this.indexBuffer)\r\n            .addAttribute(vb, this.attributes.aVertexPosition, gl.FLOAT, false, this.stride, 0)\r\n            .addAttribute(vb, this.attributes.aTextureCoord, gl.FLOAT, false, this.stride, 2 * 4)\r\n            .addAttribute(vb, this.attributes.aFrame, gl.FLOAT, false, this.stride, 4 * 4)\r\n            .addAttribute(vb, this.attributes.aAnim, gl.FLOAT, false, this.stride, this.anim * 4)\r\n            .addAttribute(vb, this.attributes.aTextureId, gl.FLOAT, false, this.stride, this.textureId * 4);\r\n    }\r\n}","import { getProperty } from './helpers'\n\n// Constants\nconst pluginParams = PluginManager.parameters(\"YED_Tiled\");\n\nObject.defineProperty(Game_Map.prototype, 'tiledData', {\n    get: function () {\n        return DataManager._tempTiledData;\n    },\n    configurable: true\n});\n\nObject.defineProperty(Game_Map.prototype, 'currentMapLevel', {\n    get: function () {\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\n        if (!varID) {\n            return this._currentMapLevel;\n        } else {\n            return $gameVariables.value(varID);\n        }\n    },\n    set: function (value) {\n        let varID = parseInt(pluginParams[\"Map Level Variable\"]);\n        if (!varID) {\n            this._currentMapLevel = value;\n        } else {\n            $gameVariables.setValue(varID, value);\n        }\n    },\n    configurable: true\n});\n\nlet _setup = Game_Map.prototype.setup;\nGame_Map.prototype.setup = function (mapId) {\n    this._tiledInitialized = false;\n    this._levels = [];\n    this._collisionMap = {};\n    this._arrowCollisionMap = {};\n    this._regions = {};\n    this._mapLevelChange = {};\n    this._positionHeightChange = {};\n    this._tileFlags = {};\n    this._collisionMapLayers = [];\n    this._arrowCollisionMapLayers = [];\n    this._regionsLayers = [];\n    this._mapLevelChangeLayers = [];\n    this._positionHeightChangeLayers = [];\n    this._tileFlagsLayers = [];\n    this._reflection = [];\n    this._currentMapLevel = 0;\n    this.currentMapLevel = 0;\n    this._waypoints = {};\n    this._layerProperties = [];\n    this._autoSize = false;\n    this._autoSizeBorder = 0;\n    this._offsets = { x: 0, y: 0 };\n    this._camera = {\n        focus: \"player\",\n        data: null\n    }\n    _setup.call(this, mapId);\n    if (this.isTiledMap()) {\n        $dataMap.width = this.tiledData.width;\n        $dataMap.height = this.tiledData.height;\n        this._setupTiled();\n        this._tiledInitialized = true;\n        if(this._refreshList) {\n            this._refreshList.forEach(character => {\n                character.refreshBushDepth();\n            })\n        }\n    } else {\n\t\tthis._tiledInitialized = true;\n\t}\n};\n\nGame_Map.prototype.isTiledInitialized = function() {\n    return !!this._tiledInitialized;\n}\n\nGame_Map.prototype.setRefreshDepth = function(character) {\n    if(!this._refreshList) {\n        this._refreshList = [];\n    }\n    this._refreshList.push(character);\n}\n\nGame_Map.prototype.isTiledMap = function () {\n    return !!this.tiledData;\n};\n\nGame_Map.prototype._setupTiled = function () {\n    this._initializeMapProperties();\n    this._initializeInfiniteMap();\n    this._setLayerProperties();\n    this._initializeMapLevel(0);\n\n    this._setupCollision();\n    this._setupRegion();\n    this._setupMapLevelChange();\n    this._setupTileFlags();\n    this._setupReflection();\n    this._setupTiledEvents();\n};\n\nGame_Map.prototype._initializeMapProperties = function() {\n    let autoSize = false;\n    let border = 0;\n    if(this.tiledData.properties) {\n        if(this.tiledData.properties.hasOwnProperty('autoSize')) {\n            autoSize = this.tiledData.properties.autoSize;\n        }\n        if(this.tiledData.properties.hasOwnProperty('border')) {\n            border = this.tiledData.properties.border;\n        }\n    }\n    this._autoSize = autoSize;\n    this._autoSizeBorder = border;\n}\n\nGame_Map.prototype.offsets = function(x = false, y = false) {\n\tif(typeof x === 'object') {\n\t\tlet offsets = {\n\t\t\tx: (x.x || 0) - this._offsets.x,\n\t\t\ty: (x.y || 0) - this._offsets.y\n\t\t}\n\t\tif(typeof y === 'string' && offsets.hasOwnProperty(y)) {\n\t\t\treturn offsets[y];\n\t\t}\n\t\treturn offsets;\n\t}\n\tif(x !== false || y !== false) {\n\t\treturn {\n\t\t\tx: (x || 0) - this._offsets.x,\n\t\t\ty: (y || 0) - this._offsets.y\n\t\t}\n\t}\n    return {\n        x: this._offsets.x,\n        y: this._offsets.y\n    }\n}\n\nGame_Map.prototype._initializeInfiniteMap = function() {\n    if(!this.tiledData.infinite) {\n        return;\n    }\n    if(this._autoSize && this._autoSize !== 'false') {\n        this._setMapSize();\n    }\n\t/*\n\tThis used to convert chunk data into regular map data. I removed it because I realized that really big maps\n\twill pose a huge memory problem, especially if you have a lot of layers. It also won't affect the load time,\n\tas all other data will already be pre-processed.\n\t*/\n\t/*\n\tfor (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n\t\tlet layerData = this.tiledData.layers[idx];\n\t\tif(!layerData.data && !!layerData.chunks) {\n\t\t\tlayerData.data = new Array(this.width() * this.height());\n\t\t\tlayerData.data.fill(0);\n\t\t\tlayerData.chunks.forEach(chunk => {\n\t\t\t\tfor(let i = 0; i < chunk.data.length; i++) {\n\t\t\t\t\tlet x = chunk.x - this._offsets.x + (i % chunk.width);\n\t\t\t\t\tlet y = chunk.y - this._offsets.y + Math.floor(i / chunk.width);\n\t\t\t\t\tif(x < 0 || y < 0 || x >= layerData.x + this.width() || y >= layerData.x + this.width()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlet realX = x + y * this.width();\n\t\t\t\t\tlayerData.data[realX] = chunk.data[i];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\t*/\n}\n\n/**\n * Resizes an infinite map so that the entire map is visible.\n * The only thing this does is set the offset and the size of the map,\n * without changing the map data itself.\n */\nGame_Map.prototype._setMapSize = function() {\n\t// Initialize variables\n    var minX = false;\n    var minY = false;\n    var maxX = false;\n    var maxY = false;\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        var layer = this.tiledData.layers[idx];\n        if(layer.type !== 'tilelayer') {\n            continue;\n        }\n        var x1 = layer.startx;\n        var y1 = layer.starty;\n        var x2 = x1 + layer.width;\n        var y2 = y1 + layer.height;\n\t\tif(this._autoSize === 'deep' || this._autoSize === 'crop') {\n\t\t\tif(minX === false || x1 < minX) {\n\t\t\t\tx1 = this._cropInfiniteMap(layer, x1, (minX === false ? x2 : minX));\n\t\t\t}\n\t\t\tif(minY === false || y1 < minY) {\n\t\t\t\ty1 = this._cropInfiniteMap(layer, y1, (minY === false ? y2 : minY), true, true);\n\t\t\t}\n\t\t\tif(maxX === false || x2 > maxX) {\n\t\t\t\tx2 = this._cropInfiniteMap(layer, x2, (maxX === false ? x1 : maxX), false);\n\t\t\t}\n\t\t\tif(maxY === false || y2 > maxY) {\n\t\t\t\ty2 = this._cropInfiniteMap(layer, y2, (maxY === false ? y1 : maxY), false, true);\n\t\t\t}\n\t\t}\n        minX = minX !== false ? Math.min(minX, x1) : x1;\n        minY = minY !== false ? Math.min(minY, y1) : y1;\n        maxX = maxX !== false ? Math.max(maxX, x2) : x2;\n        maxY = maxY !== false ? Math.max(maxY, y2) : y2;\n    }\n\tif(this._autoSizeBorder) {\n\t\tlet border = [0, 0, 0, 0];\n\t\tif(isNaN(this._autoSizeBorder)) {\n\t\t\tlet autoBorder = this.autoSizeBorder.split(' ');\n\t\t\tborder[0] = parseInt(autoBorder[0]);\n\t\t\tborder[1] = autoBorder.length < 2 ? border[0] : parseInt(autoBorder[1]);\n\t\t\tborder[2] = autoBorder.length < 3 ? border[0] : parseInt(autoBorder[2]);\n\t\t\tborder[3] = autoBorder.length < 4 ? border[1] : parseInt(autoBorder[3]);\n\t\t} else {\n\t\t\tborder[0] = this._autoSizeBorder;\n\t\t\tborder[1] = this._autoSizeBorder;\n\t\t\tborder[2] = this._autoSizeBorder;\n\t\t\tborder[3] = this._autoSizeBorder;\n\t\t}\n\t\tminX-= +border[3];\n\t\tminY-= +border[0];\n\t\tmaxX+= +border[1];\n\t\tmaxY+= +border[2];\n\t}\n    this._offsets.x = minX;\n    this._offsets.y = minY;\n    this.tiledData.width = maxX - minX;\n    this.tiledData.height = maxY - minY;\n}\n\nGame_Map.prototype._cropInfiniteMap = function(layer, offset, limit, forward = true, vertical = false) {\n\tlet o = offset;\n\tlet d = vertical ? 'y' : 'x';\n\tlet s = vertical ? 'height' : 'width';\n\twhile((forward && o < limit) || (!forward && o > limit)) {\n\t\tlet realO = o - (!forward ? 1 : 0);\n\t\tlet lineEmpty = true;\n\t\tfor(let chunkIdx = 0; chunkIdx < layer.chunks.length; chunkIdx++) {\n\t\t\tlet chunk = layer.chunks[chunkIdx];\n\t\t\tif(realO < chunk[d] || realO >= chunk[d] + chunk[s]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet empty = true;\n\t\t\tfor(let o2 = 0; o2 < chunk[s]; o2++) {\n\t\t\t\tlet coords = {\n\t\t\t\t\t[d]: realO - chunk[d],\n\t\t\t\t\t[vertical ? 'x' : 'y']: o2\n\t\t\t\t};\n\t\t\t\tlet i = coords.x + coords.y * chunk.width;\n\t\t\t\tif(chunk.data[i]) {\n\t\t\t\t\tempty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!empty) {\n\t\t\t\tlineEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!lineEmpty) {\n\t\t\tbreak;\n\t\t}\n\t\to+= forward ? 1 : -1;\n\t}\n\treturn o;\n}\n\nGame_Map.prototype._setLayerProperties = function() {\n    let autoFunctions = {};\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layer = this.tiledData.layers[idx];\n        let layerProperties = Object.assign({}, layer.properties, {layerId: idx});\n        if(layerProperties.transition) {\n            layerProperties.baseAlpha = layer.opacity;\n            layerProperties.minAlpha = Math.min(layerProperties.baseAlpha, (layer.properties.minimumOpacity || 0));\n            layerProperties.isShown = !TiledManager.checkLayerHidden(layer);\n            layerProperties.transitionPhase = layerProperties.isShown ? layerProperties.transition : 0;\n        }\n        if(layerProperties.autoX) {\n            layerProperties.autoSpeedX = layerProperties.autoX;\n            layerProperties.autoX = 0;\n            layerProperties.imageWidth = layerProperties.imageWidth || 0;\n            let funcX = 'linear';\n            if(layerProperties.autoFunctionX) {\n                funcX = layerProperties.autoFunctionX;\n            } else if (layerProperties.autoFunction) {\n                funcX = layerProperties.autoFunction;\n            }\n            let tFuncX = TiledManager.getAutoFunction(funcX);\n            if(tFuncX) {\n                layerProperties.autoXFunction = tFuncX.x || tFuncX.both;\n            } else {\n                if(!autoFunctions[funcX]) {\n                    autoFunctions[funcX] = new Function('x', 'y', funcX);\n                }\n                layerProperties.autoXFunction = autoFunctions[funcX];\n            }\n        }\n        if(layerProperties.autoY) {\n            layerProperties.autoSpeedY = layerProperties.autoY;\n            layerProperties.autoY = 0;\n            layerProperties.imageHeight = layerProperties.imageHeight || 0;\n            let funcY = 'linear';\n            if(layerProperties.autoFunctionY) {\n                funcY = layerProperties.autoFunctionY;\n            } else if (layerProperties.autoFunction) {\n                funcY = layerProperties.autoFunction;\n            }\n            let tFuncY = TiledManager.getAutoFunction(funcY);\n            if(tFuncY) {\n                layerProperties.autoYFunction = tFuncY.y || tFuncY.both;\n            } else {\n                if(!autoFunctions[funcY]) {\n                    autoFunctions[funcY] = new Function('x', 'y', funcY);\n                }\n                layerProperties.autoYFunction = autoFunctions[funcY];\n            }\n        }\n        this._getLayerTilesets(layer, layerProperties);\n        this._layerProperties.push(layerProperties);\n    }\n}\n\nGame_Map.prototype._getLayerTilesets = function(layer, props) {\n    if(layer.type !== 'tilelayer') {\n        return;\n    }\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    props.tilesets = [];\n    for (let i of Array(size).keys()) {\n        let tileId = TiledManager.extractTileId(layer, i);\n        if (!!tileId) {\n            let tilesetId = this._getTilesetId(tileId);\n            if(tilesetId === -1 || props.tilesets.indexOf(tilesetId) > -1) {\n                continue;\n            }\n            props.tilesets.push(tilesetId);\n        }\n    }\n}\n\nGame_Map.prototype._initializeMapLevel = function (id) {\n    if (!!this._collisionMap[id]) {\n        return;\n    }\n\n    this._levels.push(id);\n\n    this._collisionMap[id] = {};\n    this._arrowCollisionMap[id] = {};\n    this._regions[id] = {};\n    this._mapLevelChange[id] = {};\n    this._tileFlags[id] = {};\n    this._collisionMapLayers[id] = [];\n    this._arrowCollisionMapLayers[id] = [];\n    this._regionsLayers[id] = [];\n    this._mapLevelChangeLayers[id] = [];\n    this._tileFlagsLayers[id] = [];\n    this._initializeMapLevelData(id);\n};\n\nGame_Map.prototype._initializeMapLevelData = function(id = 0, layerId = 'main', dataTypes = false) {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    \n    const defaultData = {\n        'collisionMap': 0,\n        'arrowCollisionMap': 1 | 2 | 4 | 8,\n        'regions': 0,\n        'mapLevelChange': -1,\n        'positionHeightChange': -1,\n        'tileFlags': 0\n    }\n\n    if(!dataTypes) {\n        dataTypes = Object.keys(defaultData);\n    }\n\n    for(let idx = 0; idx < dataTypes.length; idx++) {\n        let dataType = dataTypes[idx];\n        let defaultValue = defaultData[dataType];\n        if(!this['_' + dataType][id]) {\n            this['_' + dataType][id] = {};\n            this['_' + dataType + 'Layers'][id] = [];\n        }\n        if(!!this['_' + dataType][id][layerId]) {\n            continue;\n        }\n        this['_' + dataType][id][layerId] = []\n        let typeData = this['_' + dataType][id][layerId]\n        for (let x of Array(size).keys()) {\n            typeData.push(defaultValue);\n        }\n    }\n}\n\nGame_Map.prototype._setupCollision = function () {\n    this._setupCollisionFull();\n    this._setupCollisionArrow();\n};\n\nGame_Map.prototype._setupCollisionFull = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.collision) {\n            continue;\n        }\n\n        if (layerData.properties.collision !== \"full\"\n            && layerData.properties.collision !== \"up-left\"\n            && layerData.properties.collision !== \"up-right\"\n            && layerData.properties.collision !== \"down-left\"\n            && layerData.properties.collision !== \"down-right\"\n            && layerData.properties.collision !== \"tiles\") {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._collisionMapLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['collisionMap']);\n        }\n        \n        for (let x of Array(size).keys()) {\n            let realX = x;\n            let ids = [];\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                switch(layerData.properties.collision) {\n                    case \"full\":\n                        ids.push(realX);\n                        if (this.isHalfTile()) {\n                            ids.push(realX + 1, realX + width, realX + width + 1);\n                        }\n                        break;\n                    case \"up-left\":\n                        ids.push(realX);\n                        break;\n                    case \"up-right\":\n                        ids.push(realX + 1);\n                        break;\n                    case \"down-left\":\n                        ids.push(realX + width);\n                        break;\n                    case \"down-right\":\n                        ids.push(realX + width + 1);\n                        break;\n                    case \"tiles\":\n                        let tileId = TiledManager.extractTileId(layerData, x);\n                        let tileset = this._getTileset(tileId);\n                        if(tileset && tileset.tileproperties) {\n                            let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                            if(tileData) {\n                                if(tileData.collision) {\n                                    ids.push(realX);\n                                    if (this.isHalfTile()) {\n                                        ids.push(realX + 1, realX + width, realX + width + 1);\n                                    }\n                                }\n                                if(tileData.collisionUpLeft) {\n                                    ids.push(realX);\n                                }\n                                if(tileData.collisionUpRight) {\n                                    ids.push(realX + 1);\n                                }\n                                if(tileData.collisionDownLeft) {\n                                    ids.push(realX + width);\n                                }\n                                if(tileData.collisionDownRight) {\n                                    ids.push(realX + width + 1);\n                                }\n                            }\n                        }\n                        break;\n                }\n                for (let id of ids) {\n                    this._collisionMap[level][layerId][id] = 1;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupCollisionArrow = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let bit = 0;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.collision) {\n            continue;\n        }\n\n        if (layerData.properties.collision !== \"arrow\" && layerData.properties.collision !== \"tiles\") {\n            continue;\n        }\n\n        if (!layerData.properties.arrowImpassable && layerData.properties.collision !== \"tiles\") {\n            continue;\n        }\n        \n        if(layerData.properties.arrowImpassable) {\n\n            if (layerData.properties.arrowImpassable === \"down\") {\n                bit = 1;\n            }\n\n            if (layerData.properties.arrowImpassable === \"left\") {\n                bit = 2;\n            }\n\n            if (layerData.properties.arrowImpassable === \"right\") {\n                bit = 4;\n            }\n\n            if (layerData.properties.arrowImpassable === \"up\") {\n                bit = 8;\n            }\n\n\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._arrowCollisionMapLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['arrowCollisionMap']);\n        }\n        \n        let arrowCollisionMap = this._arrowCollisionMap[level][layerId];\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                let realBit = bit;\n                if(layerData.properties.collision === \"tiles\") {\n                    realBit = 0;\n                    let tileId = TiledManager.extractTileId(layerData, x);\n                    let tileset = this._getTileset(tileId);\n                    if(tileset && tileset.tileproperties) {\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                        if(tileData) {\n                            if(tileData.arrowImpassableDown) {\n                                realBit+= 1;\n                            }\n                            if(tileData.arrowImpassableLeft) {\n                                realBit+= 2;\n                            }\n                            if(tileData.arrowImpassableRight) {\n                                realBit+= 4;\n                            }\n                            if(tileData.arrowImpassableUp) {\n                                realBit+= 8;\n                            }\n                        }\n                    }\n                }\n                arrowCollisionMap[realX] = arrowCollisionMap[realX] ^ realBit;\n                if (this.isHalfTile()) {\n                    arrowCollisionMap[realX + 1]\n                        = arrowCollisionMap[realX + 1] ^ realBit;\n                    arrowCollisionMap[realX + width]\n                        = arrowCollisionMap[realX + width] ^ realBit;\n                    arrowCollisionMap[realX + width + 1]\n                        = arrowCollisionMap[realX + width + 1] ^ realBit;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupRegion = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.regionId) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._regionsLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['regions']);\n        }\n        \n        let regionMap = this._regions[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                let regionId = 0;\n                if(layerData.properties.regionId > -1) {\n                    regionId = parseInt(layerData.properties.regionId);\n                } else {\n                    let tileId = TiledManager.extractTileId(layerData, x);\n                    let tileset = this._getTileset(tileId);\n                    if(tileset && tileset.tileproperties) {\n                        let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                        if(tileData && tileData.regionId) {\n                            regionId = parseInt(tileData.regionId);\n                        }\n                    }\n                    if(layerData.properties.regionOffset) {\n                        regionId+= layerData.properties.regionOffset;\n                    }\n                }\n                regionMap[realX] = regionId;\n                if (this.isHalfTile()) {\n                    regionMap[realX + 1] = regionId;\n                    regionMap[realX + width] = regionId;\n                    regionMap[realX + width + 1] = regionId;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupMapLevelChange = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('toLevel')) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._mapLevelChangeLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['mapLevelChange']);\n        }\n        \n        let levelChangeMap = this._mapLevelChange[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            let toLevel = parseInt(layerData.properties.toLevel);\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                levelChangeMap[realX] = toLevel;\n                if (this.isHalfTile()) {\n                    levelChangeMap[realX + 1] = toLevel;\n                    levelChangeMap[realX + width] = toLevel;\n                    levelChangeMap[realX + width + 1] = toLevel;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupPositionHeightChange = function () {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n\n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.hasOwnProperty('floorHeight')) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._positionHeightChangeLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['positionHeightChange']);\n        }\n        \n        let positionHeightChangeMap = this._positionHeightChange[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            let toLevel = parseInt(layerData.properties.floorHeight);\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                positionHeightChangeMap[realX] = toLevel;\n                if (this.isHalfTile()) {\n                    positionHeightChangeMap[realX + 1] = toLevel;\n                    positionHeightChangeMap[realX + width] = toLevel;\n                    positionHeightChangeMap[realX + width + 1] = toLevel;\n                }\n            }\n        }\n    }\n};\n\nGame_Map.prototype._setupTileFlags = function() {\n    let width = this.width();\n    let height = this.height();\n    let size = width * height;\n    let halfWidth = width / 2;\n    let halfHeight = height / 2;\n\n    if (this.isHalfTile()) {\n        size /= 4;\n    }\n    \n    for (let idx = 0; idx < this.tiledData.layers.length; idx++) {\n        let layerData = this.tiledData.layers[idx]\n        if (!layerData.properties || !layerData.properties.tileFlags) {\n            continue;\n        }\n\n        let level = parseInt(layerData.properties.level) || 0;\n        this._initializeMapLevel(level);\n        \n        let layerId = 'main';\n\n        if(TiledManager.hasHideProperties(layerData)) {\n            layerId = idx;\n            this._tileFlagsLayers[level].push(idx);\n            this._initializeMapLevelData(level, layerId, ['tileFlags']);\n        }\n        \n        let tileFlagMap = this._tileFlags[level][layerId];\n\n        for (let x of Array(size).keys()) {\n            let realX = x;\n            if (this.isHalfTile()) {\n                realX = Math.floor(x / halfWidth) * width * 2 + (x % halfWidth) * 2;\n            }\n\n            if (!!TiledManager.extractTileId(layerData, x)) {\n                let tileFlags = 0;\n                let tileId = TiledManager.extractTileId(layerData, x);\n                let tileset = this._getTileset(tileId);\n                if(tileset && tileset.tileproperties) {\n                    let tileData = tileset.tileproperties[tileId - tileset.firstgid];\n                    if(tileData) {\n                        tileFlags = this._getTileFlags(tileData);\n                    }\n                }\n                tileFlagMap[realX] = this._combineFlags(tileFlagMap[realX], tileFlags);\n                if (this.isHalfTile()) {\n                    tileFlagMap[realX + 1] = this._combineFlags(tileFlagMap[realX + 1], tileFlags);\n                    tileFlagMap[realX + width] = this._combineFlags(tileFlagMap[realX + width], tileFlags);\n                    tileFlagMap[realX + width + 1] = this._combineFlags(tileFlagMap[realX + width + 1], tileFlags);\n                }\n            }\n        }\n    }\n}\n\nGame_Map.prototype._getTileFlags = function(tileData) {\n    let flags = []\n    let flagNames = TiledManager.getFlagNames()\n    flagNames.forEach(prop => {\n        let property = 'flagIs' + prop.slice(0, 1).toUpperCase() + prop.slice(1)\n        if(tileData[property]) {\n            let [group, bit] = TiledManager.getFlagLocation(prop)\n            for(let i = flags.length; i <= group; i++) {\n                flags.push(0)\n            }\n            flags[group]|= bit\n        }\n    })\n    return flags.length > 0 ? flags : 0\n}\n\nGame_Map.prototype._combineFlags = function (source, target) {\n    source = source ? source.slice(0) : []\n    for(let i = 0; i < target.length; i++) {\n        if(!source.length <= i) {\n            source.push(i)\n        }\n        source[i]|= target[i];\n    }\n    return source;\n}\n\nGame_Map.prototype._setupReflection = function () {\n    for (const layerData of this.tiledData.layers) {\n        const properties = layerData.properties\n        if (layerData.type !== \"objectgroup\") {\n            continue;\n        }\n\n        if (!properties) {\n            continue;\n        }\n\n        const reflectionCast = getProperty(properties, 'reflectionCast')\n        const reflectionMask = getProperty(properties, 'reflectionMask')\n        const reflectionOpacity = getProperty(properties, 'reflectionOpacity') || 255\n        const reflectionOffset = getProperty(properties, 'reflectionOffset') || 0\n\n        if (reflectionCast === null) {\n            continue;\n        }\n\n        for (const obj of layerData.objects) {\n            const rect = {\n                x: obj.x,\n                y: obj.y,\n                width: obj.width,\n                height: obj.height,\n            };\n\n            this._reflection.push({\n                rect,\n                reflectionCast,\n                reflectionMask,\n                reflectionOpacity,\n                reflectionOffset,\n            });\n        }\n    }\n};\n\nGame_Map.prototype.isOnReflection = function (character) {\n    const mapX = character._realX * this.tileWidth();\n    const mapY = character._realY * this.tileHeight();\n\n    if (!this.isTiledMap()) {\n        return false;\n    }\n\n    if (this._reflection.length === 0) {\n        return false;\n    }\n\n    for (const reflection of this._reflection) {\n        const rect = reflection.rect;\n        const inX = mapX >= rect.x && mapX <= rect.x + rect.width;\n        const inY = mapY >= rect.y && mapY <= rect.y + rect.height;\n\n        if (inX && inY) {\n            return true;\n        }\n    }\n\n    return false;\n};\n\nGame_Map.prototype.getReflections = function (character) {\n    const mapX = character._realX;\n    const mapY = character._realY;\n\n    const result = [];\n\n    for (const reflection of this._reflection) {\n        const rect = reflection.rect;\n        const xBegin = rect.x / this.tileWidth();\n        const yBegin = rect.y / this.tileHeight();\n        const xEnd = (rect.x + rect.width) / this.tileWidth() - 1;\n        const yEnd = (rect.y + rect.height) / this.tileHeight() - 1;\n        const inX = mapX >= xBegin && mapX <= xEnd;\n        const inY = mapY >= yBegin && mapY <= yEnd;\n\n        if (inX && inY) {\n            result.push(reflection);\n        }\n    }\n\n    return result;\n};\n\nGame_Map.prototype._setupTiledEvents = function () {\n    for (let layerData of this.tiledData.layers) {\n        if (layerData.type !== \"objectgroup\") {\n            continue;\n        }\n\n        for (let object of layerData.objects) {\n            // call the object resolvers to perform actions based on the objects\n            TiledManager.processTiledObject(object, this);\n        }\n    }\n};\n\nGame_Map.prototype.isHalfTile = function () {\n    return pluginParams[\"Half-tile movement\"].toLowerCase() === \"true\";\n};\n\nGame_Map.prototype._getTileset = function(tileId) {\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\n        let tileset = this.tiledData.tilesets[idx];\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\n            return tileset;\n        }\n    }\n    return null;\n};\n\nGame_Map.prototype._getTilesetId = function(tileId) {\n    for(let idx = 0; idx < this.tiledData.tilesets.length; idx++) {\n        let tileset = this.tiledData.tilesets[idx];\n        if(tileId >= tileset.firstgid && tileId < tileset.firstgid + tileset.tilecount) {\n                if(tileset.properties && tileset.properties.ignoreLoading) {\n                    return -1;\n                }\n                return idx;\n        }\n    }\n    return -1;\n};\n\nGame_Map.prototype.tileWidth = function () {\n    let tileWidth = this.tiledData.tilewidth;\n    if (this.isHalfTile()) {\n        tileWidth /= 2;\n    }\n    return tileWidth;\n};\n\nGame_Map.prototype.tileHeight = function () {\n    let tileHeight = this.tiledData.tileheight;\n    if (this.isHalfTile()) {\n        tileHeight /= 2;\n    }\n    return tileHeight;\n};\n\nGame_Map.prototype.width = function () {\n    let width = this.tiledData.width;\n    if (this.isHalfTile()) {\n        width *= 2;\n    }\n    return width;\n};\n\nGame_Map.prototype.height = function () {\n    let height = this.tiledData.height;\n    if (this.isHalfTile()) {\n        height *= 2;\n    }\n    return height;\n};\n\nlet _regionId = Game_Map.prototype.regionId;\nGame_Map.prototype.regionId = function (x, y, allIds = false) {\n    if (!this.isTiledMap() || !this.isTiledInitialized()) {\n        return _regionId.call(this, x, y);\n    }\n\n    let index = Math.floor(x) + this.width() * Math.floor(y);\n    let regionMap = this._regions[this.currentMapLevel];\n    if(!regionMap) {\n        return allIds ? [0] : 0;\n    }\n    let regionLayer = this._regionsLayers[this.currentMapLevel];\n    \n    let regionValue = regionMap.main[index];\n    let regionValues = [regionValue];\n\n    if(regionLayer && regionLayer.length > 0) {\n        for(let idx = 0; idx < regionLayer.length; idx++) {\n            let layerId = regionLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'regions');\n            if(!hideData) {\n                if(allIds) {\n                    regionValues.push(regionMap[layerId][index]);\n                } else {\n                    regionValue = regionMap[layerId][index];\n                }\n            }\n        }\n    }\n\n    return allIds ? regionValues : regionValue;\n};\n\nGame_Map.prototype.regionIds = function (x, y) {\n    return this.regionId(x, y, true);\n}\n\nGame_Map.prototype.getMapLevels = function() {\n    let levels = this._levels.slice(0);\n    levels.sort((a, b) => {\n        return a - b;\n    });\n    return levels;\n}\n\nlet _checkPassage = Game_Map.prototype.checkPassage;\nGame_Map.prototype.checkPassage = function (x, y, bit, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _checkPassage.call(this, x, y, d);\n    }\n    if(level === false) {\n        level = this._currentMapLevel;\n    }\n    let index = x + this.width() * y;\n    let arrows = this._arrowCollisionMap[level];\n    if(!arrows) {\n        return true;\n    }\n    let arrowLayer = this._arrowCollisionMapLayers[level];\n    let arrowValue = arrows.main[index];\n    \n    if(render && arrows[render]) {\n        arrowValue = arrows[render][index];\n    } else if(arrowLayer && arrowLayer.length > 0) {\n        for(let idx = 0; idx < arrowLayer.length; idx++) {\n            let layerId = arrowLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\n            if(!hideData) {\n                arrowValue&= arrows[layerId][index];\n            }\n        }\n    }\n\n    return (arrowValue & bit) > 0\n}\n\nGame_Map.prototype.renderPassage = function (x, y, bit, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._arrowCollisionMap[level][render]) {\n        render = 'main';\n    }\n    return this.checkPassage(x, y, bit, render, level);\n}\n\nGame_Map.prototype.getPassageLayers = function(level) {\n    return this._arrowCollisionMapLayers[level].slice(0);\n}\n\nlet _isPassable = Game_Map.prototype.isPassable;\nGame_Map.prototype.isPassable = function (x, y, d, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isPassable.call(this, x, y, d);\n    }\n    if(level === false) {\n        level = this._currentMapLevel;\n    }\n\n    if(!this.checkPassage(x, y, (1 << (d / 2 - 1)) & 0x0f, render)) {\n        return false;\n    }\n    \n    let index = x + this.width() * y;\n    let collisionMap = this._collisionMap[level];\n    if(!collisionMap) {\n        return true;\n    }\n    let collisionLayer = this._collisionMapLayers[level];\n    let collisionValue = collisionMap.main[index]\n    \n    if(render && collisionMap[render]) {\n        collisionValue = collisionMap[render][index];\n    } else if(collisionLayer && collisionLayer.length > 0) {\n        for(let idx = 0; idx < collisionLayer.length; idx++) {\n            let layerId = collisionLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'collisions');\n            if(!hideData) {\n                collisionValue|= collisionMap[layerId][index];\n            }\n        }\n    }\n\n    return collisionValue === 0;\n};\n\nGame_Map.prototype.renderIsPassable = function (x, y, d, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._collisionMap[level][render]) {\n        render = 'main';\n    }\n    return this.isPassable(x, y, d, render, level);\n}\n\nGame_Map.prototype.getIsPassableLayers = function(level) {\n    return this._collisionMapLayers[level].slice(0);\n}\n\nGame_Map.prototype.checkMapLevelChanging = function (x, y) {\n    let mapLevelChange = this._mapLevelChange[this.currentMapLevel];\n    if(!mapLevelChange) {\n        return false;\n    }\n    let mapLevelChangeLayer = this._mapLevelChangeLayers[this.currentMapLevel];\n    let index = y * this.width() + x;\n    let mapLevelChangeValue = mapLevelChange.main[index]\n    if(mapLevelChangeLayer.length > 0) {\n        for(let idx = 0; idx < mapLevelChangeLayer.length; idx++) {\n            let layerId = mapLevelChangeLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'levelChanges');\n            if(!hideData) {\n                mapLevelChangeValue = mapLevelChange[layerId][index];\n            }\n        }\n    }\n    if (mapLevelChangeValue < 0) {\n        return false;\n    }\n    let oldValue = this.currentMapLevel;\n    this.currentMapLevel = mapLevelChangeValue;\n    TiledManager.triggerListener(this, 'levelchanged', {\n        oldLevel: oldValue,\n        newLevel: mapLevelChangeValue\n    })\n    return true;\n};\n\nGame_Map.prototype.checkPositionHeight = function (x, y) {\n    let positionHeightChange = this._positionHeightChange[this.currentMapLevel];\n    if(!positionHeightChange) {\n        return -1;\n    }\n    let positionHeightChangeLayer = this._positionHeightChangeLayers[this.currentMapLevel];\n    let index = y * this.width() + x;\n    let positionHeightChangeValue = positionHeightChange.main[index];\n    if(positionHeightChangeLayer.length > 0) {\n        for(let idx = 0; idx < positionHeightChangeLayer.length; idx++) {\n            let layerId = positionHeightChangeLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'positionHeightChanges');\n            if(!hideData) {\n                positionHeightChangeValue = positionHeightChange[layerId][index];\n            }\n        }\n    }\n    return positionHeightChangeValue;\n};\n\nGame_Map.prototype.getTileFlags = function (x, y, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    let index = x + this.width() * y;\n    let tileFlags = this._tileFlags[level];\n    if(!tileFlags) {\n        return [];\n    }\n    let tileFlagsLayer = this._tileFlagsLayers[level];\n    let tileFlagsValue = (tileFlags.main[index] ? tileFlags.main[index].slice(0) : []);\n\n    if(render && tileFlags[render]) {\n        tileFlagsValue = (tileFlags[render][index] ? tileFlags[render][index].slice(0) : []);\n    } else if(tileFlagsLayer && tileFlagsLayer.length > 0) {\n        for(let idx = 0; idx < tileFlagsLayer.length; idx++) {\n            let layerId = tileFlagsLayer[idx];\n            let layerData = this.tiledData.layers[layerId];\n            let hideData = TiledManager.checkLayerHidden(layerData, 'tileFlags');\n            if(!hideData && tileFlags[layerId][index]) {\n                tileFlagsValue = this._combineFlags(tileFlagsValue, tileFlags[layerId][index])\n            }\n        }\n    }\n    return tileFlagsValue\n}\n\nGame_Map.prototype.renderTileFlags = function (x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._tileFlags[level][render]) {\n        render = 'main';\n    }\n    return this.getTileFlags(x, y, render, level);\n}\n\nGame_Map.prototype.getTileFlagLayers = function(level) {\n    return this._tileFlagsLayers[level].slice(0);\n}\n\nGame_Map.prototype.checkHasTileFlag = function (x, y, flag, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    if(typeof flag === 'string') {\n        flag = TiledManager.getFlag(flag)\n    }\n    let bit = (1 << (flag % 16)) & 0xffff;\n    let group = Math.floor(flag / 16);\n    let tileFlagsValue = this.getTileFlags(x, y, render, level);\n    \n    return (tileFlagsValue[group] & bit) > 0\n}\n\nGame_Map.prototype.renderHasTileFlag = function (x, y, flag, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    if(render && !this._tileFlags[level][render]) {\n        render = 'main';\n    }\n    return this.checkHasTileFlag(x, y, flag, render, level);\n}\n\nlet _isBoatPassable = Game_Map.prototype.isBoatPassable\nGame_Map.prototype.isBoatPassable = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isBoatPassable.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.checkHasTileFlag(x, y, 'boat', render, level);\n};\n\nGame_Map.prototype.renderIsBoatPassable = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isBoatPassable(x, y, render, level);\n}\n\nlet _isShipPassable = Game_Map.prototype.isShipPassable\nGame_Map.prototype.isShipPassable = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isShipPassable.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.checkHasTileFlag(x, y, 'ship', render);\n};\n\nGame_Map.prototype.renderIsShipPassable = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isShipPassable(x, y, render, level);\n}\n\nlet _isAirshipLandOk = Game_Map.prototype.isAirshipLandOk\nGame_Map.prototype.isAirshipLandOk = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isAirshipLandOk.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.checkHasTileFlag(x, y, 'airship', render) && this.checkPassage(x, y, 0x0f, render);\n};\n\nGame_Map.prototype.renderIsAirshipLandOk = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isAirshipLandOk(x, y, render, level);\n}\n\nlet _isLadder = Game_Map.prototype.isLadder\nGame_Map.prototype.isLadder = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isLadder.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ladder', render);\n};\n\nGame_Map.prototype.renderIsLadder = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isLadder(x, y, render, level);\n}\n\nlet _isBush = Game_Map.prototype.isBush\nGame_Map.prototype.isBush = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isBush.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'bush', render);\n};\n\nGame_Map.prototype.renderIsBush = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isBush(x, y, render, level);\n}\n\nlet _isCounter = Game_Map.prototype.isCounter\nGame_Map.prototype.isCounter = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isCounter.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'counter', render);\n};\n\nGame_Map.prototype.renderIsCounter = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isCounter(x, y, render, level);\n}\n\nlet _isDamageFloor = Game_Map.prototype.isDamageFloor\nGame_Map.prototype.isDamageFloor = function(x, y, render = false, level = false) {\n    if (!this.isTiledMap()) {\n        return _isDamageFloor.call(this, x, y);\n    }\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'damage', render);\n};\n\nGame_Map.prototype.renderIsDamageFloor = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isDamageFloor(x, y, render, level);\n}\n\nGame_Map.prototype.isSlipperyFloor = function(x, y, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'ice', render);\n};\n\nGame_Map.prototype.renderIsSlipperyFloor = function(x, y, render = 'main', level = 0) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isSlipperyFloor(x, y, render, level);\n}\n\nlet _isHealFloor = Game_Map.prototype.isHealFloor\nGame_Map.prototype.isHealFloor = function(x, y, render = false, level = false) {\n    if(level === false) {\n        level = 0;\n    }\n    return this.isValid(x, y) && this.checkHasTileFlag(x, y, 'heal', render);\n};\n\nGame_Map.prototype.getAllLayerProperties = function(layer = -1, ignoreHidden = true) {\n\tif(layer > -1) {\n\t\tif(this.tiledData.layers[layer] && this.tiledData.layers[layer].properties) {\n\t\t\treturn Object.assign({}, this.tiledData.layers[layer].properties);\n\t\t}\n\t\treturn {};\n\t}\n\tlet layerProperties = {};\n\tthis.tiledData.layers.forEach((layerData, i) => {\n\t\tif(layerData && layerData.properties) {\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData, 'collisions')) {\n                layerProperties[i] = Object.assign({}, layerData.properties);\n            }\n\t\t}\n\t});\n\treturn layerProperties;\n}\n\nGame_Map.prototype.getTileProperties = function(x, y, layer = -1, ignoreHidden = true) {\n    let index = x + this.width() * y;\n    \n\tif(layer > -1) {\n\t\tif(this.tiledData.layers[layer] && (this.tiledData.layers[layer].data || this.tiledData.layers[layer].chunks)) {\n\t\t\tlet tileId = TiledManager.extractTileId(this.tiledData.layers[layer], index);\n\t\t\tlet tileset = this._getTileset(tileId);\n\t\t\tif(tileset && tileset.tileproperties) {\n\t\t\t\treturn Object.assign({}, tileset.tileproperties[tileId - tileset.firstgid]);\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\tlet tileProperties = {};\n\tthis.tiledData.layers.forEach((layerData, i) => {\n\t\tif(layerData && (layerData.data || layerData.chunks) && layerData.properties) {\n            if(!ignoreHidden || !TiledManager.checkLayerHidden(layerData)) {\n                let props = this.getTileProperties(x, y, i);\n                if(Object.keys(props).length > 0) {\n                    tileProperties[i] = props;\n                }\n            }\n\t\t}\n\t});\n\treturn tileProperties;\n}\n\n/* Custom vehicles */\nlet _createVehicles = Game_Map.prototype.createVehicles\nGame_Map.prototype.createVehicles = function() {\n    if (!this.isTiledMap()) {\n        _createVehicles.call(this);\n    }\n    this._vehicles = [];\n\n};\n\nlet _refreshVehicles = Game_Map.prototype.refereshVehicles\nGame_Map.prototype.refereshVehicles = function() {\n    if (!this.isTiledMap()) {\n        return _refreshVehicles.call(this);\n    }\n    return TiledManager.refreshVehicles(this._vehicles);\n};\n\nlet _vehicles = Game_Map.prototype.vehicles\nGame_Map.prototype.vehicles = function(getNames = false) {\n    if (!this.isTiledMap()) {\n        return _vehicles.call(this);\n    }\n    if(getNames) {\n        return this._vehicles;\n    }\n    return TiledManager.getAllVehicles(this._vehicles);\n};\n\nlet _vehicle = Game_Map.prototype.vehicle\nGame_Map.prototype.vehicle = function(type) {\n    if (!this.isTiledMap()) {\n        return _vehicles.call(this, type);\n    }\n    return TiledManager.getVehicle(type);\n}\n\nlet _boat = Game_Map.prototype.boat\nGame_Map.prototype.boat = function() {\n    if (!this.isTiledMap()) {\n        return _boat.call(this);\n    }\n    return TiledManager.getVehicle('boat');\n};\n\nlet _ship = Game_Map.prototype.ship\nGame_Map.prototype.ship = function() {\n    if (!this.isTiledMap()) {\n        return _ship.call(this);\n    }\n    return TiledManager.getVehicle('ship');\n};\n\nlet _airship = Game_Map.prototype.airship\nGame_Map.prototype.airship = function() {\n    if (!this.isTiledMap()) {\n        return _airship.call(this);\n    }\n    return TiledManager.getVehicle('airship');\n};\n\nlet _updateVehicles = Game_Map.prototype.updateVehicles\nGame_Map.prototype.updateVehicles = function() {\n    if (!this.isTiledMap()) {\n        _updateVehicles.call(this);\n    }\n    TiledManager.updateVehicles(this._vehicles);\n};\n\nGame_Map.prototype.waypoint = function(waypoint) {\n    if(this._waypoints[waypoint]) {\n        return this._waypoints[waypoint];\n    }\n    return null;\n}\n\nlet _update = Game_Map.prototype.update\nGame_Map.prototype.update = function(sceneActive) {\n    this.setLayerProperties();\n    _update.call(this, sceneActive);\n}\n\nGame_Map.prototype.getLayerProperties = function(layerId) {\n    return Object.assign({}, this._layerProperties[layerId]);\n}\n\nGame_Map.prototype.setLayerProperties = function() {\n    this._layerProperties.forEach((props, i) => {\n        let layer = this.tiledData.layers[i];\n        if(props.transition) {\n            props.isShown = !TiledManager.checkLayerHidden(layer);\n            props.transitionPhase = Math.max(0, Math.min(props.transition, props.transitionPhase + (props.isShown ? 1 : -1)));\n        }\n        if(props.autoSpeedX) {\n            props.autoX+= props.autoSpeedX\n            if(props.autoDuration || props.imageWidth) {\n                while(props.autoX < 0) {\n                    props.autoX+= props.autoDuration || props.imageWidth;\n                }\n                while(props.autoX > props.imageWidth) {\n                    props.autoX-= props.autoDuration || props.imageWidth;\n                }\n            }\n        }\n        if(props.autoSpeedY) {\n            props.autoY+= props.autoSpeedY\n            if(props.imageHeight) {\n                while(props.autoY < 0) {\n                    props.autoY+= props.autoDuration || props.imageHeight;\n                }\n                while(props.autoY > props.imageHeight) {\n                    props.autoY-= props.autoDuration || props.imageHeight;\n                }\n            }\n        }\n    });\n}\n\nlet _battleback1Name = Game_Map.prototype.battleback1Name\nGame_Map.prototype.battleback1Name = function() {\n    if(!this.isTiledMap()) {\n        return _battleback1Name.call(this);\n    }\n    let tileProps = Game_Map.prototype.getTileProperties($gamePlayer.x, $gamePlayer.y);\n    let battleback = false;\n    Object.keys(tileProps).forEach((layerId) => {\n        let props = tileProps[layerId];\n        if(props.hasOwnProperty('battleback1Name')) {\n            battleback = props.battleback1Name;\n        }\n    })\n    if(battleback || battleback === '') {\n        return battleback;\n    }\n    return _battleback1Name.call(this);\n};\n\nlet _battleback2Name = Game_Map.prototype.battleback2Name\nGame_Map.prototype.battleback2Name = function() {\n    if(!this.isTiledMap()) {\n        return _battleback2Name.call(this);\n    }\n    let tileProps = Game_Map.prototype.getTileProperties($gamePlayer.x, $gamePlayer.y);\n    let battleback = false;\n    Object.keys(tileProps).forEach((layerId) => {\n        let props = tileProps[layerId];\n        if(props.hasOwnProperty('battleback2Name')) {\n            battleback = props.battleback2Name;\n        }\n    })\n    if(battleback || battleback === '') {\n        return battleback;\n    }\n    return _battleback2Name.call(this);\n};\n","\r\nGame_Screen.prototype.startFlashForHeal = function() {\r\n    this.startFlash([128, 192, 255, 128], 8);\r\n};\r\n","const pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nconst _initMembers = Game_CharacterBase.prototype.initMembers;\r\nGame_CharacterBase.prototype.initMembers = function () {\r\n    _initMembers.call(this);\r\n    this.reflections = [];\r\n};\r\n\r\nGame_CharacterBase.prototype.screenZ = function () {\r\n    if (this._priorityType == 0) {\r\n        return parseInt(TiledManager.getParam('Z - Below Player', '1'));\r\n    }\r\n    if (this._priorityType == 2) {\r\n        return parseInt(TiledManager.getParam('Z - Above Player', '5'));\r\n    }\r\n    return parseInt(TiledManager.getParam('Z - Player', '3'));\r\n};\r\n\r\nconst _distancePerFrame = Game_CharacterBase.prototype.distancePerFrame;\r\nGame_CharacterBase.prototype.distancePerFrame = function () {\r\n    const distance = _distancePerFrame.call(this);\r\n    return distance * (48 / Math.min($gameMap.tileWidth(), $gameMap.tileHeight()));\r\n};\r\n\r\nconst _refreshBushDepth = Game_CharacterBase.prototype.refreshBushDepth;\r\nGame_CharacterBase.prototype.refreshBushDepth = function() {\r\n    if(!this.hasOwnProperty('_bushDepth')) {\r\n        this._bushDepth = 0;\r\n    }\r\n    if(!$gameMap.isTiledMap() || $gameMap.isTiledInitialized()) {\r\n        _refreshBushDepth.call(this);\r\n    } else {\r\n        $gameMap.setRefreshDepth(this);\r\n    }\r\n};\r\n\r\nconst _updateMove = Game_CharacterBase.prototype.updateMove;\r\nGame_CharacterBase.prototype.updateMove = function() {\r\n    var hori = (this._realX > this._x ? 4 : (this._realX < this._x ? 6 : 0))\r\n    var vert = (this._realY > this._y ? 8 : (this._realY < this._y ? 2 : 0))\r\n    var d = hori + vert\r\n    _updateMove.call(this);\r\n    if(!this.isMoving() || pluginParams[\"Position Height - Always Check On Move Update\"].toLowerCase() === \"true\") {\r\n        let newLocationHeight = $gameMap.checkPositionHeight(this._x, this._y);\r\n        if(newLocationHeight > -1) {\r\n            this._locationHeight = newLocationHeight;\r\n        }\r\n    }\r\n    if(!this.isMoving()) {\r\n        TiledManager.triggerListener(this, 'stopmovement', {\r\n            direction: d\r\n        })\r\n        if($gameMap.isSlipperyFloor(this._x, this._y)) {\r\n            TiledManager.triggerListener(this, 'slipperyfloor', {\r\n                direction: d\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst _update = Game_CharacterBase.prototype.update;\r\nGame_CharacterBase.prototype.update = function() {\r\n    _update.call(this);\r\n    this.updateReflection();\r\n};\r\n\r\nGame_CharacterBase.prototype.updateReflection = function() {\r\n    if (!$gameMap.isOnReflection(this)) {\r\n        this.reflections = [];\r\n        return;\r\n    }\r\n    this.reflections = $gameMap.getReflections(this);\r\n};\r\n\r\nGame_CharacterBase.prototype.locationHeight = function() {\r\n\treturn this._locationHeight || 0\r\n}\r\n\r\nconst _isCollideWithVehicles = Game_CharacterBase.prototype.isCollidedWithVehicles\r\nGame_CharacterBase.prototype.isCollidedWithVehicles = function(x, y) {\r\n    if(!_isCollideWithVehicles.call(this, x, y)) {\r\n        let vehicles = $gameMap.vehicles();\r\n        for(let i = 0; i < vehicles.length; i++) {\r\n            if(!(vehicles[i].vehicleData && (!vehicles[i].vehicleData.hasOwnProperty('hasCollision') || vehicles[i].vehicleData.hasCollision === 'true' || vehicles[i].vehicleData.hasCollision === true)) || vehicles[i].posNt(x, y)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGame_CharacterBase.prototype.updateScroll = function(lastScrolledX, lastScrolledY) {\r\n    var x1 = lastScrolledX;\r\n    var y1 = lastScrolledY;\r\n    var x2 = this.scrolledX();\r\n    var y2 = this.scrolledY();\r\n    if (y2 > y1 && y2 > this.centerY()) {\r\n        $gameMap.scrollDown(y2 - y1);\r\n    }\r\n    if (x2 < x1 && x2 < this.centerX()) {\r\n        $gameMap.scrollLeft(x1 - x2);\r\n    }\r\n    if (x2 > x1 && x2 > this.centerX()) {\r\n        $gameMap.scrollRight(x2 - x1);\r\n    }\r\n    if (y2 < y1 && y2 < this.centerY()) {\r\n        $gameMap.scrollUp(y1 - y2);\r\n    }\r\n};\r\n","// Constants\r\nlet pluginParams = PluginManager.parameters(\"YED_Tiled\");\r\n\r\nlet _checkFloorEffect = Game_Actor.prototype.checkFloorEffect;\r\nGame_Actor.prototype.checkFloorEffect = function() {\r\n    _checkFloorEffect.call(this);\r\n    if ($gamePlayer.isOnHealFloor()) {\r\n        this.executeFloorHeal();\r\n    }\r\n}\r\n\r\nGame_Actor.prototype.executeFloorHeal = function() {\r\n    var heal = Math.floor(this.basicFloorHeal() * this.fdr);\r\n    heal = Math.min(heal, this.maxFloorHeal());\r\n    this.gainHp(heal);\r\n    if (heal > 0) {\r\n        this.performMapHeal();\r\n    }\r\n};\r\n\r\nGame_Actor.prototype._getFloorHPCalculation = function(type = 'damage') {\r\n    let typeName = type.slice(0, 1).toUpperCase() + type.slice(1).toLowerCase();\r\n    let floorHP = [];\r\n    for(var layerId = 0; layerId < $gameMap.tiledData.layers; layerId++) {\r\n        let layerData = $gameMap.tiledData.layers[layerId];\r\n        if(!layerData.properties) {\r\n            return;\r\n        }\r\n        let level = parseInt(layerData.properties.level) || 0;\r\n        if(level !== $gameMap.currentMapLevel) {\r\n            return;\r\n        }\r\n        if(TiledManager.checkLayerHidden(layerData)) {\r\n            return;\r\n        }\r\n        let tile = Game_Map.prototype.getTileProperties(x, y, layerId);\r\n        if(!!tile.properties && !!tile.properties['floor' + typeName]) {\r\n            floorHP.push(layerData.properties['floor' + typeName]);\r\n        }\r\n    }\r\n    let actualHP = 0;\r\n    switch((pluginParams[\"Floor HP Calculation\"] || '').toLowerCase()) {\r\n        case 'sum':\r\n            floorHP.forEach(hp => {\r\n                actualHP+= hp;\r\n            })\r\n            break;\r\n        case 'average':\r\n            floorHP.forEach(hp => {\r\n                actualHP+= hp;\r\n            })\r\n            actualHP = Math.round(actualHP / floorHP.length);\r\n            break;\r\n        case 'top':\r\n        default:\r\n            actualHP = floorHP.pop();\r\n            break;\r\n    }\r\n    return actualHP;\r\n}\r\n\r\nGame_Actor.prototype.basicFloorDamage = function() {\r\n    let actualDamage = this._getFloorHPCalculation('damage');\r\n    return actualDamage || parseInt(pluginParams[\"Basic Floor Damage\"]) || 10;\r\n};\r\n\r\nGame_Actor.prototype.basicFloorHeal = function() {\r\n    let actualHeal = this._getFloorHPCalculation('heal');\r\n    return actualHeal || parseInt(pluginParams[\"Basic Floor Heal\"]) || 10;\r\n};\r\n\r\nGame_Actor.prototype.maxFloorHeal = function() {\r\n    return Math.max(this.mhp - this.hp, 0);\r\n};\r\n\r\nGame_Actor.prototype.performMapHeal = function() {\r\n    if (!$gameParty.inBattle()) {\r\n        $gameScreen.startFlashForHeal();\r\n    }\r\n};\r\n","const _initMembers = Game_Player.prototype.initMembers;\r\nGame_Player.prototype.initMembers = function() {\r\n    _initMembers.call(this);\r\n    this._newWaypoint = '';\r\n}\r\n\r\nconst _checkEventTriggerHere = Game_Player.prototype.checkEventTriggerHere;\r\nGame_Player.prototype.checkEventTriggerHere = function (triggers) {\r\n    _checkEventTriggerHere.call(this, triggers);\r\n    this._checkMapLevelChangingHere();\r\n};\r\n\r\nGame_Player.prototype._checkMapLevelChangingHere = function () {\r\n    const oldLevel = $gameMap.currentMapLevel;\r\n    $gameMap.checkMapLevelChanging(this.x, this.y);\r\n    TiledManager.triggerListener(this, 'levelchanged', {\r\n        oldLevel,\r\n        newLevel: $gameMap.currentMapLevel\r\n    })\r\n};\r\n\r\nGame_Player.prototype.isOnHealFloor = function() {\r\n    return $gameMap.isHealFloor(this.x, this.y) && !this.isInAirship();\r\n};\r\n\r\nconst _getOnVehicle = Game_Player.prototype.getOnVehicle\r\nGame_Player.prototype.getOnVehicle = function() {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _getOnVehicle.call(this);\r\n    }\r\n    var direction = this.direction();\r\n    var x1 = this.x;\r\n    var y1 = this.y;\r\n    var x2 = $gameMap.roundXWithDirection(x1, direction);\r\n    var y2 = $gameMap.roundYWithDirection(y1, direction);\r\n    if ($gameMap.airship().pos(x1, y1)) {\r\n        this._vehicleType = 'airship';\r\n    } else if ($gameMap.ship().pos(x2, y2)) {\r\n        this._vehicleType = 'ship';\r\n    } else if ($gameMap.boat().pos(x2, y2)) {\r\n        this._vehicleType = 'boat';\r\n    } else {\r\n        let vehicles = $gameMap.vehicles(true);\r\n        vehicles.forEach(vehicleName => {\r\n            let vehicle = $gameMap.vehicle(vehicleName);\r\n            if(vehicle.vehicleData) {\r\n                if(!vehicle.vehicleData.hasOwnProperty('hasCollision') || vehicle.vehicleData.hasCollision === 'true' || vehicle.vehicleData.hasCollision === true) {\r\n                    if(vehicle.pos(x2, y2)) {\r\n                        this._vehicleType = vehicleName;\r\n                    }\r\n                } else {\r\n                    if(vehicle.pos(x1, y1)) {\r\n                        this._vehicleType = vehicleName;\r\n                    }\r\n                }\r\n            } else if(vehicle.pos(x2, y2)) {\r\n                this._vehicleType = vehicleName;\r\n            }\r\n        })\r\n    }\r\n    if (this.isInVehicle()) {\r\n        this._vehicleGettingOn = true;\r\n        if (!this.isInAirship()) {\r\n            this.forceMoveForward();\r\n        }\r\n        this.gatherFollowers();\r\n    }\r\n    return this._vehicleGettingOn;\r\n};\r\n\r\nlet _gamePlayerTriggerTouchActionD2 = Game_Player.prototype.triggerTouchActionD2\r\nGame_Player.prototype.triggerTouchActionD2 = function(x2, y2) {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _gamePlayerTriggerTouchActionD2.call(this, x2, y2);\r\n    }\r\n    if ($gameMap.boat().pos(x2, y2) || $gameMap.ship().pos(x2, y2)) {\r\n        if (TouchInput.isTriggered() && this.getOnVehicle()) {\r\n            return true;\r\n        }\r\n    }\r\n    if (this.isInBoat() || this.isInShip()) {\r\n        if (TouchInput.isTriggered() && this.getOffVehicle()) {\r\n            return true;\r\n        }\r\n    }\r\n    let vehicles = $gameMap.vehicles(true);\r\n    for(var idx = 0; idx < vehicles.length; idx++) {\r\n        let vehicle = $gameMap.vehicle(vehicles[idx]);\r\n        if(!vehicle.vehicleData ||\r\n            !vehicle.vehicleData.hasOwnProperty('hasCollision') ||\r\n            vehicle.vehicleData.hasCollision === 'true' ||\r\n            vehicle.vehicleData.hasCollision === true\r\n        ) {\r\n            if(vehicle.pos(x2, y2) && TouchInput.isTriggered() && this.getOnVehicle()) {\r\n                return true;\r\n            }\r\n            if(this._vehicleType === vehicles[idx] && TouchInput.isTriggered() && this.getOffVehicle()) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    this.checkEventTriggerThere([0,1,2]);\r\n    return $gameMap.setupStartingEvent();\r\n};\r\n\r\n\r\nlet _isInVehicle = Game_Player.prototype.isInVehicle\r\nGame_Player.prototype.isInVehicle = function() {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _isInVehicle.call(this);\r\n    }\r\n    return $gameMap.vehicles(true).indexOf(this._vehicleType) > -1;\r\n};\r\n\r\nlet _reserveTransfer = Game_Player.prototype.reserveTransfer\r\nGame_Player.prototype.reserveTransfer = function(mapId, x, y, d, fadeType, waypoint = '') {\r\n    _reserveTransfer.call(this, mapId, x, y, d, fadeType);\r\n    this._newWaypoint = waypoint;\r\n}\r\n\r\nGame_Player.prototype.performTransfer = function() {\r\n    if (this.isTransferring()) {\r\n        this.setDirection(this._newDirection);\r\n        if (this._newMapId !== $gameMap.mapId() || this._needsMapReload) {\r\n            $gameMap.setup(this._newMapId);\r\n            this._needsMapReload = false;\r\n        }\r\n        let newX = this._newX;\r\n        let newY = this._newY;\r\n        if($gameMap.isTiledMap()) {\r\n            if(this._newWaypoint) {\r\n                let waypoint = $gameMap.waypoint(this._newWaypoint);\r\n                if(waypoint) {\r\n                    newX = waypoint.x;\r\n                    newY = waypoint.y;\r\n                }\r\n            }\r\n            let offsets = $gameMap.offsets();\r\n            if(offsets && offsets.hasOwnProperty('x') && offsets.hasOwnProperty('y')) {\r\n                newX-= offsets.x;\r\n                newY-= offsets.y;\r\n            }\r\n        }\r\n        this.locate(newX, newY);\r\n        this.refresh();\r\n        this.clearTransferInfo();\r\n    }\r\n};\r\n\r\nlet _clearTransferInfo = Game_Player.prototype.clearTransferInfo;\r\nGame_Player.prototype.clearTransferInfo = function() {\r\n    _clearTransferInfo.call(this);\r\n    this._newWaypoint = '';\r\n}","const _initialize = Game_Vehicle.prototype.initialize;\r\nGame_Vehicle.prototype.initialize = function(type, vehicleData = false) {\r\n    if(vehicleData) {\r\n        this.vehicleData = vehicleData;\r\n    }\r\n    _initialize.call(this, type);\r\n};\r\n\r\nconst _initMoveSpeed = Game_Vehicle.prototype.initMoveSpeed\r\nGame_Vehicle.prototype.initMoveSpeed = function() {\r\n    _initMoveSpeed.call(this);\r\n    if(!!this.vehicleData && this.vehicleData.moveSpeed) {\r\n        this.setMoveSpeed(parseInt(this.vehicleData.moveSpeed));\r\n    }\r\n};\r\n\r\nlet _vehicle = Game_Vehicle.prototype.vehicle\r\nGame_Vehicle.prototype.vehicle = function() {\r\n    var vehicleData = _vehicle.call(this);\r\n    if(!vehicleData && !!this.vehicleData) {\r\n        return this.vehicleData;\r\n    }\r\n    return vehicleData;\r\n};\r\n\r\nlet _isMapPassable = Game_Vehicle.prototype.isMapPassable\r\nGame_Vehicle.prototype.isMapPassable = function(x, y, d, render = false) {\r\n    if(!$gameMap.isTiledMap()) {\r\n        return _isMapPassable.call(this, x, y, d);\r\n    }\r\n    var x2 = $gameMap.roundXWithDirection(x, d);\r\n    var y2 = $gameMap.roundYWithDirection(y, d);\r\n    if (this.isBoat()) {\r\n        return $gameMap.isBoatPassable(x2, y2, render);\r\n    } else if (this.isShip()) {\r\n        return $gameMap.isShipPassable(x2, y2, render);\r\n    } else if (this.isAirship()) {\r\n        return true;\r\n    } else {\r\n        var vehicleData = this.vehicle();\r\n        if(!!vehicleData) {\r\n            if(!!vehicleData.tileFlag) {\r\n                return $gameMap.checkHasTileFlag(x2, y2, vehicleData.tileFlag, render);\r\n            }\r\n            if(vehicleData.tileFlag === '') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\r\nGame_Vehicle.prototype.loadSystemSettings = function() {\r\n    var vehicle = (window.$dataSystem ? this.vehicle() : null);\r\n    if(vehicle) {\r\n        this._mapId = vehicle.startMapId;\r\n        this.setPosition(vehicle.startX, vehicle.startY);\r\n        this.setImage(vehicle.characterName, vehicle.characterIndex);\r\n    }\r\n};\r\n\r\nlet _resetDirection = Game_Vehicle.prototype.resetDirection\r\nGame_Vehicle.prototype.resetDirection = function() {\r\n    if(!!this.vehicleData && !!this.vehicleData.direction) {\r\n        this.setDirection(parseInt(this.vehicleData.direction));\r\n    } else {\r\n        _resetDirection.call(this)\r\n    }\r\n};\r\n\r\nGame_Vehicle.prototype.getOff = function() {\r\n    this._driving = false;\r\n    this.setWalkAnime(false);\r\n    this.setStepAnime(false);\r\n    if(!this.vehicleData || !this.vehicleData.hasOwnProperty('resetDirection') || this.vehicleData.resetDirection === 'true') {\r\n        this.resetDirection();\r\n    }\r\n    $gameSystem.replayWalkingBgm();\r\n};\r\n","let _pluginCommand = Game_Interpreter.prototype.pluginCommand\r\nGame_Interpreter.prototype.pluginCommand = function(command, args) {\r\n    _pluginCommand.call(this, command, args);\r\n    TiledManager.pluginCommand.call(this, command, args);\r\n};\r\n","let _update = Sprite_Character.prototype.update\r\nSprite_Character.prototype.update = function() {\r\n\t_update.call(this);\r\n\tthis.locationHeight = this._character.locationHeight();\r\n}","import { TiledTilemap } from \"./TiledTilemap\";\r\nimport { newRectMask } from \"./ReflectionMask\";\r\nimport { Sprite_CharacterReflect } from './Sprite_CharacterReflect';\r\n\r\nlet _initialize = Spriteset_Battle.prototype.initialize\r\nSpriteset_Battle.prototype.initialize = function() {\r\n    this._parallaxContainers = {};\r\n    _initialize.call(this);\r\n}\r\n\r\nlet _createTilemap = Spriteset_Map.prototype.createTilemap;\r\nSpriteset_Map.prototype.createTilemap = function () {\r\n    if (!$gameMap.isTiledMap()) {\r\n        _createTilemap.call(this);\r\n        return;\r\n    }\r\n    this._tilemap = new TiledTilemap($gameMap.tiledData);\r\n    this._tilemap.horizontalWrap = $gameMap.isLoopHorizontal();\r\n    this._tilemap.verticalWrap = $gameMap.isLoopVertical();\r\n    this.loadTileset();\r\n    this._baseSprite.addChild(this._tilemap);\r\n    this._reflectSurfaceSprite = new Sprite();\r\n    this.addChild(this._reflectSurfaceSprite);\r\n    this.createReflectionMask();\r\n};\r\n\r\nlet _loadTileset = Spriteset_Map.prototype.loadTileset;\r\nSpriteset_Map.prototype.loadTileset = function () {\r\n    if (!$gameMap.isTiledMap()) {\r\n        _loadTileset.call(this);\r\n        return;\r\n    }\r\n\r\n    let i = 0;\r\n    for (let tileset of $gameMap.tiledData.tilesets) {\r\n        if(tileset.properties && tileset.properties.ignoreLoading) {\r\n            continue;\r\n        }\r\n        if(tileset.image) {\r\n            let bitmap = ImageManager.loadParserTileset(tileset.image, 0);\r\n            this._tilemap.bitmaps.push(bitmap);\r\n            this._tilemap.indexedBitmaps[i] = bitmap;\r\n        } else {\r\n            this._tilemap.indexedBitmaps[i] = [];\r\n            for(let tile = 0; tile < tileset.tilecount; tile++) {\r\n                if(tileset.tiles[tile]) {\r\n                    let bitmap = ImageManager.loadParserTileset(tileset.tiles[tile].image, 0);\r\n                    this._tilemap.bitmaps.push(bitmap);\r\n                    this._tilemap.indexedBitmaps[i][tile] = bitmap;\r\n                }\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    this._tilemap.refreshTileset();\r\n    this._tileset = $gameMap.tiledData.tilesets;\r\n};\r\n\r\nlet _update = Spriteset_Map.prototype.update;\r\nSpriteset_Map.prototype.update = function () {\r\n    _update.call(this);\r\n    //Disabed updateHideOnLevel, since it got moved to the general layer hide functions\r\n    //this._updateHideOnLevel();\r\n    this._updateHideOnSpecial();\r\n    this._updateReflectSurface();\r\n    this._tilemap.updateImageLayer();\r\n};\r\n\r\nSpriteset_Map.prototype.updateTileset = function () {\r\n    if (this._tileset !== $gameMap.tiledData.tilesets) {\r\n        this.loadTileset();\r\n    }\r\n};\r\n\r\nSpriteset_Map.prototype._updateHideOnLevel = function () {\r\n    this._tilemap.hideOnLevel($gameMap.currentMapLevel);\r\n};\r\n\r\nSpriteset_Map.prototype._updateHideOnSpecial = function () {\r\n    if($gamePlayer && $gameMap) {\r\n        this._tilemap.hideOnSpecial();\r\n    }\r\n};\r\n\r\nconst _isReflectSurface = (layerData) => {\r\n    const properties = layerData.properties;\r\n    return !!properties && properties.reflectionSurface;\r\n};\r\n\r\nSpriteset_Map.prototype.createReflectionMask = function () {\r\n    const tiledData = $gameMap.tiledData;\r\n    for (const layerData of tiledData.layers) {\r\n        if (!_isReflectSurface(layerData)) {\r\n            continue;\r\n        }\r\n\r\n        const mask = newRectMask(\r\n            $gameMap.width() * $gameMap.tileWidth(),\r\n            $gameMap.height() * $gameMap.tileHeight(),\r\n            layerData,\r\n        )\r\n\r\n        // hax mask id\r\n        mask.maskId = layerData.properties.reflectionSurface;\r\n\r\n        this._reflectSurfaceSprite.addChild(mask);\r\n    }\r\n};\r\n\r\nconst _createCharacters = Spriteset_Map.prototype.createCharacters;\r\nSpriteset_Map.prototype.createCharacters = function() {\r\n    _createCharacters.call(this);\r\n\r\n    $gameMap.events().forEach(function(event) {\r\n        const sprite = new Sprite_CharacterReflect(event);\r\n        this._characterSprites.push(sprite);\r\n        this._tilemap.addChild(sprite);\r\n    }, this);\r\n    $gameMap.vehicles().forEach(function(vehicle) {\r\n        const sprite = new Sprite_CharacterReflect(vehicle);\r\n        this._characterSprites.push(sprite);\r\n        this._tilemap.addChild(sprite);\r\n    }, this);\r\n    $gamePlayer.followers().reverseEach(function(follower) {\r\n        const sprite = new Sprite_CharacterReflect(follower);\r\n        this._characterSprites.push(sprite);\r\n        this._tilemap.addChild(sprite);\r\n    }, this);\r\n    const sprite = new Sprite_CharacterReflect($gamePlayer);\r\n    this._characterSprites.push(sprite);\r\n    this._tilemap.addChild(sprite);\r\n\r\n    for (const sprite of this._characterSprites) {\r\n        sprite.reflectMaskList = this._reflectSurfaceSprite.children;\r\n    }\r\n};\r\n\r\nSpriteset_Map.prototype._updateReflectSurface = function() {\r\n    if (!this._reflectSurfaceSprite) {\r\n        return;\r\n    }\r\n    this._reflectSurfaceSprite.x = -$gameMap.displayX() * $gameMap.tileWidth();\r\n    this._reflectSurfaceSprite.y = -$gameMap.displayY() * $gameMap.tileHeight();\r\n};","export const newRectMask = (mapWidth, mapHeight, layerData) => {\r\n    const maskRect = new PIXI.Graphics();\r\n    const obj = layerData.objects[0];\r\n    maskRect.beginFill(0xffffff);\r\n    maskRect.drawRect(0, 0, obj.width, obj.height);\r\n    maskRect.endFill();\r\n\r\n    const maskTexture = PIXI.RenderTexture.create(mapWidth, mapHeight);\r\n    const maskSprite = new PIXI.Sprite(maskTexture);\r\n    maskRect.position.set(obj.x, obj.y);\r\n    Graphics._renderer.render(maskRect, maskTexture, false, null, false);\r\n\r\n    return maskSprite;\r\n}","export class Sprite_CharacterReflect extends Sprite_Character {\r\n    initMembers() {\r\n        super.initMembers();\r\n        this.visible = false;\r\n        this.reflectMaskList = [];\r\n    }\r\n\r\n    update() {\r\n        super.update();\r\n        this.updateReflect();\r\n    }\r\n\r\n    updateReflect() {\r\n        this.visible = this._character.reflections.length > 0;\r\n        const reflection = this._character.reflections[0];\r\n        if (!reflection) {\r\n            return;\r\n        }\r\n        this.scale.y = reflection.reflectionCast > 0 ? -1 : 1;\r\n        this.opacity = reflection.reflectionOpacity || 255;\r\n\r\n        if (!reflection.reflectionMask) {\r\n            return;\r\n        }\r\n        const mask = this.reflectMaskList.find(mask => mask.maskId === reflection.reflectionMask);\r\n        if (mask) {\r\n            this.mask = mask;\r\n        }\r\n    }\r\n\r\n    updatePosition() {\r\n        const reflection = this._character.reflections[0];\r\n        this.x = this._character.screenX();\r\n        this.y = this._character.screenY();\r\n        this.z = this._character.screenZ();\r\n        if (!reflection) {\r\n            return;\r\n        }\r\n        this.y += $gameMap.tileHeight() * reflection.reflectionCast;\r\n        if (reflection.reflectionCast > 0) {\r\n            this.y -= $gameMap.tileHeight();\r\n        }\r\n        this.y += reflection.reflectionOffset;\r\n    }\r\n}"],"sourceRoot":""}